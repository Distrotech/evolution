2000-04-17  Dan Winship  <danw@helixcode.com>

	* tests/test-url.c: New program to test CamelURL

2000-04-16  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/ebook/e-card.c,
	addressbook/backend/ebook/e-card.h,
	addressbook/backend/ebook/test-card.c,
	addressbook/backend/pas/pas-backend-file.c,
	addressbook/contact-editor/e-contact-editor.c: Added
	orginizational unit, nickname, and internet free-busy fields.

	* addressbook/contact-editor/contact-editor.glade: Renamed some
	incorrectly named fields.

2000-04-16  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/ebook/e-card.c,
	addressbook/backend/ebook/e-card.h,
	addressbook/backend/ebook/test-card.c,
	addressbook/backend/pas/pas-backend-file.c,
	addressbook/gui/minicard/e-minicard.c: Added orginization and role
	fields.

	* addressbook/contact-editor/contact-editor.glade,
	addressbook/contact-editor/e-contact-editor-strings.h: Renamed
	some incorrectly named fields.

	* addressbook/contact-editor/e-contact-editor.c: Added
	orginization and role fields as well as hooking up the birth date
	field.

	* addressbook/gui/minicard/e-minicard-view.c: Added a missing include.

2000-04-15  Matt Loper  <matt@helixcode.com>

	* addressbook/gui/component/addressbook.c
	(search_entry_activated): New function. Gets called when the quick
	search entry is called on to perform a search.
	(make_quick_search_widget): New function; returns a "quick search"
	widget.
	(control_activate): During the construction of the toolbar, a
	"quick search" widget is included.

2000-04-14  Chris Toshok  <toshok@helixcode.com>

	* tests/.cvsignore: add test12

	* tests/test12.c (main): add test for nntp stuff.

	* tests/Makefile.am (noinst_PROGRAMS): same.


2000-04-14  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/ebook/e-card.c,
	addressbook/backend/ebook/e-card.h,
	addressbook/backend/pas/pas-backend-file.c,
	addressbook/backend/pas/pas-backend-ldap.c,
	addressbook/contact-editor/e-contact-editor.c: Added a note field.

2000-04-15  Ettore Perazzoli  <ettore@helixcode.com>

	* addressbook/backend/ebook/e-card-cursor.h: #include
	"addressbook/backend/ebook" to make sure we pick up the right
	addressbook.h.  Butt ugly, but at least it makes it possible for
	me to build Evolution.

	* addressbook/gui/minicard/Makefile.am (INCLUDES): Use
	`$(builddir)' so that we pick up the IDL-generated includes
	correctly.
	* addressbook/backend/pas/Makefile.am: Likewise.  Also use
	`$(srcdir)'.

	* addressbook/backend/ebook/Makefile.am: Use `$(srcdir)' so that
	it works with builddir != srcdir.
	* addressbook/backend/pas/Makefile.am: Likewise.

2000-04-14  Chris Toshok  <toshok@helixcode.com>

	* addressbook/backend/pas/pas-backend-ldap.c
	(pas_backend_ldap_ensure_connected): don't ldap_simple_bind_s if
	the ldap_open failed, and fix warnings.
	(pas_backend_ldap_build_all_cards_list): don't do search if the
	ensure_connected failed, and fix warnings.
	(pas_backend_ldap_search): same.
	(poll_ldap): fix warnings.
	(pas_backend_ldap_process_get_book_view): same.
	(pas_backend_ldap_get_vcard): same.
	(pas_backend_ldap_load_uri): same.

	* configure.in: quiet configure in the case where it can't find
	ldap libs.

2000-04-13  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/contact-editor/e-contact-editor.c (extract_info):
	Check for 0 length fields when building the outgoing ECard.

2000-04-13  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/pas/pas-book-view.c: Give correct warnings.

	* addressbook/backend/ebook/e-card.c (e_card_set_arg): g_strdup
	url and title.

2000-04-13  Chris Toshok  <toshok@helixcode.com>

	* addressbook/contact-editor/e-contact-editor.c
	(fill_in_info): reflect the title attribute in the contact editor.
	(extract_info): same.

	* addressbook/backend/pas/pas-backend-ldap.c: add the title attribute.

	* addressbook/gui/minicard/test-reflow.c: add a title.

	* addressbook/gui/minicard/e-minicard.c (remodel): add support for
	the title attribute.

	* addressbook/backend/ebook/e-card.c (e_card_get_vcard): save out
	the title to the vcard.

	* addressbook/backend/ebook/test-card.c: add title field foo to
	the test.

	* addressbook/backend/ebook/e-card.c: reflect the title field.

	* addressbook/backend/ebook/e-card.h: un-#if 0 the title field.

	* addressbook/backend/pas/pas-backend-ldap.c (poll_ldap): new
	function that polls ldap for more search responses.
	(pas_backend_ldap_search): use the async search interface and
	register an idle call to poll for the responses.
	(view_destroy): make sure to g_source_remove the idle id.

2000-04-12  Chris Toshok  <toshok@helixcode.com>

	* addressbook/backend/pas/pas-backend-file.c (entry_compare):
	rework this function to use a table mapping search field names to
	vcard properties and extra information (such as whether or not the
	property is a list.)
	
	* addressbook/backend/pas/pas-backend-ldap.c
	(construct_email_list): new function, to build the ECardList for
	email addresses.
	(construct_phone_list): new function, to build the ECardList for
	phone numbers.
	(pas_backend_ldap_search): use a table mapping ldap attributes to
	ecard properties, and use the special list construction functions
	if the property calls for it.  general cleanup.  added a comment
	about not calling ber_free if there was a decoding error.


2000-04-12  Matt Loper  <matt@helixcode.com>

	* art/Makefile.am: Add tigert's contact-dlg-related images.

	* addressbook/contact-editor/e-contact-editor.c (_add_images): Add
	tigert's images.

	* addressbook/contact-editor/Makefile.am: add EVOLUTION_IMAGES.

2000-04-12  Tuomas Kuosmanen  <tigert@gimp.org>

	* art/house.png, art/malehead.png, art/cellphone.png, 
	art/briefcase.png, art/envelope.png, art/globe.png:
	New icons for the contact manager.. more to follow once I get 
	around to do more artist work..

2000-04-12  Chris Toshok  <toshok@helixcode.com>

	* addressbook/backend/pas/pas-backend-ldap.c
	(pas_backend_ldap_build_all_cards_list): delay the setting of the
	ldap variable until we've ensured we were connected.  Also, set
	the search limit to LDAP_MAX_SEARCH_RESPONSES (we'll eventually
	want a user setting here i assume.)
	(pas_backend_ldap_search): same here, and also send back lists of
	CARDS_PER_VIEW_NOTIFICATION length in each
	pas_book_view_notify_add call.  also, don't call ber_free if there
	was a decoding error, since the ldap library frees it for us.

2000-04-11  Miguel de Icaza  <miguel@gnu.org>

	* configure.in (have_pthread): Properly use AC_ARG_WITH

2000-04-11  Chris Toshok  <toshok@helixcode.com>

	* wombat/Makefile.am (wombat_LDADD): add LDAP_LIBS here.

	* configure.in: check for -lldap and -llber and if both are
	present include ldap support in the pas/wombat.

	* addressbook/backend/pas/Makefile.am (libpas_la_SOURCES): include
	pas-backend.ldap.c if ENABLE_LDAP.

	* addressbook/backend/pas/pas-backend-ldap.c: get searching
	working (converting between the sexp and ldap stuff.)

	* wombat/wombat.c (setup_pas): register the ldap pas backend if
	HAVE_LDAP is defined.

2000-04-11  Christopher James Lahey  <clahey@helixcode.com>

	* configure.in: Changed AC_DEFUN to AC_DEFINE.

	* acconfig.h: Added HAVE_TIMEZONE and HAVE_TM_GMTOFF.

2000-04-11  Chris Toshok  <toshok@helixcode.com>

	* configure.in: check for timezone as a variable (as it is in
	linux, but not in freebsd or netbsd.)

2000-04-11  Larry Ewing  <lewing@helixcode.com>

	* widgets/e-table/e-cell-toggle.c (etog_draw): update for new
	gdk-pixbuf.  Added a disabled chuck of code to do alpha blending
	on pixmaps.

2000-04-11  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-text/e-text.c: Moved some logic a bit.  Minor changes.

00-04-11  Iain Holmes  <ih@csd.abdn.ac.uk>

	* widgets/e-text/e-text.c
	(e_text_set_args): Recalculate bounds when width or clip_width changes.
	(tooltip_event): Forward clicks on the tooltip onto the text item.
	(_do_tooltip): Correct the origin co-ordinates to the items co-ords.
	(e_text_point): Return 0 when the mouse is on the item.
	(_do_tooltip): Make the tooltip obey the parent items
	line_wrap and max_lines.

00-04-11  Chris Toshok  <toshok@helixcode.com>

	* addressbook/backend/pas/pas-backend-file.c
	(get_e_card_prop): new function, taking code from func_contains to
	get string properties.
	(entry_compare): new function generic, taking strstr-like function
	as a parameter.
	(func_contains): rewrite function to use entry_compare.
	(is_helper): new helper function to map strcmp to a strstr-like
	function.
	(func_is): new function, implementing "is" for searches.
	(endswith_helper): new function.
	(func_endswith) new function, implementing "endswith" for
	searches.
	(beginswith_helper): new function.
	(func_beginswith): new function, implementing "beginswith" for
	searches.
	(compare_email): new function for searching all email addresses of
	a contact.
	(compare_phone): new function for searching all phone numbers of a
	contact.
	(compare_address): new function for searching all addresses of a
	contact (unimplemented as yet).
	(entry_compare): add support for searching the list items "email",
	"phone" and "address".
	(vcard_matches_search): free the esexp_result.
	(entry_compare): we want comparison functions to take 2 args.

2000-04-11  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/gui/minicard/e-minicard-view.c: This was setting
	E_REFLOW(view)->items to NULL too soon.  Fixed now.

2000-04-11  Chris Toshok  <toshok@helixcode.com>

	* addressbook/backend/pas/pas-backend-file.c
	(pas_backend_file_search): remove spew.
	(pas_backend_file_process_create_card): move the sync to the
	earliest possible point after the db operation.
	(pas_backend_file_process_remove_card): same.
	(pas_backend_file_process_modify_card): same, and call
	pas_book_respond_modify, not pas_book_respond_remove, here.

	* addressbook/gui/component/addressbook.c (card_deleted_cb): new
	function.
	(delete_contact_cb): wire up button to call
	e_minicard_view_remove_selection.

	* addressbook/gui/minicard/e-minicard-view.c
	(e_minicard_view_remove_selection): fix warning, and stick "view"
	in the name.

2000-04-10  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/ebook/e-book-view.c,
	addressbook/backend/ebook/e-book.c: Changed some incorrect
	gtk_object_refs and gtk_object_unrefs into bonobo_object_refs and
	bonobo_object_unrefs.

	* addressbook/backend/pas/pas-card-cursor.c: Changed a
	gtk_object_destroy to a gtk_object_unref.

	* addressbook/gui/minicard/e-minicard-view.c,
	addressbook/gui/minicard/e-minicard-view.h: Set a list pointer to
	NULL after freeing its contents.  Added
	e_minicard_view_remove_selection function.

	* addressbook/gui/minicard/e-reflow.c: Set a list pointer to NULL
	after freeing its contents.

2000-04-11  Chris Toshok  <toshok@helixcode.com>

	* addressbook/gui/component/addressbook.c (find_contact_cb):
	implement braindead dialog to input the query string for the view.

	also, change all callbacks to get the EMinicardView instead of the
	EBook.

	* addressbook/gui/minicard/e-minicard-view.c
	(e_minicard_view_get_arg): add missing break.

2000-04-10  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/gui/minicard/e-minicard-view.c,
	addressbook/gui/minicard/e-minicard-view.h: Added a "query"
	argument to the e-minicard-view.  Documented all the arguments to
	the e-minicard-view.

2000-04-10  Chris Toshok  <toshok@helixcode.com>

	* addressbook/gui/minicard/e-minicard-view.c (get_view): change
	the empty search string ("") to the valid (contains "full_name" "").

	* wombat/Makefile.am (wombat_LDADD): reorder so libeutil.la comes
	after libpas (since it uses the sexp stuff now.)

	* addressbook/backend/pas/Makefile.am (INCLUDES): add
	-I$(top_srcdir)/addressbook/backend/ebook

	* addressbook/backend/pas/pas-backend-file.c
	(view_destroy): free the search context and unref the sexp.
	(string_to_dbt): save the zero byte of strings, so we don't have
	to g_strndup everywhere.
	(func_contains): new function, implementing the (contains) search
	function.
	(vcard_matches_search): generic predicate to tell whether or not a
	vcard entry matches the current book view.
	(pas_backend_file_search): rip some of this code out of
	get_book_view (the portion building the list of cards) and make it
	use the e-sexp stuff.
	(pas_backend_file_process_create_card): use vcard_matches_search
	to only notify if the card will appear in the view.
	(pas_backend_file_process_remove_card): use vcard_matches_search
	to only notify if the card will be removed from the view.
	(pas_backend_file_process_modify_card): use vcard_matches_search
	to notify if the modified card was added, removed, or changed in
	the view.
	
2000-04-10  Miguel de Icaza  <miguel@gnu.org>

	* configure.in (GNOME_PRINT_CFLAGS): Update to support
	--disable-threads correctly.

2000-04-10  Chris Toshok  <toshok@helixcode.com>

	* addressbook/backend/pas/pas-backend-file.c
	(pas_backend_file_process_get_book_view): use view != NULL instead
	of checking db_error when we call pas_book_respond_get_book_view)

2000-04-10  Dan Winship  <danw@helixcode.com>

	* configure.in: check for mkstemp

2000-04-10  Damon Chaplin  <damon@helixcode.com>

	* configure.in (AC_OUTPUT): removed libical stuff since it has its
	own configure.in.

2000-04-10  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/ebook/e-book-view.c: Fixed a bug where I was
	sending the wrong information to some callbacks.

	* addressbook/backend/ebook/e-card.c,
	addressbook/backend/ebook/e-card.h: Added an e_card_duplicate
	function.  Made ids get stored in vcards.  Made sure to delete the
	url if it exists.

	* addressbook/backend/pas/Makefile.am: Made pas include
	addressbook/backend/ebook/ in the search path.

	* addressbook/backend/pas/pas-backend-file.c: Fixed some bugs and
	made the create card function store the generated id in the card
	being saved.

	* addressbook/backend/pas/pas-book-view.c: Fixed a double free
	bug.

	* addressbook/contact-editor/e-contact-editor.c: Fixed some bugs.
	Made the contact editor actually return a valid card when
	gtk_object_get(editor, "card", ...) is called.

	* addressbook/contact-editor/e-contact-editor.h: Fixed a copy and
	paste error.

	* addressbook/gui/component/addressbook.c: Made this get the card
	properly.

	* addressbook/gui/minicard/Makefile.am: Made this include
	contact-editor directory in the search path and link against
	libecontacteditor so that double clicking can open a dialog.

	* addressbook/gui/minicard/e-minicard.c: Fixed some small bugs.
	Made double clicking open a contact editor dialog if this minicard
	is contained in a minicard view.  (It needs the minicard view to
	get the EBook to save to.

	* wombat/Makefile.am: Link wombat against libebook, since
	pas-backend-file now uses ECard.

2000-04-09  Matt Loper  <matt@helixcode.com>

	* addressbook/gui/component/addressbook.c (control_activate): Make
	"New Contact" menuitem add a card with new_contact_cb().
	
	* addressbook/Makefile.am: Compile contact-editor, _then_ gui,
	since the gui now depends on the contact editor (shouldn't the
	contact-editor directory be moved into 'gui'?).

	* addressbook/gui/component/addressbook.c (card_added_cb): New
	function. Gets called when a card is successfully added via the
	contact-editor.
	(new_contact_cb): New function. Gets called when a user clicks the
	"new contact" button on the toolbar, and creates a contact-editor
	to edit a new contact entry.
	(control_activate): Call gnome_app_fill_toolbar_with_data()
	instead of gnome_app_fill_toolbar(), so that our toolbar can find
	the right book to add a new card to.
	(addressbook_factory): On an "activate" signal, send the book up
	to control_activate_cb.

	* addressbook/gui/component/addressbook-factory.c (init_bonobo):
	Call glade_gnome_init(), so that our contact-editor (which
	requires glade) doesn't barf.

	* addressbook/gui/component/Makefile.am: added the contact-editor
	to our libraries and include files.

	* addressbook/contact-editor/e-contact-editor.c
	(e_contact_editor_new): Set "card" gtk property to the passed-in
	card property.

	* addressbook/gui/component/addressbook.c (addressbook_factory):
	Added gtk_widget_push/pop_colormap/visual, which I assume is
	necessary for canvas use.

2000-04-08  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/contact-editor/Makefile.am,
	addressbook/contact-editor/e-contact-editor.c,
	addressbook/contact-editor/e-contact-editor.h,
	addressbook/contact-editor/test-editor.c: Made the contact editor
	load from an ECard.

	* addressbook/backend/ebook/e-card.c,
	addressbook/backend/ebook/e-card.h,
	addressbook/gui/minicard/e-minicard.c: Added support for the URL
	field.

2000-04-08  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/ebook/e-card.c (e_card_get_vcard): Fixed a
	small typo.

2000-04-08  Dan Winship  <danw@helixcode.com>

	* art/Makefile.am: pixmap_DATA should have been images_DATA (after
	pixmapdir was renamed to imagesdir)

2000-04-08  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/gui/minicard/.cvsignore,
	addressbook/gui/minicard/Makefile.am,
	addressbook/gui/minicard/e-minicard-view.c,
	addressbook/gui/minicard/e-minicard-view.h,
	addressbook/gui/minicard/e-minicard.c,
	addressbook/gui/minicard/e-minicard.h,
	addressbook/gui/minicard/e-reflow-sorted.c,
	addressbook/gui/minicard/e-reflow-sorted.h,
	addressbook/gui/minicard/e-reflow.c,
	addressbook/gui/minicard/e-reflow.h,
	addressbook/gui/minicard/test-minicard-view.c,
	addressbook/gui/minicard/test-reflow.c,
	widgets/e-minicard/.cvsignore, widgets/e-minicard/Makefile.am,
	widgets/e-minicard/e-minicard-label.c,
	widgets/e-minicard/e-minicard-label.h,
	widgets/e-minicard/e-minicard-view.c,
	widgets/e-minicard/e-minicard-view.h,
	widgets/e-minicard/e-minicard.c, widgets/e-minicard/e-minicard.h,
	widgets/e-minicard/e-reflow-sorted.c,
	widgets/e-minicard/e-reflow-sorted.h,
	widgets/e-minicard/e-reflow.c, widgets/e-minicard/e-reflow.h,
	widgets/e-minicard/test-minicard-label.c,
	widgets/e-minicard/test-minicard-view.c,
	widgets/e-minicard/test-minicard.c,
	widgets/e-minicard/test-reflow.c: CVS move mistake.  Fixed the
	correct changes in the correct places.

2000-04-08  Christopher James Lahey  <clahey@helixcode.com>

	* art/Makefile.am: pixmap_DATA isn't defined so don't use it as a variable.

	* addressbook/gui/component/,
	addressbook/gui/component/.cvsignore, addressbook/gui/Makefile.am,
	addressbook/gui/component/addressbook-factory.c,
	addressbook/gui/component/addressbook.c,
	addressbook/gui/component/addressbook.gnorba,
	addressbook/gui/component/addressbook.h: New directory to proivde
	the component for contact management.  Simply uses an e-minicard-view.

	* addressbook/gui/minicard/e-minicard-view.c,
	addressbook/gui/minicard/e-minicard-view.h: New subclass of
	e-reflow-sorted that takes an EBook and uses it to compute the
	card data to display.

	* addressbook/gui/minicard/e-minicard.c,
	addressbook/gui/minicard/e-minicard.h: This now backends to a
	ECard instead of a ETableModel.

	* addressbook/gui/minicard/e-reflow.c,
	addressbook/gui/minicard/e-reflow.h: This now has a virtualized
	add method.

	* addressbook/gui/minicard/e-reflow-sorted.c,
	addressbook/gui/minicard/e-reflow-sorted.h: New subclass of
	e-reflow that allows the data to be sorted on the fly.

	* addressbook/gui/minicard/test-minicard-view.c: New test to test
	the new minicard view.

	* addressbook/gui/minicard/test-reflow.c: Uses the new ECard
	backend of the e-minicard.

	* addressbook/gui/minicard/.cvsignore,
	addressbook/gui/minicard/Makefile.am: Added new test.  Fixed
	dependencies.  Added new files.

	* addressbook/gui/, addressbook/gui/Makefile.am,
	addressbook/gui/.cvsignore: New directory for addressbook gui
	bits.  Added subdirectories.  Created an initial .cvsignore.

	* addressbook/Makefile.am (SUBDIRS): Removed demo and added gui.

	* addressbook/backend/pas/pas-backend-file.c: Added code to do
	notification on bookviews when changes in the backend are made.

	* addressbook/backend/pas/pas-book-view.c,
	addressbook/backend/pas/pas-book-view.h: Added helper functions to
	notify the view about the addition or modification of a single
	card.  Fixed a mistaken extra free.

	* addressbook/backend/ebook/e-card-list-iterator.h: Fixed
	incorrect parent class.

	* addressbook/backend/ebook/test-client.c: Made this accept an
	optional parameter that specifies the vcard to add.

	* configure.in: Replaced widgets/e-minicard/Makefile and
	addressbook/demo/Makefile with addressbook/gui/minicard/Makefile
	and addressbook/gui/component/Makefile respectively.

	* widgets/Makefile.am: Removed e-minicard since it's being moved
	to addressbook/gui/minicard.

	* widgets/e-text/e-text.c: Fixed the border width around tooltips
	and made the main tooltip area yellow.

2000-04-08  Dan Winship  <danw@helixcode.com>

	* configure.in, acconfig.h: add SYSTEM_MAIL_DIR

2000-04-08  Jesus Bravo Alvarez  <jba@pobox.com>

	* configure.in (ALL_LINGUAS): Added Galician (gl).

2000-04-07  Jeffrey Stedfast  <fejj@stampede.org>
	* configure.in: Modified to create camel/providers/smtp/Makefile

2000-04-07  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-text/e-text.c: Made text tooltips appear in place.
	Iain figured out that to get them to not appear, we hide the
	tooltip when the mouse leaves the tooltip window, not the canvas
	item (this works because the tooltip window always covers the
	canvas item completely.)

2000-04-07  Matt Loper  <matt@helixcode.com>

	* addressbook/demo/addressbook.c (control_activate_cb): New
	function. Called when the control is (de)activated.
	(control_activate): New function; called when the control is
	activated, and sets up toolbar/menu times.
	(control_deactivate): New function; removes those toolbar/menu
	items.
	(do_nothing_cb): Does nothing :-)
	(addressbook_factory): Hook up to control_activate_cb().

2000-04-07  Chris Toshok  <toshok@laptoph.xtoph.org>

	* addressbook/backend/pas/pas-backend-file.c
	(pas_backend_file_process_get_book_view): correctly (well,
	untested) implement.
	(view_destroy): new function.

2000-04-06  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/demo/demo.c, addressbook/demo/addressbook-widget.c:
	Changed calls to e_cell_text_new to match new function signature.

2000-04-06  Miguel de Icaza  <miguel@gnu.org>

	* art/Makefile.am (images_DATA): Renamed from pixmaps to images. 

2000-04-05  Matt Loper  <matt@helixcode.com>

	* README: Added wombat.

2000-04-04  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-text/e-text-test.c: Got rid of some runtime errors.
	Changed to "fixed" font so that it will work on everyone's
	machine.  Added a white background rectangle.  Made resizing the
	window resize the contained text item.  Changed to using affines
	(e_canvas_item_move_absolute) instead of "x" and "y" attributes.
	Set the text in the entries so that they match the original values
	of the displayed text object.

2000-04-04  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-minicard/e-minicard.c: Fixed some referencing and
	lifetime issues.

2000-04-04  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-text/e-text.c: Removed an unnecessary get_bounds call.

	(From a patch by Iain Holmes <ih@csd.abdn.ac.uk>)

	* widgets/e-text/e-text.c: Made tooltips look more like the
	underlying text.  Made tooltips show up more consistently.

2000-04-04  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/demo/Makefile.am, addressbook/demo/e-test-model.c,
	addressbook/demo/e-test-model.h: Changed this to backend to an
	ebook.

	* addressbook/backend/ebook/e-card-iterator.c,
	addressbook/backend/ebook/e-card-iterator.h,
	addressbook/backend/ebook/e-card-list-iterator.c,
	addressbook/backend/ebook/e-card-list.c,
	addressbook/backend/ebook/e-card-list.h,
	addressbook/backend/ebook/e-card.c,
	addressbook/backend/ebook/e-card.h: Fixed const correctness and
	changed a couple of functions to be external.
	
	* addressbook/Makefile.am: Fixed subdir ordering.

2000-04-04  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/ebook/e-book-view.c: Fixed an incorrect
	function.

	* addressbook/backend/ebook/e-book-view.h,
	addressbook/backend/ebook/e-book.h: Fixed some incorrect function
	pointer declarations.

	* addressbook/backend/ebook/e-card-iterator.c,
	addressbook/backend/ebook/e-card-iterator.h,
	addressbook/backend/ebook/e-card-list-iterator.c,
	addressbook/backend/ebook/e-card-list-iterator.h,
	addressbook/backend/ebook/e-card-list.c,
	addressbook/backend/ebook/e-card-list.h,
	addressbook/backend/ebook/e-card.c,
	addressbook/backend/ebook/e-card.h,
	addressbook/backend/ebook/test-card.c: Built new iterator system
	for getting fields with multiple entries.

	* addressbook/backend/ebook/Makefile.am: Added new files
	addressbook/backend/ebook/e-card-iterator.c,
	addressbook/backend/ebook/e-card-iterator.h,
	addressbook/backend/ebook/e-card-list-iterator.c,
	addressbook/backend/ebook/e-card-list-iterator.h,
	addressbook/backend/ebook/e-card-list.c, and
	addressbook/backend/ebook/e-card-list.h.

2000-04-04  Yuri Syrota  <rasta@renome.rovno.ua>

	* configure.in: Added uk to ALL_LINGUAS.

2000-04-04  Andreas Hyden  <a.hyden@cyberpoint.se>

	* configure.in: Added no and sv to ALL_LINGUAS.

2000-04-03  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/ebook/e-card-cursor.h,
	addressbook/backend/ebook/e-card.c: A bit of clean up.
	
	* addressbook/backend/ebook/e-book-types.h,
	addressbook/backend/ebook/e-book-view-listener.c,
	addressbook/backend/ebook/e-book-view-listener.h,
	addressbook/backend/ebook/e-book-view.c,
	addressbook/backend/ebook/e-book-view.h,
	addressbook/backend/pas/pas-book-view.c,
	addressbook/backend/pas/pas-book-view.h: New files for live views.

	* addressbook/backend/ebook/Makefile.am,
	addressbook/backend/ebook/e-book-listener.c,
	addressbook/backend/ebook/e-book-listener.h,
	addressbook/backend/ebook/e-book.c,
	addressbook/backend/ebook/e-book.h,
	addressbook/backend/ebook/test-client-list.c,
	addressbook/backend/ebook/test-client.c,
	addressbook/backend/pas/pas-backend-file.c,
	addressbook/backend/pas/pas-book.c,
	addressbook/backend/pas/pas-book.h,
	addressbook/backend/idl/addressbook.idl: Added live views and
	searching to the interface (neither is working yet.)

2000-04-01  Matt Loper  <matt@helixcode.com>

	* tests/.cvsignore: Added test-movemail.

	* art/.cvsignore: New file.

2000-03-31  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/demo/demo.c, addressbook/demo/addressbook-widget.c:
	Added some missing gtk_object_refs.

2000-03-30  Matt Loper  <matt@helixcode.com>

	* addressbook/backend/pas/pas-backend-file.c
	(pas_backend_file_build_all_cards_list): Get first card (with
	R_FIRST) on first seq().

2000-03-30  Chris Toshok  <toshok@laptoph.xtoph.org>

	* addressbook/backend/pas/pas-backend-ldap.h: new-file
	* addressbook/backend/pas/pas-backend-ldap.c: new file

2000-03-30  Dan Winship  <danw@helixcode.com>
	
	* configure.in:
	* Makefile.am:
	* art/Makefile.am: install new shortcut bar pixmaps.

2000-03-30  Tuomas Kuosmanen  <tigert@gimp.org>

	* art/evolution-calendar.png art/evolution-inbox.png 
	art/evolution-tasks.png	art/evolution-contacts.png 
	art/evolution-notes.png evolution-today.png:
	added some artwork for the main shortcutbar.. someone
	could stick them in it.

2000-03-29  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/ebook/e-card-cursor.c: Fixed management of
	the corba-cursor object by calling CORBA_Object_duplicate on it on
	e-card-cursor creation and calling CORBA_Object_release on
	e-card-cursor destruction.  Also, properly free string returned
	from Evolution_CardCursor_get_nth function.

2000-03-29  Matt Loper  <matt@helixcode.com>

	* addressbook/backend/ebook/test-client.c (get_cursor_cb): Added
	some debugging.

	* addressbook/backend/ebook/e-book-listener.c: Added inline
	documentation for exposed functions.
	* addressbook/backend/ebook/e-card-cursor.c: same.
	* addressbook/backend/ebook/e-card.c: same.

	* Makefile.am: add calendar compilation back in.

	* addressbook/backend/pas/pas-book-factory.c
	(PAS_BOOK_FACTORY_GOAD_ID): changed to
	"evolution:addressbook-server".

	* addressbook/backend/pas/Makefile.am: no need to install a
	.gnorba file from here, as the wombat.gnorba file in
	evolution/wombat will do its job.

	* addressbook/backend/ebook/test-client.c (ebook_create): if
	ebook_new fails, print a warning and return.

	* addressbook/backend/ebook/e-book.c (CARDSERVER_GOAD_ID): changed
	to "evolution:addressbook-server".

	* wombat/wombat.c: Changed headerfile path.

	* wombat/Makefile.am: Use relative paths to libraries in the build
	tree, rather than requiring libraries (such as libpcs) to already
	be installed.

2000-03-28  Matt Loper  <matt@helixcode.com>

	* wombat/Makefile.am: new file.

	* wombat/wombat.gnorba: Cleaned up.

	* wombat/wombat.c (setup_pcs): filled in the rest.
	
	* Makefile.am: added wombat.

	* wombat/wombat.gnorba: new file.

	* wombat/.cvsignore: new file.

	* wombat/wombat.c (setup_pcs): fill out this function some.

	* configure.in: added wombat.

2000-03-28  Chris Toshok  <toshok@laptoph.xtoph.org>

	* addressbook/backend/pas/pas-card-cursor.c (create_cursor): use
	g_new0 to allocate the BonoboObjectServant.

	* addressbook/backend/pas/pas-backend-file.c
	(pas_backend_file_build_all_cards_list): remove unnecessary
	strdup/free.

2000-03-28  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/pas/pas-backend-file.c: Removed an infinite
	loop.

	* addressbook/backend/ebook/test-client-list.c: New test that
	doesn't add an extra database item.

	* addressbook/backend/ebook/Makefile.am,
	addressbook/backend/ebook/.cvsignore: Added test-client-list.

2000-03-28  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/pas/pas-card-cursor.c: Fixed memory
	allocation.

	* addressbook/backend/pas/pas-backend-file.c: Fixed memory
	allocation.  Made database stuff not do an extra entry.

	* addressbook/backend/ebook/test-client.c: Add test for
	get_all_cards functionality.  Changed database name to test.db.

	* addressbook/backend/ebook/e-card-cursor.c: Changed bonobo_object
	to gtk_object in a couple of places.

2000-03-28  Chris Toshok  <toshok@laptoph.xtoph.org>

	* addressbook/backend/pas/pas-backend-file.c
	(pas_backend_file_create_unique_id): create id's for entries using
	the following format: ("pas-id-%08lX%08X", time(NULL), c++).
	
2000-03-27  Dan Winship  <danw@helixcode.com>

	* tests/test-movemail.c: new test program. Can be used to copy POP
	mail into your evolution inbox.

2000-03-27  Chris Toshok  <toshok@laptoph.xtoph.org>

	* addressbook/backend/pas/pas-backend-file.c
	(pas_backend_file_get_vcard): remove unneeded g_strdup;
	(get_length): implement function.
	(get_nth): implement function.
	(cursor_destroy): free up the internal glist of vcards, and fix
	warning.
	(pas_backend_file_build_all_cards_list): new function, to build up
	the list of cards in the db.
	(pas_backend_file_process_get_all_cards): call
	pas_backend_file_build_+all_cards_list, and fix warning.

2000-03-27  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/ebook/test-card.c: Fixed some warnings.

	* addressbook/backend/ebook/test-client.c: Added a section to test
	cursors and returning an id when adding.

	* addressbook/backend/ebook/e-card-pairs.h: Removed the address
	pairs since they were added to e-card.c.

	* addressbook/backend/ebook/e-card.c,
	addressbook/backend/ebook/e-card.h: Made the set_id function take
	a const char *.

	* addressbook/backend/ebook/e-book-listener.c,
	addressbook/backend/ebook/e-book-listener.h,
	addressbook/backend/ebook/e-book.c,
	addressbook/backend/ebook/e-book.h,
	addressbook/backend/idl/addressbook.idl,
	addressbook/backend/pas/pas-backend-file.c,
	addressbook/backend/pas/pas-book.c,
	addressbook/backend/pas/pas-book.h: Added a get_all_cards function
	and made the response to the create_card function include the card
	id.

	* addressbook/backend/ebook/Makefile.am: Added e-card-cursor.c and
	e-card-cursor.h.

	* addressbook/backend/ebook/e-card-cursor.c,
	addressbook/backend/ebook/e-card-cursor.h: New class for proxying
	to an Evolution_CardCursor.

	* addressbook/backend/pas/Makefile.am: Added pas-card-cursor.c and
	pas-card-cursor.h.

	* addressbook/backend/pas/pas-card-cursor.c,
	addressbook/backend/pas/pas-card-cursor.h: New bonobo class for
	making an Evolution_CardCursor server.

2000-03-27  NotZed  <NotZed@HelixCode.com>

	* tests/test9.c (main): This test is basically now invalid.
	* tests/test11.c (main): Fix for async search api.  Probably works.
	Removed camel-mbox-*.h headers, should be private.

2000-03-27  Tuomas Kuosmanen  <tigert@gimp.org>
	* art/attachment.xpm art/mail-new.xpm art/mail-read.xpm
	art/mail-replied.xpm art/mark.xpm art/meeting.xpm
	art/priority-high.xpm art/priority-low.xpm

	Added some new icons for the message-list view..

2000-03-26  Chris Toshok  <toshok@laptoph.xtoph.org>

	* configure.in: check for db_185.h (present in newer db
	distributions.)

	* addressbook/backend/pas/pas-backend-file.c
	(pas_backend_file_create_unique_id): new function.
	(pas_backend_file_process_create_card): call
	pas_backend_file_create_unique_id and pas_book_notify_add (if the
	db->put was successful).  also, sync out db.
	(pas_backend_file_process_remove_card): call
	pas_book_notify_remove if the db->del was successful, and sync out
	db.
	(pas_backend_file_process_modify_card): call
	pas_book_notify_change if db->put was successful, and sync out db.
	(string_to_dbt): new function.
	(pas_backend_file_process_create_card): use string_to_dbt
	(pas_backend_file_process_remove_card): likewise
	(pas_backend_file_process_modify_card): likewise
	(pas_backend_file_get_vcard): likewise
	(pas_backend_file_upgrade_db): new function, to upgrade a db file
	if we change the data format.
	(pas_backend_file_maybe_upgrade_db): check db version vs. current
	code version, and upgrade it necessary.
	(pas_backend_file_load_uri): call pas_backend_file_maybe_upgrade.

2000-03-26  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/ebook/test-client.c: Load an ECard instead
	of a VCard and then get the VCard from that ECard.  Just tests
	ECard and the client stuff at the same time.  Also, replaces
	carriage returns with newlines.

	* addressbook/backend/ebook/e-book.c: Fixed a small parity error.

2000-03-25  Chris Toshok  <toshok@laptoph.xtoph.org>

	* addressbook/backend/ebook/test-client.c: create a card and then
	look it up.

2000-03-26  Chris Toshok  <toshok@laptoph.xtoph.org>

	* addressbook/backend/pas/pas-backend-file.c
	(pas_backend_file_process_create_card): add db calls to flesh out
	the interface.  hardcoded id that needs to change, once we decide
	how we're going to create it.
	(pas_backend_file_process_remove_card): add db calls to flesh out
	the interface.
	(pas_backend_file_process_modify_card): likewise
	(pas_backend_file_process_check_connection): likewise
	(pas_backend_file_get_vcard): likewise
	(pas_backend_file_load_uri): likewise

2000-03-26  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/ebook/e-book.c: Set the card id properly
	when retrieving a card.

2000-03-22  NotZed  <NotZed@HelixCode.com>

	* e-util/e-sexp.h: Formatting cleanup.

2000-03-07  NotZed  <NotZed@HelixCode.com>

	* e-util/Makefile.am (libeutil_la_SOURCES): s-sexp.h -> e-sexp.h.

	* addressbook/backend/ebook/e-card.c,
	addressbook/backend/ebook/e-card.h: Added the ability to set the
	card's id (and made getting it work correctly also.)

2000-03-25  Chris Toshok  <toshok@laptoph.xtoph.org>

	* addressbook/backend/ebook/e-book.c (e_book_pop_op): pass GList*
	as second parameter to g_list_remove_link, not the data pointer.

2000-03-26  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/ebook/e-card-types.h: Removed the
	address->description field.
	
	* addressbook/backend/ebook/e-card.c: Added VCard output and
	the use of GtkArguments.

	* addressbook/backend/ebook/test-card.c: Updated this to use the
	GtkArguments.

	* addressbook/backend/ebook/e-book.c: Fixed a memory leak.

2000-03-25  Matt Loper  <matt@helixcode.com>

	* ebook/e-book.c,
	ebook/e-book.h,	
	ebook/e-book.h,		
	ebook/e-card-fields.h,
	ebook/e-card.h,
	ebook/e-commerce.h: old, removed. Up-to-date EBook stuff is kept
	in addressbook/backend/ebook.

2000-03-23  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/ebook/e-card.c,
	addressbook/backend/ebook/e-card.h,
	addressbook/backend/ebook/e-card-types.h,
	addressbook/backend/ebook/e-card-pairs.h,
	addressbook/backend/ebook/test-card.c: Added parsing and testing
	for name, full name, birthday, telephone, email, and street
	address properties.

2000-03-22  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/backend/ebook/.cvsignore,
	addressbook/backend/pas/.cvsignore,
	addressbook/backend/idl/.cvsignore,
	addressbook/backend/.cvsignore: Updated .cvsignore files.

2000-03-22  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/Makefile.am, configure.in: Added the
	addressbook/backend directory.

	* addressbook/backend/Makefile.am: Removed the libversit directory
	as it's now included in the base evolution directory.

	* addressbook/backend/ebook/e-card-pairs.h,
	addressbook/backend/ebook/Makefile.am: Changed the place where
	libversit is looked for.

	* addressbook/backend/ebook/e-book-listener.c: Fixed some
	indentation.

	* addressbook/backend/ebook/e-card-pairs.h,
	addressbook/backend/ebook/e-card-types.h: Commented out some code
	to get this to compile.

	* addressbook/backend/ebook/e-card.c,
	addressbook/backend/ebook/e-card.h: Turned this into a GTK+
	object.

	* addressbook/backend/pas/pas.c,
	addressbook/backend/ebook/test-client.c: Include gnome.h and
	gnorba.h.

	* addressbook/backend/idl/addressbook.idl: Include Bonobo.idl
	instead of bonobo-unknown.idl.

	* addressbook/backend/pas/pas-backend-file.c,
	addressbook/backend/pas/pas-book.c,
	addressbook/contact-editor/test-editor.c,
	addressbook/contact-editor/e-contact-editor.c,
	addressbook/printing/e-contact-print.c,
	addressbook/printing/test-contact-print-style-editor.c,
	addressbook/printing/test-print.c: Killed some warnings.

2000-03-21  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-text/e-text.c: Changed gnome_canvas_item_grab_focus to
	e_canvas_item_grab_focus.

2000-03-21  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/demo/addressbook-widget.c: Make background pixmap
	get properly set to NULL.

2000-03-20  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-text/e-text.c, widgets/e-text/e-text.h: Added the
	ability to access the text event processor.

2000-03-13  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/demo/addressbook-widget.c: Made the addressbook
	component look in the users home directory for the addressbook.xml
	file.

2000-03-20  Matt Loper  <matt@helixcode.com>

	* tests/ui-tests/.cvsignore: added filter.

	* addressbook/demo/.cvsignore: added test-addressbook.

2000-03-17 Elliot Lee <sopwith@redhat.com>
	* calendar/cal-client/Makefile.am,
	calendar/cal-util/Makefile.am, calendar/gui/Makefile.am,
	calendar/pcs/Makefile.am, mail/Makefile.am,
	widgets/e-text/Makefile.am: Fix for srcdir != builddir.

2000-03-14  Dan Winship  <danw@helixcode.com>

	* Makefile.am (SUBDIRS): build shell before mail, since mail
	relies on the shell idl files being compiled.

2000-03-13  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/demo/Makefile.am: Added files for addressbook bonobo
	component.  Changed non bonobo version to compile as
	test-addressbook.

	* addressbook/demo/addressbook.c,
	addressbook/demo/addressbook.gnorba,
	addressbook/demo/addressbook.h,
	addressbook/demo/addressbook-factory.c,
	addressbook/demo/addressbook-widget.c,
	addressbook/demo/addressbook-widget.h: New factory to create an
	addressbook bonobo component.

2000-03-12  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-text/.cvsignore: Added e-text-test.

	* addressbook/demo/e-test-model.c,
	addressbook/demo/e-test-model.h: A model storing data in an array
	of Address objects.

	* addressbook/demo/demo.c: Changed to use
	addressbook/demo/e-test-model.c and
	addressbook/demo/e-test-model.h.

	* addressbook/demo/Makefile.am: Added e-test-model.c and
	e-test-model.h.

2000-03-12  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/Makefile.am: Rearranged SUBDIRS for dependencies.

	* widgets/e-text/e-text-model.c, widgets/e-text-model.h: New
	object which stores a piece of text data.  All methods are
	virtual.

	* widgets/e-text/e-text.c, widgets/e-text/e-text.h: Modified this
	to use an ETextModel for its data.

	* widgets/e-text/Makefile.am: Added e-text-model.c and e-text-model.h.

	* widgets/e-minicard/test-minicard-label.c: Made this work again.

	* widgets/e-minicard/e-minicard.c,
	widgets/e-minicard/e-minicard.h: Made this use an ETableModel to
	get its data.

	* widgets/e-minicard/e-minicard-label.c,
	widgets/e-minicard/e-minicard-label.h: Added the ability to set
	the text model used for the contained text widget.

	* widgets/e-minicard/Makefile.am: Added e-table since e-minicard
	is now dependent on an e-table-model for its data.

	* addressbook/demo, addressbook/demo/.cvsignore,
	addressbook/demo/Makefile.am, addressbook/demo/demo.c,
	addressbook/demo/spec: A new program to test ETable and EMinicard
	integration.

	* configure.in: Added addressbook/demo/Makefile.

	* addressbook/Makefile.am: Added the demo/ subdirectory.

2000-03-10  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-minicard/e-minicard.c,
	widgets/e-minicard/e-minicard-label.c,
	widgets/e-minicard/e-minicard-label.h,
	widgets/e-minicard/e-reflow.c, widgets/e-minicard/test-reflow.c,
	widgets/e-text/e-text.c, widgets/e-text/e-text.h: Adapted to use
	the new e-canvas reflow system.

2000-03-07  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-text/e-text.c, widgets/e-text/e-text.h: Added a
	"break_characters" argument.  It lets you define a set of
	characters which should cause optional linebreaks to occur.  Made
	setting the "clip_height" argument to -1 mean no height clipping.
	Moved calling the "resize" signal into an idle handler to avoid
	reentering the canvas update loop.  Made EText recalc bounds if
	the affine has changed.  Fixed up tooltip_count (this counts the
	number of ENTER and LEAVE events.)

	* widgets/e-text/e-text-test.c: Got rid of a few warnings.

	* widgets/e-minicard/e-minicard-label.h: Reindent a few lines.

	* widgets/e-minicard/e-minicard.c,
	widgets/e-minicard/e-minicard-label.c: Switch from using "x" and
	"y" to set the children's position to using
	e_canvas_item_move_absolute.

2000-03-05  Matt Loper  <matt.loper@splashtech.com>

	* tests/ui-tests/message-browser.c: Commenting added.
	(on_url_data_requested): renamed from "on_url_requested", to
	reflect that a stream of data is what's actually being asked for.
	(hydrate_persist_stream_from_gstring): New function.
	(camel_stream_to_gstring): New function.
	(on_object_requested): Cleaned up.

2000-03-04  bertrand  <bertrand@helixcode.com>

	* tests/ui-tests/Makefile.am: add bonobo to the build 
	process.

	* tests/ui-tests/message-browser.c (main): 
	initialize Bonobo. Use bonobo_main.
	(get_gtk_html_contents_window): set signal handlers
	for url requests and objects requests.
	(on_object_requested): answer to object requests.

2000-03-03  bertrand  <bertrand@helixcode.com>

	* tests/ui-tests/message-browser.c (main): initialize
	gdkrgb. Push visual/colormap.
	(on_url_requested): in the case where a camel url is requested, 
	write the camel stream to gtkhtml. 

	* tests/ui-tests/Makefile.am (filter_LDADD): add
	gnomeprint in the lib list. 

2000-03-01  Ettore Perazzoli  <ettore@helixcode.com>
	
	* configure.in: Build `filter/Makefile'.  Added check for GtkHTML.
	Set `GTKHTML_CFLAGS' and `GTKHTML_LIBS' to the appropriate values
	for linking with GtkHTML.

2000-03-01  Federico Mena Quintero  <federico@helixcode.com>

	* configure.in (AC_OUTPUT): Added calendar/idl/Makefile,
	calendar/cal-client/Makefile, and calendar/pcs/Makefile to the
	list of files to generate.

2000-02-29  Iain Holmes  <ih@csd.abdn.ac.uk>

	* widgets/e-text/e-text.c: Don't show the tooltip if the text is being
	editted or isn't clipped. Remove the tooltip when editting starts.

	* widgets/e-text/Makefile.am: Build the test program

2000-02-29  NotZed  <NotZed@HelixCode.com>

	* tests/ui-tests/Makefile.am (filter_LDADD): Added test program.

	* tests/ui-tests/filterdescription.xml, saveoptions.xml: Data
	files for test program.

	* tests/ui-tests/filter.c (main): Test program for filter ui.

2000-02-28  NotZed  <NotZed@HelixCode.com>

	* widgets/e-minicard/Makefile.am (INCLUDES): Fixed references to
	eutil.

	* Makefile.am (SUBDIRS): Build e-util before other stuff.
	(SUBDIRS): Build filter after camel.

2000-02-28  Chris Lahey  <clahey@umich.edu>

	* widgets/e-text/e-text.c: Compilation error.

2000-02-28  Chris Lahey  <clahey@umich.edu>

	* widgets/e-text/e-text.c, widgets/e-text/e-text.h: Updated these
	to use the canvas ::update system properly.

2000-02-24  Dan Winship  <danw@helixcode.com>

	* acconfig.h:
	* configure.in: define SENDMAIL_PATH with the path to sendmail.

2000-02-24  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-text.c, widgets/e-text.h, e-text-event-processor.c,
	e-text-event-processor.h, e-text-event-processor-emacs-like.c,
	e-text-event-processor-emacs-like.h,
	e-text-event-processor-types.h: This were moved to widgets/e-text/
	a while ago but never removed.  They have now been removed.

	* widgets/e-text/e-text.c, widgets/e-text/e-text.h: Removed some
	warnings from this file.  Made tooltips disappear when you're
	finished with them.

	* widgets/e-minicard/test-reflow.c,
	widgets/e-minicard/test-minicard.c,
	widgets/e-minicard/test-minicard-label.c: Commented out unused
	about_callback functions.

	* widgets/e-minicard/e-reflow.c: Made e-reflow pass an EFocus to
	its e-minicard children.

	* widgets/e-minicard/e-minicard.c: Made e-minicard take and return
	an EFocus for its "has_focus" argument.  This makes shift-tab work properly.

	* widgets/e-minicard/e-minicard-label.c: Made e-minicard-label take and return
	an EFocus for its "has_focus" argument.  Made the font that
	e-minicard-label uses only be allocated once.
	
2000-02-21  Matt Loper  <matt@helixcode.com>

	* tests/ui-tests/message-browser.c (on_link_clicked): stop
	sscanf() abuse.

	* tests/Makefile.am: changed references to libibex.a to
	libibex.la.

	* libical/src/libical/.cvsignore: Added *.lo, *.la, and .libs.
	* libical/src/libicalss/.cvsignore: same.

	* tests/.cvsignore: Added test11.

	* libical/Makefile.in: autogenerated file removed from cvs, and
	added to .cvsignore.
	* libical/src/Makefile.in: same.
	* libical/src/libical/Makefile.in: same.
	* libical/src/libicalss/Makefile.in: same.

2000-02-22  bertrand  <Bertrand.Guiheneuf@aful.org>

	* tests/ui-tests/message-browser.c (on_link_clicked): 
	uggly hack to test part saving and
	b64 streams.

2000-02-21  Dan Winship  <danw@helixcode.com>

	* tests/test10.c:
	* tests/test11.c: update for camel changes

2000-02-20  Matt Loper  <matt@helixcode.com>

	* tests/Makefile.am: Changed dependencies on libibex.la to
	libibex.a. In test9_LDADD, placed libcamelmbox.la before
	libibex.la, as the former requires the latter.

2000-02-20  Iain Holmes  <ih@csd.abdn.ac.uk>

	* widgets/e-text/e-text.[ch] (_do_tooltip): Show the text of the item,
	in a tooltip style.
	(e_text_event): Add a timeout on the Enter and remove it on the Leave
	events.

	* e-text-test.c: New file to test e-text items.
	
2000-02-20  Matt Loper  <matt@helixcode.com>

	* .cvsignore: added ABOUT-NLS.  
	* ABOUT-NLS: removed.
	
2000-02-19  Matt Loper  <matt@helixcode.com>

	* tests/ui-tests/message-browser.c (on_link_clicked): When a link
	is clicked, indicate the link with a dialog.

	* libical/src/test/.cvsignore: Added Makefile.

	* libical/.cvsignore: Added Makefile, configure, config.status.

	* libical/src/.cvsignore: New file.

	* libical/Makefile: autogenerated file removed from cvs.
	* libical/configure: same. 
	* libical/config.status: same.
	* libical/src/Makefile: same.
	* libical/src/test/Makefile: same.

	* widgets/e-minicard/.cvsignore: Added minicard-label-test,
	minicard-test, and reflow-test.

	* shell/.cvsignore: added files autogenerated from Evolution.idl.

	* libversit/.cvsignore: Added .libs, vcc.c, vcc.lo, vobject.lo,
	vcaltmp.lo, libversit.la

	* libical/src/test/.cvsignore: New file.

	* libical/src/libical/.cvsignore: New file.

	* libical/src/libicalss/.cvsignore: New file.

	* libical/.cvsignore: New file, with config.log in it.

	* tests/ui-tests/message-browser.c: minor cleanup.

	* tests/ui-tests/.cvsignore: added message-browser.

2000-02-18  NotZed  <NotZed@HelixCode.com>

	* tests/test11.c (main): Use a relative path to the mbox provider
	module.

2000-02-18  Matt Loper  <matt@helixcode.com>

	* tests/ui-tests/message-browser.c (filename_to_camel_msg): Call
	camel_data_wrapper_set_input_stream, rather than
	camel_data_wrapper_construct_from_stream.  For the whole message,
	allow someone to see the header ("to", "from", etc.).  Clicking on
	tree items to see their elements, now works also.

2000-02-18  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* configure.in: Make gnomeui the last library on the command line,
	as its path is the one most likely to hold other old libraries
	(libxml) and we need newer versions.
	
	(BONOBO_VFS_GNOME_CFLAGS): Add libical to the
	AC_CONFIG_SUBDIRS 

	(BONOBO_HTML_GNOME_CFLAGS): VFS checking needs to
	go before we rquery them. 

	Use the new method for gnome-print
	checking instead of the old crufty gtk+ based one that nobody can
	debug.  ever.
	
2000-02-16  Matt Loper  <matt@helixcode.com>

	* tests/ui-tests/message-browser.c (tree_selection_changed): New
	callback function, which will later change the main html window to
	reflect the newly-selected tree item.
	(get_gtk_html_contents_window): New function. Gets the content
	part of a message.
	(get_gtk_html_header_window): New function. Will get the header
	part of a message, when applicable.

	* camel/camel-formatter.c (str_tolower): Now returns a new string,
	rather than changing it in place.
	(initialize_camel_formatter): New function; gives a root
	CamelDataWrapper and a stream to a CamelFormatter.
	(camel_formatter_wrapper_to_html): New function. Translates any
	CamelDataWrapper into html.
	(lookup_unique_id): Allows the root object to be a
	CamelDataWrapper, which is more general than the previously
	required CamelMimeMessage.


2000-02-14  NotZed  <notzed@zedzone.helixcode.com>

	* configure.in (EXTRA_GNOME_CFLAGS): Add libunicode to CFLAGS/LIBS.

2000-02-13  NotZed  <notzed@zedzone.helixcode.com>

	* configure.in: Added check for libunicode.

	* Makefile.am (SUBDIRS): Added libibex.

	* tests/test11.c (main): New test, tests search api.

2000-02-13  Matt Loper  <matt@helixcode.com>

	* tests/ui-tests/test-multipart-mixed.msg: New rfc822 file, which
	crashes message-browser.

	* tests/ui-tests/message-browser.c (get_gtk_html_window): Takes a
	CamelMimeMessage as a param, rather than a filename.
	(main): Puts our windows in an hpane rather than a vbox. Also
	opens a file dlg box if a filename wasn't given as a first param.

	* camel/camel-stream-fs.c (_init_with_name): Set stream_fs->fd to
	-1 if we fail to load the file.
	(camel_stream_fs_new_with_name): If stream_fs->fd is -1, return
	NULL. These changes make it so that a CamelStreamFs won't be
	created if you give it a bogus filename; they may be replaced once
	exception handling is in place.

	* tests/ui-tests/message-browser.c (handle_tree_item): Expand tree
	items.
	(mime_message_to_html): New function; translates a
	CamelMimeMessage into two strings (one for the header, and one for
	the body).
	(get_gtk_html_window): New function; fills out a window with
	html. The html is taken from a processed rfc822 file, via a
	CamelFormatter.

	* camel/camel-formatter.c: Added assertions.
	(handle_text_html): Don't call text_to_html on something that's
	already html.
	(multipart_foreach): function deleted.

	* tests/ui-tests/message-browser.c: Added preliminary support for
	the viewing of messages via gtkhtml. Lots of commenting. 

2000-02-11  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/contact-editor/e-contact-editor.c: Fixed the
	location the first time you see the drop down menus for changing
	which phone, email, or snail mail address you see.

2000-02-11  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-text/e-text.c (e_text_event): Made a click on a text
	widget set the cursor properly.

2000-02-11  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-text/e-text.h: Removed some arguments from the .h that
	will never be implemented.


2000-02-10  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/data-wrapper-repository.c (data_wrapper_repository_init): 
	default the text/* mime types to CamelSimpleDataWrapper so
	that Michael can use get_stream. 

2000-02-10  NotZed  <notzed@zedzone.helixcode.com>

	* camel/camel-simple-data-wrapper-stream.h: The superclass is
	actually a seekable stream, not just a stream.

2000-02-10  bertrand  <Bertrand.Guiheneuf@aful.org>

	* tests/Makefile.am (THREAD_RELATED_TESTS): don't 
	build thread related tests if evolution has been
	compiled with no thread support.

	* configure.in (have_pthread): allow user to enable/disable
	thread support at configure time
	(EXTRA_GNOME_CFLAGS): 
	(EXTRA_GNOME_LIBS): thread support is directly 
	included in this variable if enabled. No more
	EXTRA_GNOME_CFLAGS_THREADS
	Other special support should be added in 
	EXTRA_GNOME_LIBS and EXTRA_GNOME_CFLAGS
	instead of redefining a new variable 
	each time we want to add a new lib. 
	(bonobo, ....)

	* camel/camel.c (camel_init): only try to initialize threads if
	we enabled threads support. 

	* tests/ui-tests/Makefile.am (message_browser_LDADD): use
	EXTRA_GNOME_LIBS

	* configure.in (have_pthread): remove HAVE_PTHREADS
	variable. Define ENABLE_THREADS instead.

	* camel/Makefile.am: use ENABLE_THREADS not HAVE_PTHREADS
	to test if we build thread relateed code. 

	* tests/Makefile.am: use EXTRA_GNOME_LIBS, 
	not EXTRA_GNOME_LIBS_THREADS

2000-02-10  NotZed  <notzed@zedzone.helixcode.com>

	* camel/hash-table-utils.c (g_strcase_hash): Removed a bizarre
	comparison construct for converting case.

2000-02-09  NotZed  <notzed@zedzone.helixcode.com>

	* camel/data-wrapper-repository.c (data_wrapper_repository_init):
	Uses case-insensitive compares.

	* camel/gmime-content-field.c (gmime_content_field_new): Uses
	case-insensitive compares.

	* camel/data-wrapper-repository.c (data_wrapper_repository_init):
	Use case-insensitive mime types.

	* camel/camel-simple-data-wrapper-stream.c (read): Increment the
	copy source address to match the data read offset.
	(seek): Actually implement the seek.

	* camel/camel-mime-part-utils.c
	(camel_mime_part_store_stream_in_buffer): If we get a -1 read,
	DONT update the total bytes, and try and truncate the array in
	reverse.  Eek.

	* camel/camel-mime-part.c (camel_mime_part_encoding_from_string):
	This was DEFINETLEY not the right way to do it. strncmp!=strcmp
	(camel_mime_part_encoding_to_string): Handle the default case.
	: include string.h for strcmp() etc.

2000-02-09  Matt Loper  <matt@helixcode.com>

	* tests/ui-tests/test-multipart-alt.msg: New test file; run
	message-browser on it, and it will crash.

2000-02-09  bertrand  <Bertrand.Guiheneuf@aful.org>

	* tests/ui-tests/message-browser.c (handle_tree_item): 
	show the item. 
	(handle_tree_item): show the containers and the containees
	(get_message_tree_ctrl): call handle_tree_item
	on the message itself

	* camel/camel-mime-message.c (camel_mime_message_init): 
	set the mime type to "mime/message".
	--- THIS IS NOT THE CONTENT TYPE ---

	* camel/camel-mime-body-part.c (camel_mime_body_part_init): 
	set the mime type to "body-part". 
	--- THIS IS NOT THE CONTENT TYPE ---

	* camel/camel-data-wrapper.c (camel_data_wrapper_set_mime_type): 
	mime_type is const. 
	(_set_input_stream): really set the input stream
	(_set_output_stream): really set the output stream
	various other typo fixes.

	* tests/ui-tests/message-browser.c: various typo
	fixes in the ctree construction. 

	* camel/string-utils.c (string_trim): fix braindead
	trailing trim bug.

	* camel/gmime-content-field.c (gmime_content_field_construct_from_string): 
	strip the leading and trailing quotes when constructing the 
	content field. This should be done in a more generic 
	RFC822 approach, but this fixes a bug that prevent
	matt from analysing some multipart messages.

	* camel/camel-data-wrapper.h: reorganize the 
	deprecated and new methods. 

	* camel/providers/mbox/camel-mbox-folder.c 
	(_check_get_or_maybe_generate_summary_file): 
	Use "From " as the message separating string. 
	
	* camel/providers/mbox/camel-mbox-folder.c (_append_message): 
	set the mode when creating the mbox file. 	

	* camel/providers/mbox/camel-mbox-utils.c (camel_mbox_write_xev): 
	ditto
	* camel/providers/mbox/camel-mbox-summary.c (camel_mbox_save_summary): 
	ditto

2000-02-09  Matt Loper  <matt@helixcode.com>

	* tests/ui-tests/message-browser.c (print_usage_and_quit): Minor
	cleanup.

2000-02-09  NotZed  <notzed@zedzone.helixcode.com>

	* camel/camel-simple-data-wrapper-stream.c (class_init): Actually
	initialise the class.  It simple couldn't have worked before.
	(camel_simple_data_wrapper_stream_construct): Commented out code
	which crashes just to get something working, memory corruption??

2000-02-09  Christopher James Lahey  <clahey@helixcode.com>

	* configure.in: Add new Makefiles to Makefile list.

	* widgets/e-text/Makefile.am: Build libetext.

	* widgets/e-minicard/Makefile.am: Build libeminicard and test
	programs.

	* widgets/Makefile.am: Remove all e-text and e-minicard code and
	add them to the SUBDIRS list.

2000-02-08  Matt Loper  <matt@helixcode.com>

	* tests/ui-tests/message-browser.c: New file; shows a message in
	tree format, where multipart's have multiple leaves.

	* camel/camel-formatter.c: Changed references from
	'multipart/alternate' to 'multipart/alternative'.

	* tests/test-formatter.c (convert_to_html_and_print): Use the
	buffer length of the stream to create strings which are then
	printed, rather than printing the stream (which might not have a
	trailing \0) directly.

	* camel/camel-formatter.c (str_tolower): New function; makes a
	string lowercase.

	* tests/test-formatter.c (convert_to_html_and_print): Fixed call
	to 'camel_formatter_mime_message_to_html' to contain correct
	params.

	* camel/camel-formatter.c: New member to 'CamelFormatterPrivate',
	'attachments', will be used to let the caller know which items
	should be treated as attachments (as opposed to objects which are
	inline to the body).
	(text_to_html): name changed from 'encode_entities'. Also now
	converts newlines to <br> tags.
	(camel_formatter_mime_message_to_html): Now takes two output
	streams -- one for the header, and one for the body.
	(get_bonobo_tag_for_object): New function; tries to make a tag out
	of (1) the leaf of a mime message and (2) a bonobo object that can
	handle its mime type, but can return NULL if it fails to find the
	mime type.
	(handle_vcard): New function; will write out a vcard as html.

2000-02-07  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-text.h, widgets/e-text.c: Added line wrap and a max
	number of lines (max number of lines is only obeyed if text is not
	being edited).

2000-02-07  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/printing/e-contact-print.c: Removed an unneccessary
	include of libhnj.  All uses of libhnj are commented out.

2000-02-07  Matt Loper  <matt@helixcode.com>

	* camel/camel-formatter.c (mime_part_to_html): function deleted.

	* tests/test-formatter.c (print_usage_and_quit): New function,
	which gives usage information.

	* camel/camel-formatter.c: made the 'stream' a member of the
	CamelFormatter class, so that streams don't have to be explicitly
	sent as a param where a CamelFormatter is also sent..
	(handle_text_plain): Use 'encode_entities' to change '<' to
	'&gt;', etc.

2000-02-03  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-formatter.c (find_preferred_displayable_body_part_in_multipart_alternative): 
	(mime_part_to_html): typo fix : 
	use find_preferred_displayable_body_part_in_multipart_alternative
	instead of the other names. Allows camel to have no undefined symbols. 

2000-02-02  Matt Loper  <matt@helixcode.com>

	* tests/test-formatter.c: New file; intended to test the
	CamelFormatter class.

	* camel/camel-formatter.c: Lots of cleanup, commenting, some new
	functions, and a really basic skeleton for getting bonobo objects
	into the html.
	(encode_entities): New function, stolen from Daniel Velliard.

2000-01-28  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/printing/e-contact-print-style-editor.h,
	addressbook/printing/e-contact-print-style-editor.c,
	addressbook/printing/test-contact-print-style-editor.c: Files to
	load the contact print style editor from the glade file.  Doesn't
	really do anything yet.

	* addressbook/printing/Makefile.am: Added style editor stuff.

	* addressbook/printing/e-contact-print.glade: Changed a bit.
	Fixed an out of place widget.

	* addressbook/printing/.cvsignore: Added
	contact-print-style-editor-test.

	* addressbook/printing/smallbook.ecps: Fixed up the values to
	match the new types.

	* addressbook/printing/medbook.ecps,
	addressbook/printing/phonelist.ecps: Added two new printing
	styles.

	* addressbook/printing/e-contact-print.h: Fixed an incorrect
	comment.
	
	* addressbook/printing/e-contact-print.c: Added columns and letter
	tabs.  Tweaked spacing all over the place.  Fixed card height
	function so that column wrapping is always done correctly.  Added
	pulling of style information from a file.  Added line wrapping
	within each text field.

	* addressbook/printing/e-contact-print-types.h: Added a type field
	for different types of print styles.


2000-01-28  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-text.c (e_text_command): Handle the grab and ungrab
	command instead of doing focus by hand.  This fixes a problem
	related to the scroll wheel.
	(e_text_command): Reset the blink timer in many more command
	situations so that the cursor blinks less when you're interacting
	with it.

	* widgets/e-text-event-processor-emacs-like.c: Send the grab focus
	command when starting a selection and the ungrab focus command
	when ending it.

	* widgets/e-text-event-processor-types.h: Added grab command type
	so that the event processor can tell the widget to grab the focus.

	* widgets/e-reflow.c: Redefined all sizes using #defines so that
	they can be tweaked later.  Added scroll wheel handling and set up
	adjustment increments so that the scroll bars will work correctly.

	* widgets/e-minicard.h: Added minicard focus type enum.  This
	doesn't mean anything yet, but it will later be used to say which
	direction the focus is coming from (below for shift-tab, above for
	tab.)

2000-01-28  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-minicard-label.c, widgets/e-minicard.c: Use
	e_canvas_item_grab_focus so that it will work with old versions of
	gnome-canvas.

	* widgets/e-canvas.c, widgets/e-canvas.h: Finished working around
	focus bugs.

2000-01-28  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/test-reflow.c: Set the minimum_width.

	* widgets/e-reflow.h, widgets/e-reflow.c: Added one more column
	line so that the right edge of the reflow will have a line.  Also
	added a minimum_width so that even if the reflow is thinner than
	the window, when you resize it larger all the lines are drawn.

2000-01-27  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-reflow.h, widgets/e-reflow.c: Added an arrow cursor
	for the draggable columns.  Made the clickable column area
	larger.  

	* widgets/e-text.h, widgets/e-text.c: Added an I beam cursor for
	the text item when it is editable.

	* widgets/e-minicard-label.c: Forward enter and leave
	notifications to the contained editable text item.

2000-01-26  Matt Loper  <matt@helixcode.com>

	* camel/camel-formatter.c: By looking up a mimetype in a
	hashtable, we can now get a handler function for an arbitrary
	mimetype.

2000-01-25  Mathieu Lacage <mathieu@advogato.org>

	* .cvsignore s: cvs shutup. 

2000-01-25  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-reflow.c, widgets/e-minicard.c: Handle shift-tab
	properly now.

	* widgets/e-minicard-label.c: Reindented some areas.

	* widgets/test-reflow.c: Use e-canvas.  Set the back pixmap to
	NULL for the canvas so that scrolling won't flash grey.

	* widgets/e-canvas.c, widgets/e-canvas.h: These subclass
	GnomeCanvas to work around a few bugs so that evolution will work
	well with old versions of gnome-libs.

	* widgets/Makefile.am: Added e-canvas.c and e-canvas.h.

	* addressbook/contact-editor/contact-editor.glade: Not much
	change.  Mostly internal reorganization by glade itself.

2000-01-25  Christopher James Lahey  <clahey@helixcode.com>

	* addressbook/printing/smallbook.ecps: Example contact printing
	style.  Not used yet.

	* addressbook/printing/e-contact-print.glade: A glade file for
	editing contact printing styles.  Not used yet.

	* addressbook/printing/test-print.c: Test file for printing.

	* addressbook/printing/e-contact-print.c,
	addressbook/printing/e-contact-print.h,
	addressbook/printing/e-contact-print-types.h,
	addressbook/printing/Makefile.am, addressbook/printing/.cvsignore:
	New files for contact printing support.

	* addressbook/Makefile.am (SUBDIRS): Add printing.

	* configure.in: Check for gnome-print.  Build the
	addressbook/printing Makefile.

2000-01-24  bertrand  <bertrand@helixcode.com>

	* camel/camel-data-wrapper.h: 
	* camel/camel-data-wrapper.c 
	(_set_input_stream): 
	(_get_input_stream): 
	(_set_output_stream): 
	(_get_output_stream): 
	The CamelDataWrapper can now be provided with input and
	output streams, so that nothing has to be kept in memory. 
	
	* camel/camel-stream.c (camel_stream_class_init): 
	added the "data_available" signal.
	

2000-01-24  Federico Mena Quintero  <federico@helixcode.com>

	* configure.in: Added the gnome-pilot and capplet checks; they
	will likely be reworked for the Evolution framework, but for now
	the calendar/ directory needs them.

	* configure.in: Added checks for gnome-vfs.

2000-01-24  bertrand  <bertrand@helixcode.com>

	* camel/camel-seekable-stream.c: 
	* camel/camel-seekable-stream.h: 
	new files. 
	
	* camel/camel-simple-data-wrapper-stream.h:  parent class is now
	CamelSeekableStream
	* camel/camel-stream-buffered-fs.h: idem
	* camel/camel-stream-buffered-fs.c: idem
	* camel/camel-stream-mem.h: idem
	* camel/camel-stream-mem.c: idem
	(_seek): change declaration
	* camel/camel-stream-fs.c: parent class is now
	CamelSeekableStream
	(_seek): change declaration

	* camel/camel-stream-fs.h: parent class is now
	CamelSeekableStream
	
	* camel/camel-stream-fs.[ch]: converted all 
	gint64 variables into guint32. 
	
	
	* camel/camel-stream-fs.c (_read): fix stupid bug.
	(_write): ditto. 

	* camel/camel-exception.c (camel_exception_new): don't
	forget to clean the exception when creating it. 

	* camel/camel-recipient.c (camel_recipient_table_add_list): 
	add recipient_list to the recipients, not recipients_list. 
	I don't know what that variable was doing here. 


2000-01-24  Matt Loper  <matt@helixcode.com>

	* camel/camel-formatter.c (write_header_info_to_stream): new
	function, broken out from 'camel_formatter_make_html'.
	(write_mimepart_to_stream): same.
	(find_text_body_part_in_multipart_related): new function.
	(camel_formatter_make_html): Now tries to deal with
	multipart/related, multipart/alternate, and text/(plain|html).


2000-01-23  bertrand  <bertrand@helixcode.com>

	* camel/camel-store.c (camel_store_get_session): 
	added a public get_session method.

	* camel/providers/mbox/camel-mbox-summary.c (camel_mbox_save_summary): 
	(camel_mbox_load_summary): load/save message sizes in the summary file

	* camel/providers/mbox/camel-mbox-summary.h: 
	added a size field to the message information 
	structure. 

	* camel/providers/mbox/camel-mbox-utils.c (parsed_information_to_mbox_summary): 
	copy message size to the mbox summary information too. 
	
	* camel/camel-stream-fs.c (_seek): updated to 
	work with bounded fs streams. 
	(_write): ditto.
	(_read): ditto.

	* camel/camel-stream-fs.h (struct ): 
	added the cur_pos, inf_bound and sup_bound
	members to allow for bounded fs stream. 

	* camel/camel-stream-fs.c (_set_bounds): new func.
	(_init_with_fd_and_bounds): idem.
	(_init_with_name_and_bounds): idem. 
	New functions to allow the usage of bounded fs streams.

	The bounded fs stream allow, for example, to make a stream
	from a message stored in an mbox file. 
	
	
2000-01-22  bertrand  <bertrand@helixcode.com>

	* camel/providers/mbox/camel-mbox-folder.c (_check_get_or_maybe_generate_summary_file): 
	use the real summary file path instead of a 
	stupid hardcoded one. Fixes yet another bug.

	* camel/providers/mbox/camel-mbox-utils.c (parsed_information_to_mbox_summary): 
	don't forget to copy the date too. Fix a very annoying bug.

	* camel/providers/mbox/camel-mbox-folder.c (_append_message): 
	implemented. A lot of fixes too. Works now. 
	(_get_uid_list): implemented.

2000-01-21  bertrand  <bertrand@helixcode.com>

	* tests/test10.c:
	test the mbox provider. 

	* camel/camel-folder.c (_set_name): 
	if camel_folder_get_mode returns an
	exception, return it instead of
	overriding it with a new one.
	(camel_folder_is_open): make the is_open
	method public.
	(_set_name): use the is_open instead of
	get_mode.
	(_set_name): set the fullname even in the case 
	where the folder has no parent.
	(_set_name): use %c, not %d to add the 
	separator char into the full path.

	* camel/camel-store.c: add exception handling everywhere in
	the store related functions arguments. 
	* camel/providers/mbox/camel-mbox-folder.c: idem
	* camel/providers/mbox/camel-mbox-folder.h: idem
	* camel/providers/mbox/camel-mbox-store.h: idem

	* camel/providers/mbox/Makefile.am (libcamelmbox_la_SOURCES): 
	added camel-mbox-provider.c to the mbox provider
	sources. 

	* camel/providers/mbox/camel-mbox-provider.c: 
	provider registration code.

	* camel/providers/mbox/camel-mbox-folder.c (_get_message_count): implemented
	(_append_message): implemented

	* camel/providers/mbox/camel-mbox-parser.c (initialize_buffer): 
	use \0 to mark the end of the buffer.
	(read_next_buffer_chunk): ditto.
	(read_header): test the presence of a \0 instead of
	reading the eof field
	(read_message_begining): idem.
	(camel_mbox_parse_file): idem.
	Remove the eof field from the parser
	structure. 
	(read_next_buffer_chunk): removed some nasty bugs
	again. 

	
2000-01-21  Federico Mena Quintero  <federico@helixcode.com>
	
	* libversit/vcc.y: Removed the VFS crap; my mistake, it should not
	go here.

	* configure.in: Added yacc requirements for libversit.

2000-01-21  Matt Loper  <matt@helixcode.com>

	* camel/camel-formatter.c (camel_formatter_make_html): added a
	CamelMimeMessage as a param to this function, and removed it as a
	member of the object.

2000-01-21  Federico Mena Quintero  <federico@helixcode.com>

	* configure.in (AC_OUTPUT): Added libversit/Makefile and
	calendar/Makefile.

	* Makefile.am (SUBDIRS): Added libversit and calendar.

2000-01-20  bertrand  <bertrand@helixcode.com>

	* camel/providers/mbox/camel-mbox-parser.c (camel_mbox_parse_file): 
	compute and return the file size. 


2000-01-20  Matt Loper  <matt@helixcode.com>

	* camel/camel-formatter.c, camel/camel-formatter.h: New
	files. You'll be able to use a CamelFormatter to get
	html-formatted versions of a CamelMimeMessage.
	
2000-01-20  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-text-event-processor-types.h: Changed some line
	spacing.

	* widgets/test-reflow.c: Connected to the resize signal of the
	reflow.

	* widgets/e-minicard.c: Made width argument set function only
	update if width is different.

	* widgets/e-reflow.h, widgets/e-reflow.c: Added draggable column dividers.

	* addressbook/contact-editor/test-editor.c: Open two dialogs for
	more interesting testing.

	* addressbook/contact-editor/e-contact-editor.h,
	addressbook/contact-editor/e-contact-editor.c: Modified to use
	glade.  Added menus to change which phone/address/email entries to
	view.  Added images to the dialog.

	* addressbook/contact-editor/e-contact-editor-strings.h,
	addressbook/contact-editor/contact-editor.glade: Glade files for
	the contact editor dialog.

	* addressbook/contact-editor/Makefile.am: Added images and added
	glade stuff.

	* addressbook/contact-editor/arrow.png,
	addressbook/contact-editor/briefcase.png,
	addressbook/contact-editor/netfreebusy.png,
	addressbook/contact-editor/netmeeting.png: Image files for the
	contact editor dialog.

2000-01-19  bertrand  <bertrand@helixcode.com>

	* camel/providers/mbox/camel-mbox-folder.c (_get_message_count): 
	implemented.

	* camel/providers/mbox/camel-mbox-summary.c (camel_mbox_save_summary): 
	(camel_mbox_load_summary): save/load the next uid. 

	* camel/providers/mbox/camel-mbox-parser.c (camel_mbox_parse_file): 
	Compute the next available uid. 
	* camel/providers/mbox/camel-mbox-folder.c (_create): 
	(_check_get_or_maybe_generate_summary_file): 
	Set and use the next_uid field properly. 
	* camel/providers/mbox/camel-mbox-summary.h: added
	an extra field to store the next available uid. 

	* camel/providers/mbox/camel-mbox-folder.c 
	(_check_get_or_maybe_generate_summary_file): 
	routine called when the folder is opened. 
	Reads or creates the summary file. 
	(_create): initialize the internal summary 
	structure. 
	(_close): save the summary file on closing. 
	(_init_with_store): initialize mbox specific
	folder members. 

2000-01-18  bertrand  <bertrand@helixcode.com>

	* tests/test9.c:
	tests for summary and parsing process of mbox files. 

	* camel/providers/mbox/camel-mbox-parser.c (camel_mbox_parse_file): do
	not use case insensitive comp to detect message separators. Kill 
	some nasty bugs in netscape file parsing,

	* camel/providers/mbox/camel-mbox-utils.c (parsed_information_to_mbox_summary): 
	don't use g_array_append but write directly inside the
	array data instead. Better performance and bug fix. 

	* camel/providers/mbox/camel-mbox-summary.c (camel_mbox_load_summary): 
	fix the name and bugs. 

	* camel/camel-folder-summary.h: update the class
	method definition to match the public defs. 

	* camel/providers/mbox/camel-mbox-summary.c (camel_mbox_save_summary): 
	(mbox_load_summary): summary file read/write routines. 

	* camel/providers/mbox/camel-mbox-utils.c (parsed_information_to_mbox_summary): 
	routine to construct the summary after the mbox
	file has been parsed and the x-evolution fields
	inserted. 

2000-01-17  bertrand  <bertrand@helixcode.com>

	* camel/providers/mbox/camel-mbox-utils.c (camel_mbox_write_xev): 
	dont use the x_evolution field but rather the uid to 
	determine the presence of "X-Evolution" in the mail. 

	* camel/providers/mbox/camel-mbox-parser.c (camel_mbox_parse_file): 
	parse the status and uid values if the x-evolution
	has been found. 

	* camel/providers/mbox/camel-mbox-utils.c (camel_mbox_xev_parse_header_content): 
	return the parsed status field correctly. 

	* camel/providers/mbox/camel-mbox-utils.h: 
	fixed bad prototype.

	* camel/providers/mbox/camel-mbox-parser.c (camel_mbox_parse_file): 
	parse and store the "To:" header.

	* camel/providers/mbox/camel-mbox-parser.h: 
	added a "to" field 

	* camel/camel-folder-summary.c: 
	create the arrays here. 

	* camel/camel-folder-summary.h: the list of 
	summary information is no longer a GList but 
	rather a GArray.

2000-01-17  Chrsitopher James Lahey  <clahey@helixcode.com>

	* head.png, phone.png, email.png, web.png, snailmail.png: Images
	for e-contact-editor.c.

	* addressbook/contact-editor/text-editor.c: Test program
	for contact editor widget.

	* addressbook/contact-editor/e-contact-editor.c,
	addressbook/contact-editor/e-contact-editor.h: Contact editor
	widget files.

	* addressbook/contact-editor/.cvsignore,
	addressbook/contact-editor/Makefile.am: New directory for contact
	editor files.

	* addressbook/.cvsignore, addressbook/Makefile.am: New directory
	for addressbook files.

	* widgets/.cvsignore: Added reflow-test.

	* Makefile.am (SUBDIRS): Added addressbook subdirectory.

	* configure.in, widgets/Makefile.am: Removed widgets/toolbar from
	SUBDIRS since the lack of content was preventing it from
	compiling.

	* widgets/e-text.c, widgets/e-text.h: Fixed a crashing bug.

2000-01-17  bertrand  <bertrand@helixcode.com>

	* tests/test9.c (main): test for the mbox utils.

2000-01-17  Federico Mena Quintero  <federico@helixcode.com>

	* configure.in: Add the gnomecanvaspixbuf argument to gnome-config
	invocations.

2000-01-17  bertrand  <bertrand@helixcode.com>

	* camel/providers/mbox/camel-mbox-utils.c (camel_mbox_write_xev): 
	(copy_file_chunk): 
	(camel_mbox_xev_write_header_content): 
	(string_to_flag): 
	(flag_to_string): 
	(string_to_uid): 
	(uid_to_string): 
	A bunch of new funcs to handle x-evolution 
	private header field. 
	(copy_file_chunk): fixed a nasty bug. 
	(camel_mbox_write_xev): create the copy file descriptor
	with the proper arguments. Exceptions implememnted.
	(camel_mbox_write_xev): changed the way bytes are counted. 
	No more uses the message size cause it did not take into
	account the message separators characters. 
	(camel_mbox_write_xev): hopefully fixed the last bugs. 
	works ok now. 
	

2000-01-15  bertrand  <bertrand@helixcode.com>

	* camel/providers/mbox/camel-mbox-parser.c 
	(camel_mbox_parse_file): 
	store the end of headers position. 
	
	* camel/providers/mbox/camel-mbox-parser.h: 
	added the end_of_header_position to locate the 
	begining of the mail body. 
	

	* camel/providers/mbox/camel-mbox-utils.c (uid_to_string): 
	(string_to_uid): 
	(flag_to_string): 
	(string_to_flag): 
	new functions to handle uids and
	flags in the X-Evolution header. 
	(camel_mbox_xev_parse_header_content): 
	new function to parse an X-Evolution 
	header. 
	(camel_mbox_xev_write_header_content): 
	new function to write the X-Evolution 
	header. 

2000-01-13  bertrand  <bertrand@helixcode.com>

	* camel/providers/mbox/camel-mbox-parser.c (read_next_buffer_chunk): 
	eof is true when no more chars are available, not 
	when we've read the entire file. 
	(initialize_buffer): ditto.
	(read_message_begining): documented.
	(read_header): ditto.
	(new_message_detected): ditto.
	(advance_n_chars): ditto.
	(goto_next_char): ditto.
	(read_next_buffer_chunk): ditto.
	(initialize_buffer): ditto.
	(parser_free): ditto.
	(new_parser): ditto.

2000-01-12    <clahey@galapagos.helixcode.com>

	* widgets/e-text-event-processor-types.h,
	widgets/e-text-event-processor-emacs-like.c, widgets/e-text.c,
	widgets/e-text.h: Added selection and clipboard support.  Added up
	and down arrow keys.  Fixed choice of font colors for the
	selection to be based on the current style.

	* widgets/e-minicard.c: Caused a click to grab the focus.  Changed
	the fake information added.

	* widgets/e-minicard-label.c: Forward mouse events to the field
	EText item.

2000-01-13  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-canvas-utils.c, widgets/e-canvas-utils.h:
	e_canvas_item_move_absolute is just a helper function not supplied
	by the gnome_canvas.[ch] I put it here so that multiple items can
	use it.

	* widgets/e-reflow.c, widgets/e-reflow.h: This item contains a
	number of other items and places them into multiple columns.  The
	items contained must support a number of arguments and signals to
	allow the reflow to interact with them.

	* widgets/test-reflow.c: This is a test program for e-reflow.

	* widgets/e-text.c, widgets/e-text.h: Added properly drawn
	selected text.  Added some preliminary code for X selection
	handling and cut & paste.

	* widgets/e-minicard.c, widgets/e-minicard.h: Added ARG_HAS_FOCUS
	handling.  Made label display random for more interesting tests of
	multiple cards.  Tweaked sizing information for better display.

	* widgets/e-minicard-label.c, widgets/e-minicard-label.h: Added
	ARG_HAS_FOCUS handling.

	* widgets/Makefile.am: Added the reflow test and reflow files.

2000-01-12  bertrand  <bertrand@helixcode.com>

	* camel/providers/mbox/camel-mbox-parser.h (camel_mbox_parse_file): 
	Added the prototype of camel_mbox_parse_file. 

	* camel/providers/mbox/camel-mbox-parser.c (camel_mbox_parse_file): 
	updated in-line documentation.

	* tests/Makefile.am (noinst_PROGRAMS): 
	remove non updated tests from the build 
	process. 

	* corrected a bunch of bugs 
	
	* camel/providers/mbox/camel-mbox-parser.c 
	(camel_mbox_parse_file): 
	parser the subject and date.
	

	* camel/providers/mbox/camel-mbox-parser.c 
	(camel_mbox_parse_file): added the ability to 
	follow the parsing progression. 
	
	* camel/providers/mbox/camel-mbox-parser.h: 
	parse the x-evolution field. 

	* camel/Makefile.am (libcamel_la_SOURCES): 
	disabled gmime-rfc2047 as it depends on libunicode
	and is not used for the moment. 

2000-01-12  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-minicard.c, widgets/e-minicard.h: Added a resize
	signal for when the card changes height.  Made it so that when you
	press tab inside of a field, it goes to the next field.

	* widgets/e-minicard-label.c, widgets/e-minicard-label.h: Added a
	resize signal for when the label changes height.

	* widgets/e-text.c, widgets/e-text.h: Added a resize signal for
	multiple lines.  Added scrolling based on cursor position.

	* widgets/Makefile.am: Removed an extraneous build target.

2000-01-11  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/e-text-event-processor-emacs-like.c: Blocked the tab key
	from getting inserted into the buffer since the renderer doesn't
	know what a tab is.

	* widgets/e-text.c, widgets/e-text.h: Fixed a memory leak.  Added
	a blinking cursor and scrolling for the text item.

2000-01-11  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/test-minicard.c: Removed some code which got in the way
	of testing properly.

	* widgets/e-minicard-label.c (e_minicard_label_realize): Made the
	field text item editable.

	* widgets/Makefile.am: Added e-text-event-process*.[ch].

	* widgets/e-text.c, widgets/e-text.h: Changed these to support
	editing.

	* widgets/e-text-event-processor.c,
	widgets/e-text-event-processor.h,
	widgets/e-text-event-processor-types.h,
	widgets/e-text-event-processor-emacs-like.c,
	widgets/e-text-event-processor-emacs-like.h: These are a new pair
	of classes which handle all events from the text item and convert
	them into commands.


2000-01-10  Christopher James Lahey  <clahey@helixcode.com>

	* widgets/Makefile.am: Added minicard and text stuff.

	* widgets/e-minicard.c, widgets/e-minicard.h,
	widgets/e-minicard-label.c, widgets/e-minicard-label.h: Added
	canvas items for the minicard view in the contact manager.

	* widgets/test-minicard.c, widgets/test-minicard-label.c: Tests
	for the minicard items.

	* widgets/e-text.h, widgets/e-text.c: New canvas item.  Based on
	GnomeCanvasText.  Adds ellipsis capabilities.  Used in
	e-minicard*.[ch].

	* widgets/.cvsignore: Added minicard-test and minicard-label-test.

2000-01-06  Miguel de Icaza  <miguel@gnu.org>

	* configure.in: Add Bonobo detection, Bonobo flags for compilation
	for the components and the shell.

2000-01-06 Elliot Lee <sopwith@redhat.com>
	* composer/Makefile.am, widgets/e-table/Makefile.am: Work with
	builddir != srcdir

2000-01-05  Miguel de Icaza  <miguel@gnu.org>

	* configure.in (EXTRA_GNOME_CFLAGS_THREADS,
	EXTRA_GNOME_LIBS_THREADS): New variables that hold the thread
	version of the compile/link lines.

1999-11-20  Miguel de Icaza  <miguel@gnu.org>

	* configure.in (PACKAGE): Raise warning level.

2000-01-04  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/providers/mbox/camel-mbox-folder.c (_list_subfolders): 
	in the io_error label does not return before the 
	list has been freed.

2000-01-03  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/providers/mbox/camel-mbox-folder.c (_list_subfolders): 
	detects netscape ".sdb" folders as well as simple 
	non-suffixed folders (as the ones used in pine).
	

	* camel/string-utils.c (string_prefix): 
	finished implementation. 
	(string_prefix): added a boolean flag to indicate if the 
	suffix has been found. When the suffix does not match, 
	return NULL.

1999-12-26 bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-exception.c (camel_exception_setv): 
	new function. Allow printf-like description
	string constructions. 

	* camel/camel-exception.h: cosmetic changes.

        * camel/providers/mbox/camel-mbox-store.h:
        * camel/providers/mbox/camel-mbox-store.c:
        * camel/providers/mbox/camel-mbox-folder.h:
        * camel/providers/mbox/camel-mbox-folder.c:
        More work on the mbox provider.


1999-12-22  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/providers/mbox/camel-mbox-store.h: 
	* camel/providers/mbox/camel-mbox-store.c: 
	* camel/providers/mbox/camel-mbox-folder.h: 
	* camel/providers/mbox/camel-mbox-folder.c: 
	part of the mbox provider.

1999-12-20  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder.c (_set_name): 
	check that the folder is closed or raise an exception.
	(_set_name): unset the name fields as soon as possible, 
	even if an exception is raised.

	* configure.in:
	build mbox provider Makefile
	
	* camel/Makefile.am (SUBDIRS): 
	re-enable providers compilation

1999-12-19  Damon Chaplin  <damon@karuna.freeserve.co.uk>

	* configure.in (AC_OUTPUT): added widgets/meeting-time-sel/Makefile

1999-12-19  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder-utils.c: include camel-log.h
	to avoid unresolved symbols.

1999-12-18  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder.c (camel_folder_get_summary): 
	documented.

	* camel/camel-folder-pt-proxy.c (_append_message): 
	updated to take the change on append into account.

	* camel/camel-folder.h: 
	updated class def concerning append.
	* camel/camel-folder.c 
	(camel_folder_append_message): documented. 
	(camel_folder_append_message): don't return the 
	message number. Use specific methods instead.
	(_append_message): idem.

	(_delete): use 	exception mechanism.
	(camel_folder_delete): idem.
	(_delete_messages): idem.
	(camel_folder_delete_messages): idem.
	(_get_parent_folder): idem.
	(camel_folder_get_parent_folder): idem.
	(_get_parent_store): idem.
	(_get_mode): idem.
	(camel_folder_get_parent_store): idem.
	(camel_folder_get_mode): idem.
	(_list_subfolders): idem.
	(camel_folder_list_subfolders): idem.
	(_expunge): idem.
	(camel_folder_expunge): idem.
	(_has_message_number_capability): idem.
	(camel_folder_has_message_number_capability): idem.
	(_get_message_by_number): idem.
	(camel_folder_get_message_by_number): idem.
	(camel_folder_get_message_count): idem.
	(_list_permanent_flags): idem.
	(camel_folder_list_permanent_flags): idem.
	(_copy_message_to): idem.
	(camel_folder_copy_message_to): idem.
	(camel_folder_has_summary_capability): idem.
	(camel_folder_get_summary): idem.
	(camel_folder_has_uid_capability): idem.
	(camel_folder_get_message_uid): idem.
	(_get_message_uid_by_number): idem.
	(camel_folder_get_message_uid_by_number): idem.
	(camel_folder_get_message_by_uid): idem.
	(camel_folder_get_uid_list): idem.

1999-12-17  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder.c (_set_name): 
	use exception mechanism.
	(camel_folder_set_name): idem.
	(camel_folder_set_full_name): idem.
	(_get_name): idem.
	(camel_folder_get_name): idem.
	(_get_full_name): idem.
	(camel_folder_get_full_name): idem.
	(_can_hold_folders): idem.
	(_can_hold_messages): idem.
	(_exists): idem.
	(camel_folder_exists): idem.
	(_is_open): idem.
	(_get_subfolder): idem.
	(camel_folder_get_subfolder): idem.

	* camel/camel-exception.c (camel_exception_clear): 
	New function. Clear an exception.
	(camel_exception_get_id): 
	New function. 
	(camel_exception_get_description): 
	New function. 

	* camel/camel-folder.c (_set_name): 
	Use the exception system. When the folder
	has no parent, don't set its full name 
	field.

	
1999-12-16  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder.c (camel_folder_expunge): 
	(_expunge): 
	* camel/camel-folder-pt-proxy.c (_expunge): 
	changed the return value. Now returns the list 
	of expunged messages

	* camel/camel-folder.c (_init_with_store): 
	cleaned up. Use the exception system now.
	(_open): ditto.
	(camel_folder_open): ditto.
	(camel_folder_open_async): ditto.
	(_close):  ditto.
	(camel_folder_close):  ditto.
	(camel_folder_close_async): ditto.

	* camel/camel-exception.c (camel_exception_set): 
	When no exception is given, do nothing, just
	return. 
	(camel_exception_set): documented.
	(camel_exception_new): idem.
	(camel_exception_free): idem.
	(camel_exception_xfer): idem.
	

	* camel/camel-folder.c:
	* camel/camel-folder.h: more clean-ups. 
	Removed message list related code. 
	This was braindead design. 
	

	* camel/camel-folder-utils.c (camel_aml_expunge_messages): 
	implemented. The routines in this file will be
	called by providers to handle the list of
	message already standing in memory. 

1999-12-15  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder-utils.c: 
	* camel/camel-folder-utils.h: 
	New files, misc utilities for the 
	folder providers. Includes active message
	list utilities. 

	
	* camel/camel-folder.c (_has_message_number_capability): 
	(camel_folder_has_message_number_capability): 
	Added this to know if a folder provides 
	number-based message access.

	* camel/camel-folder.c (_get_message_count): 
	added warning when called directly.
	(_append_message): ditto
	(_open_async):  ditto
	(_close_async):  ditto
	(_delete_messages): ditto 
	(_expunge):  ditto
	(_get_message_by_number):  ditto
	(_get_message_uid):  ditto
	(_get_message_uid_by_number):  ditto
	(_get_message_by_uid):  ditto
	(_get_uid_list):  ditto

	
	* camel/camel-folder-pt-proxy.c (_open_async): 
	(_open): 
	(_close_async): 
	(_close): 
	(camel_folder_pt_proxy_class_init): 
	update 
	(_get_message_by_number): 
	Update to reflect changes in CamelFolder

	* camel/camel-folder.h: 
	* camel/camel-folder.c (_get_subfolder): 
	(camel_folder_get_subfolder): 
	The CamelFolder::get_folder is renamed to 
	get_subfolder as it is more intuitive. 

	* camel/camel-folder.c (_get_message_by_number): 
	(camel_folder_get_message_by_number): 
	* camel/camel-folder.h 
	(camel_folder_get_message_by_number): 
	The get_message method is now named
	get_message_by_number for consistency
	with the _by_uid methods.

	* camel/camel-folder.[ch]: 
	 clean-ups. 

1999-12-13  Nat Friedman  <nat@helixcode.com>

	* ebook/e-book.h: New file.
	* ebook/e-book.c: New file.
	* ebook/e-card.h: New file.
	* ebook/e-card-fields.h: New file.
	* ebook/e-commerce.h: New file. :-)

1999-12-08  Ettore Perazzoli  <ettore@gnu.org>

	* tests/test1.c (main): Removed the strdup()s, which are not
	deeded anymore.

	* camel/camel-mime-message.c (_set_subject): `subject' made const.
	(camel_mime_message_set_subject): Likewise.
	(_set_from): `from' made const.
	(camel_mime_message_set_from): Likewise.
	(_set_reply_to): Made `reply_to' const.
	(camel_mime_message_set_reply_to): Likewise.
	(_set_set_received_date): Made `received_date' const.
	(camel_mime_message_set_reply_to): Likewise.
	(_set_field): `value' made const.  Also, strdup the string before
	assigning.

	* camel/camel-mime-message.h: Virtual methods changed to use const
	strings when setting header values.

1999-11-17  Ettore Perazzoli  <ettore@gnu.org>

	* composer/Makefile.am (EXTRA_DIST): Added `$(glade_DATA)'.

	* camel/Makefile.am (EXTRA_DIST): Added
	`$(libcamel_extra_sources)'.
	(libcamelinclude_HEADERS): Added `gmime-base64.h'.

1999-11-17  Ettore Perazzoli  <ettore@gnu.org>

	* camel/camel-mime-message.c (_write_to_stream): Removed extra ':'
	in the `Mime-Version' header.

	* tests/ui-tests/msg-composer-test.c: Removed.

	* Makefile.am (SUBDIRS): Added `composer'.

	* configure.in: Create `composer/Makefile'.

	* camel/camel-simple-data-wrapper-stream.c
	(camel_simple_data_wrapper_stream_construct): Updated accordingly.
	(camel_simple_data_wrapper_stream_new): Updated accordingly.
	* camel/camel-stream-data-wrapper.c
	(camel_stream_data_wrapper_construct): Updated accordingly.

	* camel/camel-data-wrapper.h: Replaced `IS_CAMEL...()' type check
	macro name with `CAMEL_IS...()'.
	* camel/camel-folder-pt-proxy.h: Likewise.
	* camel/camel-folder-summary.h: Likewise. 
	* camel/camel-folder.h: Likewise. 
	* camel/camel-medium.h: Likewise. 
	* camel/camel-mime-body-part.h: Likewise.
	* camel/camel-mime-message.h: Likewise. 
	* camel/camel-mime-part.h: Likewise. 
	* camel/camel-multipart.h: Likewise. 
	* camel/camel-service.h: Likewise. 
	* camel/camel-session.h: Likewise. 
	* camel/camel-simple-data-wrapper-stream.h: Likewise. 
	* camel/camel-simple-data-wrapper.h: Likewise.
	* camel/camel-store.h: Likewise.
	* camel/camel-stream-buffered-fs.h: Likewise.
	* camel/camel-stream-data-wrapper.h: Likewise. 
	* camel/camel-stream-fs.h: Likewise. 
	* camel/camel-stream-mem.h: Likewise. 
	* camel/camel-stream.h: Likewise. 

	* tests/test1.c (main): Updated to match the `RECIPIENT_TYPE'
	changes.

	* camel/camel-mime-message.h: Changed `RECIPIENT_TYPE_TO',
	`RECIPIENT_TYPE_CC' and `RECIPIENT_TYPE_BCC' into
	`CAMEL_RECIPIENT_TYPE_TO', `CAMEL_RECIPIENT_TYPE_CC' and
	`CAMEL_RECIPIENT_TYPE_BCC', respectively.

1999-11-17  Ettore Perazzoli  <ettore@gnu.org>

	* camel/camel-mime-message.c (_write_to_stream): Write
	"Mime-Version: 1.0" to the stream.

	* tests/test1.c: If executed with a file name parameter, attach a
	file with with that name to the email without loading it into
	core, thus demonstrating usage of my latest changes.

	* camel/camel-mime-part.c (_set_encoding): Updated to use
	`CamelMimePartEncodingType'.
	(camel_mime_part_set_encoding): Likewise.
	(_get_encoding): Likewise.
	(camel_mime_part_get_encoding): Likewise.
	(_write_content_to_stream): Honour the `encoding' member.
	(_construct_from_stream): Made static.
	(camel_mime_part_encoding_to_string): New function.
	(_write_to_stream): Write the encoding string using it.
	(camel_mime_part_init): Set encoding to
	`CAMEL_MIME_PART_ENCODING_DEFAULT'.
	(_finalize): Don't free `encoding' anymore.
	(camel_mime_part_encoding_from_string): New function.
	(_parse_header_pair): Use it.

	* camel/camel-mime-part.h: New enum `CamelMimePartEncodingType'.
	Member `encoding' of `struct _CamelMimePart' changed from `gchar
	*' to `CamelMimePartEncodingType'.  All the encoding-related
	methods changed to use this type instead of `gchar *'.

	* camel/gmime-base64.c (gmime_encode_base64): Got it to work.

	* camel/Makefile.am (libcamel_la_SOURCES): Compile
	`gmime-base64.c'.

	* camel/gmime-base64.h: New, previously missing, header.

	* camel/camel-stream-data-wrapper.c: New file implementing the
	`CamelStreamDataWrapper' class.
	* camel/camel-stream-data-wrapper.h: Corresponding header.

	* camel/camel-simple-data-wrapper.c: Implemented the `get_stream'
	virtual method.
	(_get_stream): New function implementing the method.
	(camel_simple_data_wrapper_class_init): Install it in the class
	struct.
	(camel_simple_data_wrapper_init): New function initializing the
	`stream' member to NULL,
	(camel_simple_data_wrapper_class_init): Set it as the
	GtkObjectInitFunc.

	* camel/camel-simple-data-wrapper.h: New member `stream' in
	`struct _CamelSimpleDataWrapper'.

	* camel/camel-simple-data-wrapper-stream.c: New file implementing
	the `CamelSimpleDataWrapperStream' class.
	* camel/camel-simple-data-wrapper-stream.h: Corresponding header.

	* camel/camel-data-wrapper.c (camel_data_wrapper_get_stream): New
	function.
	(_get_stream): New private function, just returning NULL.
	(camel_data_wrapper_class_init): Install it as the default
	`get_stream' virtual method.

	* camel/camel-data-wrapper.h: New virtual method `get_stream' in
	`CamelDataWrapperClass'.
	(camel_data_wrapper_get_stream): New function prototype.

1999-11-05  Ettore Perazzoli  <ettore@gnu.org>

	* tests/ui-tests/msg-composer-test.c: New file for testing the
	`EMsgComposer' widget.
	* tests/ui-tests/Makefile.am (noinst_PROGRAMS): Compile it.  Do
	not compile `store_listing' for now because it's currently broken.
	(INCLUDES): Added the `widgets' source directory to the include
	path list.
	(LDADD): Removed the MH dependency; link with
	`libevolutionwidgets.la' from the `widgets' directory.

	* configure.in: Create `widgets/Makefile'.

	* camel/gmime-rfc2047.c (rfc2047_clean): Removed C++-like comment.
	* camel/camel-folder.c (camel_folder_get_message_uid_by_number):
	Likewise.
	* camel/gmime-content-field.c (gmime_content_field_get_parameter):
	Likewise.
	* camel/camel.c (camel_init): Likewise.
	* camel/camel-provider.c (camel_provider_register): Likewise.
	* camel/camel-multipart.c (_construct_from_stream): Likewise.
	* camel/camel-mime-part.c (_write_content_to_stream): Likewise.
	* camel/camel-medium.c (camel_medium_class_init): Likewise.

	* camel/camel-data-wrapper.h (camel_data_wrapper_get_type): Make
	prototype non-static.

	* camel/Makefile.am (libcamelinclude_HEADERS): Move
	`camel-exception-list.def' from `EXTRA_DIST' to
	`libcamelinclude_HEADERS'.

	* camel/camel.h: Do not #include <config.h>.
	* camel/data-wrapper-repository.h: Likewise.

1999-11-05  Ettore Perazzoli  <ettore@gnu.org>

	* tests/Makefile.am (INCLUDES): Add `-I$(top_srcdir)'.

1999-10-13  bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder.c (camel_folder_close): the 
	folder->close method is now asynchronous.

	* camel/camel-folder-pt-proxy.c (_folder_open_cb): 
	(_open): 
	(_folder_open_cb): 
	(_open): 
	open/close method implemented in the thread proxy
	folder. More to come.

	* camel/camel-exception.c (camel_exception_xfer): 
	new utility func.

	* camel/camel-marshal-utils.c: some new marshallers

	* camel/camel-folder-pt-proxy.c: Some explanations
	on the thread proxy system.

1999-10-11  bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/camel-marshal-utils.c: 
	camel/camel-marshal-utils.h:
	Handles operation marshalling. 
	
	* camel/camel-thread-proxy.c: 
	camel/camel-thread-proxy.h: 
	new files. Generic proxy system.
	  
	* camel/camel-folder-pt-proxy.c 
	moved all proxy related code in dedicated files.
	
	(camel_folder_pt_proxy_init): 
	removed proxy initialisation code
	(_finalize): 
	removed proxy finalization code


	* camel/camel-exception.c 
	(camel_exception_new): 
	(camel_exception_set): 
	(camel_exception_free): 
	New funcs.

1999-09-21  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder-pt-proxy.c (_async_close): 
	implemented.

	* configure.in:
	Check pthreads.

	* camel/Makefile.am: 
	camel-folder-pt-proxy.c is only compiled
	when pthreads are available.
	
	* camel/camel-folder-pt-proxy.c:
	Signal proxying implemenatation. 
	(_signal_marshaller_server_side): 
	(_signal_marshaller_client_side): 
	(_init_signals_proxy): 
	Code not is tested and has to be best 
	explained as it uses threads conditions and
	gtk signal system.
	(_thread_notification_catch): notify pending signals
	as well as thread availability.

1999-09-20  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder-pt-proxy.c (_op_exec_or_plan_for_exec): 
	completed

	Binch of new funcs:
	(_maybe_run_next_op): 
	Called by the watch notification when 
	a threaded op is completed
	(_thread_notification_catch): 
	notification watch call back
	(_init_notify_system): 
	set up the notification channel
	(notify_availability): 
	called by threads before completion.

1999-09-18  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder-pt-proxy.c (_op_exec_or_plan_for_exec): 
	new func. Try to exec an operation in a thread
	or queue it if a thread is already busy.

	* camel/camel-op-queue.c (camel_op_queue_set_service_availability): 
	(camel_op_queue_get_service_availability): 
	new funcs. 

	* camel/camel-op-queue.c (camel_op_new): 
	(camel_op_free): 
	new funcs. Uses glib mem chunks.
	

1999-09-17  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder-pt-proxy.c (_init_with_store): 
	added notify io_channel.

	* camel/camel-op-queue.h: 
	* camel/camel-op-queue.c: 
	New object. Operation queue. Meant to be used in 
	non-blocking proxy objects.
	(camel_op_queue_run_next_op): new func. 
	run the next operation.

1999-09-14  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/Makefile.am (libcamel_la_SOURCES): 
	added camel-folder-pt-proxy.[ch] to the build
	process.

	* camel/camel-folder-pt-proxy.c (_init_with_store): 
	started implementation of the pthread-based 
	folder proxy.
	

1999-09-08  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/providers/MH/mh-summary.c 
	(mh_load_summary): 
	(mh_save_summary): 
	(mh_create_summary): 
	implemented summary (files) for MH folders.
	
	* camel/providers/MH/camel-mh-folder.c 
	(_get_message_by_uid): implemented.
	(camel_mh_folder_class_init): 
	(_get_message_uid): implemented

	* camel/camel-folder.c (camel_folder_has_uid_capability): 
	(camel_folder_get_message_uid): 
	(camel_folder_get_message_uid_by_number): 
	(camel_folder_get_message_by_uid): 
	(camel_folder_get_uid_list): 
	Documented UID methods.
	(camel_folder_get_message_uid_by_number): 
	const'ified uid.
	(camel_folder_get_message_by_uid): idem
	removed stupid camel_folder_get_message_uid_by_number
	method.
	
	* tests/ui-tests/store_listing.c (close_all): 
	close all open folders and stores. (necessary
	for UID list saving ).

	* camel/providers/MH/mh-uid.c (mh_generate_uid_list): 
	fix: store UID list in CamelMHFolder object.

	* camel/providers/MH/camel-mh-folder.c (_open): 
	read or create UID list.
	(_close): save UID list.

1999-09-07  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/md5-utils.c (md5_get_digest_from_file): 
	correct parameter decl (const)

	* camel/md5-utils.h: typo.

	* camel/providers/MH/mh-uid.c 
	More work on UID stuff for MH.
	(mh_save_uid_list): 
	(mh_load_uid_list): 
	(mh_generate_uid_list): 
	new funcs. Manage on-disk uid list.
	
	* camel/providers/MH/mh-utils.c (mh_is_a_message_file): 
	Util routines live here now.

	* camel/md5-utils.c 
	Documented all funcs.
	
	(md5_get_digest_from_stream): 
	correct typo.
	(md5_get_digest_from_file): 
	same typo corrected.
	

	* camel/md5-utils.h : 
	raw routines are declared public now.
	Md5 use has to be versatile.

	* camel/providers/MH/mh-uid.c (mh_uid_get_for_file): 
	new func. Returns an UID for an MH message.
		
1999-09-06  bertrand  <Bertrand.Guiheneuf@aful.org>


	* camel/md5-utils.h:
	* camel/md5-utils.c:
	changed names to follow camel style.
	(md5_get_digest_from_stream): 
	new methods.
	(md5_get_digest_from_file): 
	new function : get file md5 signature. 
	To be used in providers code.

	* camel/md5-utils.c: imported md5 coding 
	routine from rpm. Compiles.
	

1999-09-05  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder.c (camel_folder_has_uid_capability): 
	(camel_folder_get_message_uid): 
	(camel_folder_get_message_uid_by_number): 
	(camel_folder_get_message_by_uid): 
	(camel_folder_get_uid_list): 
	Basic UID framework.
	
	* devel-docs/misc/ref_and_id_proposition.txt:
	New revision. Some fixes.

	* camel/camel-folder.h (struct _CamelFolder): added 
	uid_capability field.
	

	* camel/camel-folder.c (camel_folder_close): publicized
	the close method.

	* tests/ui-tests/store_listing.c (show_folder_messages): 
	use folder summary instead of opening all messages.
	(show_folder_messages): re-enabled old CPU/Mem consumming
	method. Useful for pop3 for instance.

	* camel/providers/MH/camel-mh-folder.c (_create_summary): 
	basic and highly non-efficient summary implementation.
	Should be seen as a proof of concept only.
	subfolder summary still has to be implemented.
	
	* camel/providers/maildir/camel-maildir-folder.c (_init_with_store): 
	hasn't summary for the moment. 
	* camel/providers/maildir/camel-maildir-folder.c
	cosmetic changes.
	

1999-09-04  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/providers/MH/camel-mh-folder.c (_create_summary):
	started summary implementation.
	(_open): correct use of open.

	* camel/camel-folder.c (camel_folder_get_summary): 
	get folder associated summary object.

	* camel/Makefile.am:
	added summary files build

	* camel/camel-folder-summary.[ch]: 
	basic summary framework

1999-09-03  bertrand  <Bertrand.Guiheneuf@aful.org>

	* devel-docs/camel/Makefile.am:
	sgml doc has camel-recipient now.

	* camel/camel-recipient.c (camel_recipient_foreach_recipient_type): 
	added in-line documentation.

1999-09-02  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/providers/maildir: Added (experimental) maildir 
	provider written by Jukka Zitting <hukka@greywolves.org>
	
	* camel/providers/Makefile.am (SUBDIRS): build maildir
	provider.

	* camel/camel-provider.c (camel_provider_get_for_protocol):
	bug fix. patch from  Jukka Zitting <hukka@greywolves.org>

	* camel/camel-mime-message.c (_write_one_recipient_to_stream): 
	changed decl to fit CRLFunc. 
	(_write_recipients_to_stream): 
	calls camel_recipient_foreach_recipient_type now.

	* camel/camel-recipient.c (camel_recipient_foreach_recipient_type): 
	new convinience function. Iterate over all recipient types.

	* camel/gmime-utils.c (gmime_write_header_table_to_stream): 
	s/write_header_table_to_stream/gmime_write_header_table_to_stream/
	(gmime_write_header_with_glist_to_stream): 
	s/write_header_with_glist_to_stream/gmime_write_header_with_glist_to_stream/

1999-09-01  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-mime-message.c (_finalize): 
	(_add_recipient): 
	(_remove_recipient): 
	(_get_recipients): now use CamelRecipientTable
	
	* camel/gmime-content-field.c: 
	(gmime_content_field_unref): test if object 
	to free is non void.

	* camel/camel-folder.c (_finalize): 
	(_set_name): 
	* camel/camel-mime-part.c (_finalize): 
	(_set_description): 
	(_set_disposition): 
	* camel/camel-service.c (_finalize): 
	* camel/camel-stream-fs.c (_finalize): 
	* camel/gmime-content-field.c: 
	(gmime_content_field_construct_from_string): 

	* camel/url-util.c (g_url_free): 

	When using g_free (obj) don't test if obj != NULL
	g_free () already do that. Thanks to elerium for
	the feedback.

1999-08-30  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-recipient.c (camel_recipient_get): 
	(camel_recipient_remove): 
	(camel_recipient_add): 
	new func. More work on new independant recipient code. 

1999-08-29  bertrand  <Bertrand.Guiheneuf@aful.org>

	* MAINTAINERS: updated my e-mail address. 

1999-08-28  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-mime-part.c (camel_mime_part_set_text): 
	text parameter declared const

	* camel/camel-mime-part-utils.c (camel_mime_part_store_stream_in_buffer): 
	actually test correctly nb_bytes_read_chunk is >0

	* camel/gstring-util.c: 
	* camel/gmime-content-field.c: 
	* camel/providers/MH/camel-mh-folder.c:
	* camel/camel-stream-fs.c:
	include string.h

	* camel/camel-stream-mem.c (_write): return 
	the numver of written bytes.

	* camel/camel-stream-buffered-fs.c (_eos): 
	return sthg

	* camel/camel-stream.c (default_camel_seek): 
	return something.

1999-08-26  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-mime-part.c (_get_content_object): 
	contruct the content from the buffer before calling
	CamelMedium implementation.
	(_construct_from_stream): Do not construct the content 
	by default, just store the content bytes in 
	a temporary buffer. Content will be constructed only
	at caller request (when calling CamelMedium::get_content_object)
	Providers with better access to the messages (mbox/MH ...)
	will have to provider lighter implementation, that is
	shall not read content at all unless the caller asks
	for it (again with get_content).

	* camel/camel-mime-part-utils.c: new file, groups
	mime-part related utils. Meant to be used by providers
	subclassing MimeMessage.
	(camel_mime_part_construct_headers_from_stream): 
	(camel_mime_part_construct_content_from_stream): 
	no more useless temporary hash table. 

	* camel/camel-mime-part.c (_construct_from_stream): calls
	mime-part-utils functions now.

	* camel/gmime-utils.c (_store_header_pair_from_string): 
	do not use hash table to store header, use an array instead.

1999-08-25  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-mime-part.c: now descend from CamelMedium.

	* tests/test1.c (main): all headers must be strdup'ed
	(main): unref created objects

	* camel/camel-medium.c (_set_content_object): 
	(_get_content_object): these methods are 
	in CamelMedium now.

1999-08-24  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-medium.c (camel_medium_class_init): 
	new class. Will handle all sort of information media 
	(Mime mail messages, Lotus Notes  mail messages, 
	postit notes, faxes, who knows .... :)
	CamelMimePart will inherit from it.

	* camel/camel-mime-part.c (_set_disposition): 
	(_set_description):
	description and disposition parameters are now const.
	 

	* camel/gmime-content-field.c (gmime_content_field_free): added
	assertion code.

	* camel/providers/MH/camel-mh-folder.c (_get_message): 
	uses buffered stream.

	* camel/camel-stream-buffered-fs.c:
	new stream to accelerate file ops.

1999-08-20  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-stream-fs.c (camel_stream_fs_new_with_name): 
	name parameter is const. This fixes a bug in destroy ()

1999-08-18  Robert Brady  <rwb197@ecs.soton.ac.uk>

	* camel/gmime-rfc2047.c: more work on encoder.

1999-08-17  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-stream.c (camel_stream_read): 
	return the number of bytes read. 
	How can this have ever worked ?
	(camel_stream_flush): don't return anything.

	* camel/gmime-utils.c (get_header_table_from_stream): 
	mem leak fixed.

1999-08-16  bertrand  <Bertrand.Guiheneuf@aful.org>

	* tests/ui-tests/store_listing.c:
	Now has a popup menu on mailbox tree to allow
	easier tests. Implemented the copy stuff.
	Works well for the MH provider :)))

	* camel/providers/MH/camel-mh-folder.c (_copy_message_to): 
	Test MH provider fast copy implemented.
	
	
1999-08-15  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder.c (camel_folder_expunge): 
	moved the active list readjustment code here.
	Much saner, providers won't have to worry about
	that.
	(_copy_message_to): new method.

	* camel/providers/MH/camel-mh-folder.c (_expunge): 
	no more active list readjustment stuff.

	* camel/camel-folder.h: the expunge virtual no more
	returns a list of expunged messages. Now providers
	only have to set the expunge flag on the expunged
	messages.

	* camel/camel-folder.c (camel_folder_get_message): 
	moved the caching code here. Finally, I don't want
	providers to crash the libs with a bad message cache
	implementation. 
	(_close): do not call the CamelFolder virtual expunge 
	method directly, use camel_folder_expunge() instead.
	(camel_folder_expunge): added the want_list param. 
	The client can decide if it wants the expunged message
	list or not. If yes, it'll have to unref the messages 
	itself.

1999-08-14  bertrand  <Bertrand.Guiheneuf@aful.org>

	* tests/ui-tests/store_listing.c (delete_selected_messages): 
	(expunge_selected_folders): 
	Implemented deletion/expunge mechanism. 

	* camel/camel-folder.c (_get_message): 
	Added some debug info.

	* camel/providers/MH/camel-mh-folder.c (_expunge): 
	implemented and tested.

	* camel/camel-mime-message.c (_set_flag): 
	changed the old braindead implementation.
	boolean are inserted in the flag hash 
	table casted as gpointers.
	

	* camel/camel-mime-message.c: indentation fix
	

1999-08-13  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder.c (_get_message): default implementation
	to be called first by providers methods. It looks in the
	folder message list (in memory) to see if the message has
	not already been retrieved, and in this case, returns 
	the same CamelMimeMessage object

	* camel/providers/MH/camel-mh-folder.c (_get_message): set
	message->message_number correctly.

	* camel/camel-folder.h (struct _CamelFolder): 
	New field (message_list) which will hold a 
	reference on each message obtained by the folder,
	which is necessary in order for the caching procedure
	to work (Getting the same message from a folder twice
	will return the same CamelMimeMessage object).
	
	* camel/camel-folder.c (camel_folder_get_message): 
	When the store retreives a message put it in its
	message list.
	(_finalize): free message list.

	* ChangeLog: fix typo (parmanent)

	* camel/camel-folder.c (_get_permanent_flag_list): 
	(camel_folder_get_permanent_flag_list): 
	new method, returns the list of permanent
	flags supported by the folder.

	* camel/camel-mime-message.c (_get_flag_list): 
	(camel_mime_message_get_flag_list): new method,
	return the list of flag name used by this message.

	* camel/hash-table-utils.c (g_strcase_equal): 
	(g_strcase_hash): those two func go here now.

	* camel/hash_table_utils.c (hash_table_generic_free): 
	free a (gpointer, gpointer) hash table pair.

	* camel/camel-mime-message.c (camel_mime_message_init): use
	case insensitive hash table functions. 
	(_set_flag): 
	(camel_mime_message_set_flag): 
	(_get_flag): 
	(camel_mime_message_get_flag): 
	Use const for flag name, they are now
	duplicated.

1999-08-12  bertrand  <Bertrand.Guiheneuf@aful.org>

	* tests/ui-tests/store_listing.c (show_folder_messages): 
	remove stupid debug code.
	(add_mail_store): use camel_session_get_store instead
	of creating MH store directly.
	(main): load MH provider.

	* camel/camel-provider.c (camel_provider_register_as_module): 
	register new provider.
	(camel_provider_get_for_protocol): 
	Now, implementation is correct.

	* camel/camel-store.c (_finalize): 
	* camel/camel-store.h (struct _CamelStore): 
	further disabled url_name field use. 
	URL will be generated dynamically.

	* camel/camel-session.c (camel_session_get_store_for_protocol): 
	compilation and runtime fixes.

	* camel/providers/MH/camel-mh-store.c (_init): 
	synced with CamelStore.

	* camel/camel-store.c (_init): 
	in CamelStore::init, url_name is now const.
	disabled url_name copy.

	* camel/camel-session.c (camel_session_get_store): 
	new function: returns a store for an URL. 
	(camel_session_get_store_for_protocol): 
	new functionc: returns a store for a given 
	store protocol (as IMAP/POP/MH ...)
	* camel/string-utils.c (g_strcase_equal): 
	(g_strcase_hash): case insensitive hash table
	funcs.

	* camel/camel-session.c (camel_session_init): hash table
	keys are case insensitive.

	* camel/camel-provider.c (camel_provider_get_for_protocol): 
	new function, returns the last registered 
	provider for a protocol.

	* camel/providers/MH/camel-mh-provider.c: 
	new file. MH provider registration stuff.

	* camel/camel-provider.c (camel_provider_register_as_module): 
	load a provider from a shared object (plugin).
	(camel_provider_register): register a provider 
	"by hand". Used for statically defined providers.

	* tests/test7.c: new test.
	tests providers loading framework.

1999-08-11  

	* camel/camel-service.c (_finalize): 
	* camel/camel-stream-fs.c (_finalize): 
	(_destroy): close file descriptor.
	* camel/camel-stream-mem.c (_finalize): 
	* camel/camel-store.c (_finalize): 
	* camel/camel-folder.c (_finalize): 
	* camel/camel-multipart.c (_finalize): 
	* camel/camel-simple-data-wrapper.c (_finalize): 
	* camel/camel-mime-part.c (_finalize): 
	implemented destructors.
	

	* camel/gmime-content-field.c (gmime_content_field_ref): 
	(gmime_content_field_unref): 
	New reference mechanism for GMimeContentField objects.

	* camel/camel-data-wrapper.c (_finalize): 
	Started implementing destructors.

	* camel/camel-mime-part.c (_construct_from_stream): 
	* camel/gmime-content-field.c (gmime_content_field_write_to_stream): 
	* camel/camel-multipart.c (_construct_from_stream): 
	removed forgotten anarchic traces.

1999-08-10  bertrand  <Bertrand.Guiheneuf@aful.org>

	* tests/ui-tests/store_listing.c: 
	* tests/ui-tests/store_listing.glade:
	Quick and (very) dirty hack to test Camel more
	easily.

	* camel/camel-folder.c (camel_folder_append_message): 
	new method.

1999-08-09  bertrand  <Bertrand.Guiheneuf@aful.org>

	* devel-docs/misc/ref_and_id_proposition.txt:
	new file. Document message UID and vfolder
	implementation.

1999-08-08  Robert Brady  <rwb197@ecs.soton.ac.uk>

	* camel/gmime-rfc2047.c: more advanced RFC2047 encoder started.
	
1999-08-08  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/providers/MH/camel-mh-folder.c (_get_message): 
	fix. In MH, message number is not related to 
	message position in folder.

	* camel/providers/MH/camel-mh-folder.c (_is_a_message_file): 
	util func.
	(_get_message_count): implemented.

1999-08-06  bertrand  <Bertrand.Guiheneuf@aful.org>

	* devel-docs/camel/:
	updated some autogen doc stuff.
	Still don't understand warnings :(

	* camel/camel-data-wrapper.c: 
	* camel/providers/MH/camel-mh-store.c: 
	* camel/url-util.c: 
	* camel/gmime-content-field.c: 
	* camel/camel-store.c: 
	various inline doc corrections.

	* camel/camel-folder.c (get_message_count): 
	new method. Returns the number of message 
	in the folder.



1999-08-06  Robert Brady  <rwb197@ecs.soton.ac.uk>

	* tests/test6.c: encoder test.

	* camel/gmime-rfc2047.c: Fixed decoder bug : sequence
	?= is not always the terminator for an encoded-string.


1999-08-06  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/providers/MH/camel-mh-folder.c (_list_subfolders): 
	stat was not testing the good file. Fixed.
	
	* tests/test4.c (main): added real test for MH folder 
	provider. All tested things seem to work OK :)

1998-08-06  Robert Brady  <rwb197@ecs.soton.ac.uk>
	
	* tests/test5.c: test for RFC2047 decoder.

	* camel/gmime-rfc2047.c: Improved RFC2047 decoder.

1999-08-06  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/providers/MH/camel-mh-folder.c (_exists): add debug information
	(_list_subfolders): test if first char in folder name is not '.'
	before adding it to the folder list.

	* camel/camel-store.c (_init): 
	disable session check temporarily
	(_get_separator): 
	(_get_folder): new static func. 
	Fixed several oddities in class definition. 

	* camel/providers/MH/camel-mh-store.c (camel_mh_store_get_type): 
	parent type is CAMEL_STORE_TYPE not CAMEL_FOLDER_TYPE

	* camel/camel-store.c: 
	prent class is CamelServiceClass not GtkObjectClass

	* camel/url-util.c : 
	cosmetic changes + use of const when possible.
	(find_host):
	fix a bug: when there is no host and no port don't skip the '/'
	all static find_* func are now named _func_*  
	(g_url_free): destructor func.
	cache field has been disabled. Constructing the url string
	won't be too slow and will occur rarely enough that we
	do not need to add complexity to this code. 

	* camel/providers/MH/camel-mh-store.c: 
	parent class is CamelStorClass not GtkObjectClass

1999-08-05  bertrand  <Bertrand.Guiheneuf@aful.org>

	* tests/test4.c: 
	test mh provider.
	
	* camel/providers/MH/camel-mh-folder.c (_get_message): 
	implemented
	
	* camel/camel-folder.c (_get_message): 
	new method. 
	(camel_folder_get_message): 
	corresponding public call
	
	* camel/README.HACKING: 
	Some notes.

	* camel/CODING.STYLE: 
	short note about coding style. 

	* camel/README.COPYRIGHT: 
	Note about copyright policy.

	* camel/providers/MH/camel-mh-folder.c (_list_subfolders): 
	minor typo fixes.


1999-08-04  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/gmime-rfc2047.c: 
	* camel/gmime-rfc2047.h:
	indentation and cosmetic changes.
	
	* camel/providers/MH/camel-mh-folder.c (_list_subfolders): 
	implemented.
	* camel/providers/MH/camel-mh-folder.c (_delete): 
	finshed implementation
	(_delete_messages): implemented.


1999-08-04  Robert Brady  <rwb197@ecs.soton.ac.uk>

	* camel/gmime-rfc2047.[ch]: added an implemention of RFC2047
	  (support for character sets other than US-ASCII in MIME
	  headers). Not actually called from anywhere yet.


1999-08-03  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/providers/MH/camel-mh-folder.c (_create): 
	implemented.
	(_delete): started implementation.

	* camel/camel-folder.c (_get_folder): default implementation 
	calls camel_store_get_folder ().

	* camel/providers/MH/camel-mh-folder.c (_init_with_store): 
	implemented.

	* camel/camel-folder.h (struct _CamelFolder): 
	remove useless exist_on_store field.

	* camel/camel-folder.c (_exists): 
	do not use exist_on_store field.

	* camel/camel-folder.c (camel_folder_set_name): 
	(camel_folder_get_name): 
	new public functions 
	(_set_name): set full_path.

	(_set_full_name): 
	(camel_folder_set_full_name): 
	commented out this functions def. 
	It would make things very difficult to handle, and would not 
	be very useful. 
	
	* camel/providers/MH/camel-mh-store.h: 
	* camel/providers/MH/camel-mh-store.c (camel_mh_store_set_toplevel_dir): 
	(camel_mh_store_get_toplevel_dir): 
	* camel/providers/MH/camel-mh-folder.c (_set_name): 
	* camel/providers/MH/camel-mh-folder.h: 
	use (gchar *) instead of (GString *) everywhere.
	use const when necessary.
	
	* camel/camel-folder.h (struct _CamelFolder): 
	removed unused message_list field.
	
	* camel/camel-mime-part.c (_set_content_object): 
	There is a probleme here. We can not allow mime part
	content-type field and content_object mime-type to be 
	different. I thus chosed to set mime part object 
	content field to be freed (if necessary) and set
	to be a pointer to content_object mime type
	field. 
	(_construct_from_stream): set content_object mime type
	to be the same as mime_part's one. This is necessary
	because we use _set_content_type. 
	
	This two things are a bit hackish ansd may need
	to be redesigned.
	
	* camel/gmime-utils.c (gmime_write_header_pair_to_stream): 
	use g_strdup_printf and remove a bug.

	* camel/camel-simple-data-wrapper.c (_construct_from_stream): 
	more debugging output +  nb_bytes_read is now a signed int 
	to avoid bug when eos is encountered.

	* camel/camel-mime-part.c (_construct_from_stream): 
	sync to data_wrapper_repository function name changes. 
	Use default "text/plain" type when conten-type field
	is not found. (following RFC 2046 spec).

	* camel/data-wrapper-repository.c (data_wrapper_repository_set_data_wrapper_type): 
	(data_wrapper_repository_get_data_wrapper_type): 
	change function name prefix (s/data_wrapper/data_wrapper_repository/)

	* camel/camel-multipart.c (_read_part): 
	add `\n` at eol but not before boundary.

	* camel/gmime-utils.c (get_header_table_from_stream): 
	correct implementation of end of stream detection.

1999-08-01  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-multipart.c (_read_part): 
	use a stream to store the part instead of GString. 
	
	* camel/camel-mime-part.c (camel_mime_part_set_text): 
	set data wrapper content type to "text/plain".

	* camel/camel-stream-mem.c:
	* camel/camel-stream-mem.h:
	new memory buffer based stream.

	* camel/camel-stream-fs.c (_seek): 
	implementation for file system based stream.

	* camel/camel-stream.c (camel_stream_seek): 
	new method.

	* camel/camel-stream-fs.c (camel_stream_fs_class_init): 
	pass CamelStreamFsClass instead of CamelStreamClass.

1999-08-01 bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/gmime-utils.c (gmime_write_header_pair_to_stream): 
	corrected a bug with memory not allocated for '\0' in strtmp

	* camel/gmime-utils.c (gmime_read_line_from_stream): 
	do not return NULL when line is empty. 

	* camel/camel-multipart.c (_read_part): return true when end
	of multipart is found, not the opposite

1999-07-31  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/gmime-utils.c (gmime_read_line_from_stream): 
	Don't return crlf at end of line.

1999-07-30  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/gmime-utils.c (gmime_read_line_from_stream): 
	new function: reads a line from a stream.
	should be in streams utils maybe. 

1999-07-29  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-mime-part.c (_construct_from_stream): 
	Uses data wrapper repository to find what data wrapper
	to use to construct the content from a stream. When 
	no object is registered for the mime type found in
	content type field a CamelSimpleDataWrapper is 
	used. 
	
	* camel/camel-mime-part.c (_get_content_type): 
	(camel_mime_part_get_content_type): returns
	a pointer on the content_type field instead 
	of the gchar * mime "type/subtype".

1999-07-28  bertrand  <Bertrand.Guiheneuf@aful.org>


	* camel/data-wrapper-repository.c
	* camel/data-wrapper-repository.h
	New files. Handles mime type <-> camel object
	(for example "multipart" <-> CamelMultipart
	* tests/tesst3.c: test data repository thing.

1999-07-26  bertrand  <Bertrand.Guiheneuf@aful.org>
	
	* camel/camel-multipart.c (_write_to_stream): 
	implemented output of multipart.
	
	* tests/test1.c (main): testing content objects operations. 

1999-07-25  bertrand  <Bertrand.Guiheneuf@aful.org>
	
	* camel/camel-mime-part.c (camel_mime_part_set_text): 
	new util function to set a mime part content to be 
	a text string.

	* camel/camel-simple-data-wrapper.c (camel_simple_data_wrapper_set_buffer_from_text): 
	new util func. 
	(camel_simple_data_wrapper_new): new func.

	* camel/camel-multipart.c (_write_to_stream): 
	implemented output of multiparts.

1999-07-24  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/gmime-content-field.c (gmime_content_field_get_parameter): 
	New function. Returns the value associated to a 
	mime parameter. 


1999-07-22  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-multipart.h: 
	* camel/camel-multipart.c:
	New class. Models multipart mime objects.
	
	* camel/camel-mime-body-part.h: 
	* camel/camel-mime-body-part.c: 
	New class. Body part is a mime part contained in 
	a multipart object.
	

1999-07-21  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-log.h: 
	implemented hard log level stuff.
	* came/*.c use "CAMEL_LOG_*" instead of "CAMEL_LOG (*"
	in order to allow hard level switch.

	* tests/test1.c: 
	* tests/test2.c: 
	updated to use gchar instead of GString. Tests passed.


1999-07-19  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-stream.c: 
	* camel/camel-stream.h: 
	"const"-antified
	

	* camel/camel-simple-data-wrapper.c: (_construct_from_stream)
	do not use any limit when constructing the object from a stream
	
	* camel/camel-stream-fs.c: 
	* camel/camel-stream-fs.h: 
	* camel/camel-mime-message.c: 
	* camel/camel-mime-message.h: 
	* camel/camel-session.c: 
	* camel/camel-session.h: 
	* camel/camel-service.c: 
	* camel/camel-service.h:
	* camel/camel-store.c: 
	* camel/camel-store.h: 
	* camel/camel-folder.c: 
	* camel/camel-folder.h: 
	* camel/gmime-utils.c: 
	* camel/gmime-utils.h: 
	GString -> gchar
	constantified what had to be.
	
	* camel/string-utils.c: 
	* camel/string-utils.h: 
	New files. Meant to replace gstring-util for gchar *
	
1999-07-16  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/gmime-content-field.c (gmime_content_field_construct_from_string): 
	GString -> gchar
	use const to indicate copied parameter.

1999-07-15  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-simple-data-wrapper.c: 
	* camel/camel-simple-data-wrapper.h: 
	Gstring -> gchar
	
1999-07-15  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/url-util.c:  
	* camel/url-util.h: 
	Do not use GStrings any more. 
	Added assertion code. 
	Cosmetic reformating
	
	* AUTHORS:
	* ChangeLog:
	Changed my email address.

	
1999-07-13  Miguel de Icaza  <miguel@gnu.org>

	* camel/gmime-base64.c (gmime_encode_base64): Implemented base64
	encoder based on CamelStreams.  Should the encoder/decoder be a
	Stream itself?

	* camel/gmime-utils.c: include config.h here.
	* camel/url-util.c: ditto.
	* camel/gstring-util.c: ditto.
	* camel/gmime-content-field.c: ditto.
	* camel/camel-stream.c: ditto.
	* camel/camel-stream-fs.c: ditto.
	* camel/camel-store.c: ditto.
	* camel/camel-simple-data-wrapper.c: ditto.
	* camel/camel-session.c: ditto.
	* camel/camel-service.c: ditto.
	* camel/camel-mime-part.c: ditto.
	* camel/camel-mime-message.c: ditto.
	* camel/camel-log.c: ditto.
	* camel/camel-data-wrapper.c: ditto
	* camel/camel-folder.c: ditto.

	* camel/camel-stream.c (camel_stream_write): Moved api
	documentation to the places that they document.
	(camel_stream_class_init): Virtual classes do not need to have a
	default implementation.  So null them all.
	(camel_stream_write): Return value from write.
	(camel_stream_available): implement.
	(camel_stream_write_strings): documented.

	* devel-docs/query/virtual-folder-in-depth.sgml: Small
	reformatting

1999-06-28  bertrand  <Bertrand.Guiheneuf@aful.org>

	* tests/test2.c (main): now use 
	CamelDataWrapper::contruct_form_stream to test 
	message parsing

	* camel/camel-data-wrapper.c: 
	* camel/camel-data-wrapper.h: 
	construct_from_stream no longer has maximimum size arg.

	* camel/camel-mime-part.c (_construct_from_stream): new.
	Construct the mime_part from a stream.

	* camel/camel-mime-part.c:
	new field (content_type) and associated methods.
	(camel_mime_part_init): initialize content_type field.
	(_parse_header_pair): now set content_type MimePart field
	instead of using DataWrapper Mime typing facility.

1999-06-28  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-data-wrapper.h: 
	s/content_type/mime_type/

1999-06-24  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-simple-data-wrapper.[ch]:
	new class. Simple implementation of a data wrapper:
	simply keeps the stream result in a byte array.

	* camel/camel-mime-part.c (_parse_header_pair): added a warning. 
	Have to think about the correct way to store content type stuff.

1999-06-24  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-mime-message.c (_write_one_recipient_to_stream): 
	includes gmime-utils header. 
	patch from Ulrich Drepper <drepper at cygnus.com>
	set separator string in write_header_with_glist_to_stream()
	
	* camel/camel-log.c (camel_log): 
	patch from Ulrich Drepper <drepper at cygnus.com>
	Do not use stderr in initialization of logfile descriptor.
	
	* camel/camel-stream-fs.c (camel_stream_fs_new_with_name): 
	patch from Ulrich Drepper <drepper at cygnus.com>
	initialize mode field in open(). 

1999-06-22  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-data-wrapper.c (_get_content_type): 
	moved all the content-type stuff here.
	(camel_data_wrapper_init): initialize the instance
	content-type field.

	* camel/camel-mime-part.c (_parse_header_pair): 
	parse Content-Type stuff in header. 
	(_write_to_stream): write the content type stuff to 
	the stream.

	* camel/gmime-content-field.c (gmime_content_field_get_mime_type): 
	new function, returns "type/subtype" mime type string.
	(gmime_content_field_construct_from_string): 
	new function, construbt a content_field object
	form a string. be used to set the mime_type from a
	string.

	* camel/camel-mime-part.c (_set_content_type): 
	(camel_mime_part_set_content_type): 
	(_get_content_type): 
	(_get_content_type): 
	new methods.

1999-06-21  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/gmime-utils.c (get_header_table_from_stream): 
	replace CR/LF+'\t' with ' ' 

	* camel/camel-mime-message.c (_set_recipient_list_from_string): 
	trim \t when splitting

	* camel/gmime-utils.c (get_header_table_from_file): 
	corrected bug in scanning tabulations ('t' -> '\t')

	* tests/test2.c (main): read mail.test instead
	of mail1.test

	* camel/camel-mime-part.c (_add_header): 
	added comments 

1999-06-03  bertrand  <Bertrand.Guiheneuf@aful.org>

	* devel-docs/query/virtual-folder-in-depth.sgml: 
	sgmlized Giao's doc about virtual folders.

1999-05-31  bertrand  <Bertrand.Guiheneuf@aful.org>

	* tests/test2.c (main): 
	use new stream code instead of raw file * stuff.

	* camel/gmime-utils.c (get_header_table_from_stream): 
	new func. Will replace get_header_table_from_file and will
	be used to parse headers from files as well as from 
	memory buffers.

	* camel/camel-stream-fs.c:
	CamelStream Subclass. File system based
	stream.
	

1999-05-30  bertrand  <Bertrand.Guiheneuf@aful.org>

 	* camel/camel-stream.h: new class. Represents an 
	abstract stream object.

       * camel/camel-mime-message.c (_set_recipient_list_from_string): 
	remove leading and trailing spaces in recipient addresses.

	* camel/gmime-utils.c (_store_header_pair_from_gstring): 
	remove leading and trailing spaces from header values.

	* camel/gstring-util.c (g_string_trim): new
	func: remove leading or trailng chars from 
	a specified char set.
	(g_string_split): allow trimming of substrings.

	* tests/test1.c (main): remove gtk_main call

1999-05-28  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-mime-part.c 
	(_parse_header_pair): 
	(_init_header_name_table): 
	More header parsing code.

	
1999-05-27  bertrand  <Bertrand.Guiheneuf@aful.org>

	* tests/test2.c (main): rewrite message obtained via
	parsing into a file. Actually, it works pretty well :))

	* camel/camel-mime-message.c (_set_recipient_list_from_string): 
	create recipient list form a comma separated string.
	(_parse_header_pair): added recipient lists parsing.

	* camel/camel-mime-part.c (_parse_header_pair): 
	new (protected) method. Parse a head pair and
	decides what to do with it.
	
	(_add_header): Call in _parse_header_pair

	* camel/camel-mime-message.c (_parse_header_pair): 
	overload  header parsing MimePart mthod.

	* camel/gstring-util.c (g_string_split): 
	new func: split a gstring into a GList of
	substring.

1999-05-26  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/gmime-utils.c (get_header_lines_from_file): 
	new func. Parses message header zone and returns
	a Glist of all header lines.

	* tests/test2.c: tests message parsing

	* camel/gmime-utils.c (write_header_table_to_file): 
	new func to write a table of headers.

1999-05-20  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-mime-message.c (_write_to_file): 
	recipient list printing
	
	* tests/test1.c (main): more tests.

1999-05-19  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-mime-part.c (_write_to_file): test if content
	exists before calling its write_to method.

	* camel/camel-mime-message.c (_write_to_file): bugs fix.

	* camel/camel-mime-message.c (camel_mime_message_new_with_session): 
	new func. Creates a message with the session field set
	up correctly.

1999-05-18  bertrand  <Bertrand.Guiheneuf@aful.org>

	* tests/test1.c (main): tests

	* camel/camel-mime-message.c (_write_to_file): 
	started write_to framework for mime_messages

	* camel/camel-mime-message.c (*_message_number): 
	message number funcs.
	
1999-05-15  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-mime-message.c (*_flag): 
	flags handling methods

1999-05-14  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-mime-message.c (camel_mime_message_class_init): 
	added recipient handling class funcs.

1999-05-13  bertrand  <Bertrand.Guiheneuf@aful.org>
        
	* camel/camel-mime-message.c (camel_mime_message_init): 
	create recipients hash table
	(_remove_recipient): 
	(_add_recipient):
	(_get_recipients):  new funcs.
	Internal Recipients data structure is
	a bit complicated though.

	* camel/camel-mime-part.c (camel_mime_part_init): 
	create headers hash table

	* camel/camel-mime-message.h: 
	a bunch of get/set header field
	method done. Does nothing yet though.

	* camel/camel-mime-message.[ch] :
	new file. 

1999-05-12  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-mime-part.h (struct ): 
	disposition is now a full GMimeContentField
	object.

	* camel/gmime-content-field.c: new file
	handle "type/subtype ;parameter=value ; parameter=value ..."
	BNF grammar elements
	(gmime_content_field_write_to_file): new func
	
	* camel/gmime-utils.c (gmime_write_header_pair_to_file): 
	namespace change

1999-05-11  bertrand  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-mime-part.c (_write_to_file): 
	overload wrapper class method.
	(_write_to_file): start to write some text in 
	file.

	* camel/camel-store.c: typo fix.

	* camel/camel-store.c: 
	* camel/camel-service.c: 
	* camel/camel-folder.c: 
	* camel/camel-data-wrapper.c: 
	* camel/camel-mime-part.c: 
	static functions naming follows gnome 
	coding style guide.

	* camel/camel-mime-part.h: implemented public interfaces
	

1999-05-10  Bertrand Guiheneuf  <Bertrand.Guiheneuf@aful.org>

	* camel/camel-mime-part.c (__camel_mime_part_get_header_lines): 
	(__camel_mime_part_set_header_lines): 
	(__camel_mime_part_get_content_languages): 
	(__camel_mime_part_set_content_languages): 
	(__camel_mime_part_get_encoding): 
	(__camel_mime_part_set_encoding): 
	(__camel_mime_part_get_content_MD5): 
	(__camel_mime_part_set_content_MD5): 
	(__camel_mime_part_get_content_id): 
	(__camel_mime_part_set_content_id): 
	A bunch of new set/get func.

	* camel/gstring-util.c (g_string_list_free): 
	convenience function for string list 
	complete deallocation.

1999-05-09  bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/camel-mime-part.c (__camel_mime_part_add_header): 
	new method

	* camel/camel-mime-part.h (struct CamelMimePart):
	added core fields.

1999-05-08  bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/camel-mime-part.[ch]: 
	new class. models a mime mail part.

	* camel/camel-data-wrapper.c 
	(camel_data_wrapper_write_to_buffer): method to
	stream data content in a buffer.
	(camel_data_wrapper_write_to_file): 
	(camel_data_wrapper_construct_from_buffer): 
	(camel_data_wrapper_construct_from_file): 
	new methods.
	
1999-05-07  bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/camel-data-wrapper.[ch]:new class.
	This should not be a class but rather an 
	interface. The day Gtk support interfaces, 
	it dataWrapper should become an interface.

1999-05-04  bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/camel-service.c (camel_service_get_url): 
	new method.

	* devel-docs/camel/camel-sections.txt: added 
	function doc references

	* camel/camel-folder.c (__camel_folder_close): 
	fixed indentation.
	(camel_folder_expunge): new method.
	(__camel_folder_close): used expunge flag

1999-05-03  bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder.c (camel_folder_get_mode): 
	typo fix

	* camel/camel-folder.c (__camel_folder_list_subfolders): 
	new func.

	* some doc stuffs
	

1999-05-01  bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder.c 
	(__camel_folder_get_mode): 
	(camel_folder_get_mode): 
	(camel_folder_get_parent_store): 
	(__camel_folder_get_parent_store): 
	(camel_folder_get_parent_folder): 
	(__camel_folder_get_parent_folder): 
	new methods

	* camel/camel-service.c: put __ prefix before
	private virtual funcs.

	* camel/camel-folder.c (camel_folder_delete): 
	(camel_folder_delete_messages): 
	new methods.

	* camel/url-util.c (g_url_new): some
	more comments 

1999-04-27  bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder.c (camel_folder_create): 
	new public function.

1999-04-25  bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/camel-session.c (camel_session_get_store_from_provider): 
	initialize folder object.

	* camel/camel-store.c (init): new method.
	called by session object at instantiation time.

	* camel/camel-store.h (struct _CamelStore): 
	new fields : session and url_name

1999-04-25  bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/camel-session.c (camel_session_set_provider): 
	new method to set the default provider for a protocol.
	(camel_session_get_store_from_provider): 
	new method to instantiate a folder from a provider.

	* camel/camel-provider.h: s/GString/gchar/g
	+ typo fix.

	* camel/camel-provider.[ch]:
	basic provider structure. Have to write the
	code for dynamic loading.

1999-04-24  bertrand <Bertrand.Guiheneuf@aful.org>
	
	* camel/url-util.[ch]: s/new_g_url/g_url_new

	* camel/url-util.c (new_g_url): URL 
	rewritten completely. Error handling not
	implemented in public functions.
	But URL scan works pretty well :)))

1999-04-24 bertrand <Bertrand.Guiheneuf@aful.org>
	
	* camel/url-util.[ch]: I needed the url 
	functions to use GString, and I wanted a more
	general scheme so I finally started rewriting 
	the whole thing from scratch.
	No more code from gzilla :(
	
1999-04-23  bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/url-util.[ch]:
	Utility functions to parse URLs.
	Stolen shamelessly from gzilla (www.gzilla.com)
	written by Raph Levien <raph@acm.org>
	
	* camel/Makefile.am: added url-util.[ch]
	compilation.

	* Makefile.am (SUBDIRS): removed devel-docs
	until I come up with a correct Makefile.am

	* camel/camel-store.h: 
	* camel/camel-folder.h:
	correct declarations of structs


1999-04-22  bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/providers/MH/camel-mh-store.c:
	more test implementation.

	* camel/camel-store.c (camel_store_get_type): typo fix
	

1999-04-21  bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/providers/MH/camel-mh-folder.c (camel_mh_folder_get_type): 
	start test provider.

1999-04-20  bertrand <Bertrand.Guiheneuf@aful.org>
	
	* camel/camel-store.h: now CamelStore inherits from
	CamelService.

	* camel/camel-service.c (camel_service_class_init): 
	basic abstract service class.

1999-04-19  bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/README: added some (few) explanations.

1999-04-18  bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/camel-store.[ch]: started implementation
	* camel/camel-folder.c (camel_folder_get_type): typo
	uncommented the store related code.
	(camel_folder_create): enable som store relted code. 
	Not finished. Have to define public methods first.

	* camel/camel-log.h: some explanation about the 
	log system

1999-04-18   bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder.c: 
	(camel_folder_create): implemented (partially)
	have to write CamelStore before finishing it.

	* camel/camel-folder.h (CamelFolder): added full_name field
	(CamelFolderClass): added set/get_full_name methods

1999-04-18  bertrand <Bertrand.Guiheneuf@aful.org>

	* camel/camel-folder.c: some work
	* camel/camel-log.c: log system for camel
	* camel/gstring-util.c: some utilities for GString objects
	

1999-04-18  bertrand <Bertrand.Guiheneuf@aful.org>

	* autogen.sh (PKG_NAME): groomf -> gnome-mailer

