2000-09-11  Jeffrey Stedfast  <fejj@helixcode.com>

	* filter-driver.c (filter_driver_run): Don't freeze/thaw the
	default inbox here, let the caller freeze/thaw it. Don't destroy
	the folders hash table here, it's faster if we wait till the
	filter-driver is destroyed.
	(filter_driver_finalise): Destroy the folders hash table here
	(filter_driver_init): Initialize the folders hash table here

2000-09-11  Jeffrey Stedfast  <fejj@helixcode.com>

	* filtertypes.xml: Changed "Header" to be "Message header" so it's
	not quite as confusing (??)

2000-09-11  Jeffrey Stedfast  <fejj@helixcode.com>

	* filtertypes.xml: Updated to allow the user to specify arbitrary
	headers.

2000-09-09  Jeffrey Stedfast  <fejj@helixcode.com>

	* filter-driver.c (filter_driver_run): Fixed a logic error. Only
	mark filtered as TRUE if it was successfully copied to another
	folder, this means don't mark true if the default inbox is NULL.

2000-09-09  Jeffrey Stedfast  <fejj@helixcode.com>

	* filter-driver.c (filter_driver_run): Erm, okay I misunderstood
	what camel_folder_[un]hook_event() did - we don't even need this
	crap in the filter driver so lets take it completely out and let
	the caller handle this junk.

2000-09-09  Jeffrey Stedfast  <fejj@helixcode.com>

	* filter-driver.c (filter_driver_run): Updated to not emit the
	folder_changed signal when a message is appended to the default
	mailbox - lets leave that up to the caller so we don't queue up a
	bunch of these emits if the caller is downloading messages for
	example.

2000-09-08  Jeffrey Stedfast  <fejj@helixcode.com>

	* filtertypes.xml: Added scoring xml stuffs
	
	* Makefile.am: added filter-score.[c,h]
	
	* filter-score.[c,h]: New functions to handle the "score" filter
	type.
	
	* filter-element.c (filter_element_new_type_name): Added support
	for "score" type.
	
	* filter-driver.c (do_score): New ESExp callback for filter
	actions to set the score on a message.
	
	* filter-message-search.c (get_score): New ESExp callback for
	getting the score tag as an integer value.

2000-09-07  Jeffrey Stedfast  <fejj@helixcode.com>

	* filter-driver.c (filter_driver_run): Now takes a
	CamelMessageInfo argument in preparation for handling scoring

2000-09-07  Jeffrey Stedfast  <fejj@helixcode.com>

	* filter-driver.c (filter_driver_run): Modified to return a
	boolean value specifying whether or not the message was filtered
	into a folder other than the default. The default mailbox can now
	also be specified as NULL if the message shouldn't be appended to
	it in the case that it's not filtered into some other folder.

2000-09-07  Jeffrey Stedfast  <fejj@helixcode.com>

	* filter-driver.c (filter_driver_run): Rewrote - this shouldn't
	need to be an async function

	* filter-message-search.c (match_all): Modified to look at the
	boolean value being fed to it and just to return that instead of
	always returning TRUE

2000-09-07  Lauris Kaplinski  <lauris@helixcode.com>

	* filter-editor.c, filter-filter.c, filter-folder.c, filter-option.c:
	* filter-rule.c, score-editor.c, vfolder-editor.c, vfolder-rule.c:
	More UTF-8 wrapping

2000-09-06  Jeffrey Stedfast  <fejj@helixcode.com>

	* filter-driver.c (filter_driver_run): Totally rewritten to filter
	a single message at a time instead of filtering a folder.

	* filter-message-search.c (filter_message_search): New convenience
	function for searching a message.

2000-08-24  Lauris Kaplinski  <lauris@helixcode.com>

	* filter-folder.c: Use e_utf8 wrappers

	* filter-input.c: Use e_utf8 wrappers

	* filter-rule.c: Use e_utf8 wrappers
	
2000-08-23  Dan Winship  <danw@helixcode.com>

	* filter-datespec.c (cal_day_selected): Set seltime.tm_isdst to
	-1, not daylight, because the current dst value is not relevant to
	the selected date.

2000-08-18  Peter Williams  <peterw@helixcode.com>

	* filter-driver.c (do_filter_mail): Unlink a new parameter, path_to_unlink,
	if it is empty once the mail is filtered. Fixes a race in 
	mail_tool_filter_contents_into.

	* filter-driver.h: Update the prototype.

2000-08-14  Ettore Perazzoli  <ettore@helixcode.com>

	* vfolder-editor.c (rule_add): Add translation marks and use stock
	buttons.
	(rule_edit): Likewise.

	* score-editor.c (rule_add): Add translation marks and use stock
	buttons.
	(rule_edit): Likewise.

	* rule-context.c (rule_context_add_rule_gui): Add translation
	marks and use stock buttons.

	* filter-part.c (main): Add translation marks and use
	stock buttons.

	* filter-folder.c (button_clicked): Add translation marks and use
	stock buttons.

	* filter-editor.c (rule_add): Add translation marks and use stock
	buttons.
	(rule_edit): Likewise.

	* filter-rule.c (get_widget): Add translation marks.

	* filter-filter.c (get_widget): Add translation marks.  Add
	padding to make it look like the buttons in `filter-rule.c'.

2000-08-17  Peter Williams  <peterw@helixcode.com>

	Implement filtering on demand.

	* rule-context.h: Add a new callback to rule_context_load
	that allows the caller to hook on-demand rules into its UI.

	* rule-context.c (rule_context_load): Changed to pass the
	extra parameters to load().
	(load): If the rule is successfully loaded, call the provided
	callback so that the UI can be updated.

	* filter-editor.c (rule_add): Set the source of the new filter.
	(rule_edit): Use the new rule_context_get_rank_rule_with_source()
	so that we don't get a bad index into the GtkList.
	(rule_delete): Same as above.
	(rule_up): Same as above.
	(rule_down): Same as above.
	(select_source): New function. When the user changes the 
	dropdown list to select a new source type, repopulate the
	list with rules of the appropriate type.
	(filter_editor_construct): Code moved from here into
	select_source(). Hook up all the elements of the source optionmenu
	to callbacks to select_source().

	* filter-rule.c (xml_encode): Save the rule's source type.
	(xml_decode): Load it. Default to 'incoming' if unspecified.

	* filter-rule.h: New enumeration, _filter_source_t, the
	specifies the rule's source. Add it to struct _FilterRule.
	
	* filter-driver.c (filter_driver_run): Add a new input,
	sourcetype, that specifies which rules to run (only ones
	with the same source will be run). struct filter_mail_input_t
	changed to accomodate.
	(do_filter_mail): Skip rules if they're not the specified source.
	If source and dest are the same, don't delete the messages or
	copy unnecessarily.

	* filter.glade: Make the optionmenu sensitive. Change "Outgoing"
	to "On Demand" (outgoing should be added later).
	
2000-08-15  Peter Williams  <peterw@curious-george.helixcode.com>

	* vfoldertype.xml, filtertypes.xml: Add entries defining the
	date-based message filtering and vfoldering.

	* filter-datespec.{c,h}: New files implementing the UI for
	date-based filtering and vfoldering -- specifically, choosing
	what to compare the message to.

	* filter-element,c: Hook up to create a datespec filter if
	that's what's called for.

	* Makefile.am: Build the new -datespec files.

2000-08-13  Dan Winship  <danw@helixcode.com>

	* Makefile.am (EXTRA_DIST): remove blank.xpm and check.xpm which
	no longer exist. Add filter.glade.

2000-08-12  Dan Winship  <danw@helixcode.com>

	* filter-driver.c (describe_filter_mail): Use
	mail_tool_get_folder_name here too. (Hm... this directory really
	shouldn't depend on stuff in mail/, but it already did. We'll have
	to sort this out later.)

2000-08-11  Dan Winship  <danw@helixcode.com>

	* filter-driver.c (do_filter_mail): Remove an '#if 0' that must
	have been left in accidentally, so that messages which are copied
	to other folders will not also be copied into the Inbox. Also,
	#ifdef out the line that printfs the rule, because the rules are
	often very large.

2000-08-11  Not Zed  <NotZed@HelixCode.com>

	* filter-driver.c (do_colour): Use proper accessor function
	instead of poking the structure.

2000-08-10  Christopher James Lahey  <clahey@helixcode.com>

	* filter-driver.c, filter-folder.c, rule-context.c,
	vfolder-editor.c: Fixed some warnings.

2000-08-10  Peter Williams  <peterw@helixcode.com>

	* filter-driver.c (do_filter_mail): Fix the infinite fetchmail.

2000-08-10  Not Zed  <NotZed@HelixCode.com>

	* filter-driver.c (filter_driver_run): Save the results of
	searches till we're done.  So we dont have to go strduping strings
	agian and again and again and again ...  Remove all the unecessary
	strdups.
	(do_colour): Implement.
	(filter_driver_run): Change for append api change.
	(free_key): Removed.

2000-08-09  Not Zed  <NotZed@HelixCode.com>

	* rule-context.c (rule_context_add_rule_gui): Helper function to
	add a rule, but present a gui first, asking for confirmation/allow
	editing.
	(rule_context_add_rule_gui): Keep track of context so it isn't freed under us.

	* filter-context.c (filter_context_create_action): Implement,
	helper to aid filter generation.

2000-08-08  Peter Williams  <peterw@helixcode.com>

	* filter-driver.c (close_folder): Fix an accidental GTK unref
	of a CamelObject.

2000-08-03  Ettore Perazzoli  <ettore@helixcode.com>

	* filter-folder.c (button_clicked): Use the base name of the
	Evoluton URI for the button's label.
	(get_widget): Likewise.

2000-08-03  Peter Williams  <peterw@helixcode.com>

	* filter-driver.c (op_filter_mail): Conform to the new mail-threads
	interface.

2000-08-01  Not Zed  <NotZed@HelixCode.com>

	* vfolder-editor.c (rule_add): Oops, create a vfolder_rule when we
	add a new one.

	* rule-context.c (load): If there are no user rules, dont bomb
	out.

2000-07-31  Not Zed  <NotZed@HelixCode.com>

	* filter-input.c (filter_input_set_value): Set value of a simple
	type to a new string.

	* filter-option.c (filter_option_set_current): New function to set
	the current value of an option.

	* filter-rule.c (filter_rule_find_list): New function to find a
	rule in a list, by name.
	(filter_rule_set_name): Let you set the name of a rule.

	* rule-context.c (rule_context_find_rule): Find a rule by name.
	(rule_context_create_part): Helper to find and clone a part by
	name.

	* filter-folder.c (button_clicked): Fix warning.

	* filter.glade: Add new widgets for vfolder rule editor.
	
	* vfolder-context.c (vfolder_context_init): Changed to use vfolder
	rule as the rule type.

	* vfolder-rule.c: New class to encode extra information required
	for vfolder rules.

2000-07-30  Not Zed  <NotZed@HelixCode.com>

	**  Almost a total rewrite of every file, except for filter-driver
	which just had minor updates.

	The rule format has changed.

2000-07-24  Dan Winship  <danw@helixcode.com>

	* filter-driver.c (do_delete, filter_driver_run): Update for
	CamelFolder API changes. (delete_message and get_uids don't take
	exceptions any more.)

2000-07-21  Peter Williams  <peterw@helixcode.com>

	* filter-driver.c (cleanup_filter_mail): Use the exception
	provided to us by the async manager instead of allocating
	our own; use mail_tool_camel_lock_{up,down} around camel
	operations.
	(filter_driver_run): Make it return void.

2000-07-20  Jeffrey Stedfast  <fejj@helixcode.com>

	* filter-driver.c: Update to make "async".

2000-07-11  Dan Winship  <danw@helixcode.com>

	* filter-driver.c: Update for CamelFolder API changes

2000-07-11  Jeffrey Stedfast  <fejj@helixcode.com>

	* filter-driver.c (filter_driver_run): Updated to reflect changes to
	camel_folder_append_message ()

2000-07-09  Dan Winship  <danw@helixcode.com>

	* filter-xml.[ch]: add a "string" type

	* filtertype.xml, vfoldertypes.xml: Use type="string" rather than
	"folder" for subject/body matching.

	* filter-arg-types.c: Update some strings for "text" input. Fix
	some warnings (including one that pointed out a real bug).

	* filter-arg.c, filter-druid.c, filter-format.c: fix warnings

2000-07-07  Dan Winship  <danw@helixcode.com>

	* filter-driver.c: Update for camel_folder_search_by_expression
	change (GList -> GPtrArray).

	* vfoldertypes.xml: sync this to filtertypes.xml (to/cc thing)

2000-07-05  Dan Winship  <danw@helixcode.com>

	* remove some non-error case debugging messages.

	* filtertypes.xml: Fix typos and update the "to-address" rule to
	match To or Cc.
	* vfoldertypes.xml: Fix typos.

	* filter-driver.c (do_delete, do_copy, do_stop,
	filter_driver_run): Add uids to the "processed" list only after
	succesfully doing something with them. Fixes the problem where
	copying a message to a folder that didn't exist would result in it
	disapearing.

2000-07-02  Ettore Perazzoli  <ettore@helixcode.com>

	* filter-driver.c (filter_driver_new): Don't free the ruleset nor
	the xmlDoc.  This will make us leak [I think], but at least
	filters work.

2000-07-02  Dan Winship  <danw@helixcode.com>

	* filter-driver.c (open_folder): freeze the folder to avoid
	multiple folder_changed's
	(close_folder): and thaw it.
	
2000-07-02  Dan Winship  <danw@helixcode.com>

	* filter-driver.c (filter_driver_new): kill
	filter_driver_set_session and filter_driver_set_rules and instead
	make filter_driver_new take the rules and a callback function it
	can use to turn URIs into folders.
	(open_folder): Use the callback function rather than calling camel
	directly: some URIs need special handling to turn them into stores
	and folders correctly, so let the mailer do that.

2000-07-01  Ettore Perazzoli  <ettore@helixcode.com>

	* filter-arg-types.c (arg_folder_edit_value): Only allow type
	"mail" when selecting a folder for the filter.

2000-07-01  Jeffrey Stedfast  <fejj@helixcode.com>

	* filter-driver.c: Updated to reflect changes made to 
	camel-folder.

2000-06-30  Peter Williams  <peterw@curious-george.helixcode.com>

	* filter-xml.c (filter_load_optionset_file): Check for failure
	when loading the filter doc.

	* filter-driver.c (filter_driver_set_rules): Ditto.

	* filter-editor.c (filter_editor_set_rule_files): Ditto.

2000-06-29  Ettore Perazzoli  <ettore@helixcode.com>

	* filter-arg-types.c: Replaced `global_shell_interface' with
	`global_shell_client'.
	(arg_folder_edit_value): Use
	`evolution_shell_client_user_select_folder()'.
	(create_listener): Removed.
	(impl_FolderSelectionListener_selected): Removed, together with
	all the ::Listener stuff.

2000-06-29  Arik Devens  <arik@helixcode.com>

	* vfoldertypes.xml (ruleset type="match"): Changed Cc to CC to be
	the same as the other CC rule. None of this works however, cause
	the CC code is not hooked up to camel... oh well ;-(
	
2000-06-29  Arik Devens  <arik@helixcode.com>
	
	* vfoldertypes.xml (ruleset type="match"): Added a Cc rule to
	vfolders. Works like To except on the Cc of a message ;-)
	
2000-06-28  Jeffrey Stedfast  <fejj@helixcode.com>

	* filter-arg-types.c (arg_string_edit_value): Changed "Filter name"
	to "Option value" as "Filter name" made no sense in the dialog
	(arg_address_edit_value): Same
	(arg_folder_edit_value): What do we want to return??

2000-06-27  Ettore Perazzoli  <ettore@helixcode.com>

	* filter-xml.c (load_desc): Strdup content before assigning the
	value.  Also, no need to check for NULL when g_strdup()ing as
	g_strdup() returns NULL for a NULL arg.

2000-06-27  Ettore Perazzoli  <ettore@helixcode.com>

	* Makefile.am (INCLUDES): `-I$(top_builddir)/shell' so that it
	works with builddir != srcdir.  [We need to #include
	"Evolution.h".]

2000-06-27  Michael Zucchi  <zucchi@zedzone.mmc.com.au>

	* Makefile.am (INCLUDES): Add the shell dir for includes (for
	corba interfaces).

	* filter-arg-types.c (impl_FolderSelectionListener_selected):
	Listener for folder query.  Sigh.
	(create_listener): Create the listener object for the folder
	dialogue query.  Uses a global for linkage to the shell object,
	via the mail component.
	(arg_folder_edit_value): Call the folder selection dialogue to
	edit the value, rather than a simple text widget.

2000-06-26  Jeffrey Stedfast  <fejj@helixcode.com>

	* filter-editor.c: Added a #include <gnome-xml/parser.h> as this
	was needed (since we used the xml parser...)
	(druid_dialogue_clicked): Do we want to use struct filter_option
	or do we instead want to use struct filter_optionrule as we had before?
	Since the function we pass the data to expects filter_option, I suspect 
	that that is what we want.

	* filter-format.h (filter_description_html_write): Renamed from
	description_html_write in order to match function name in
	filter-format.c

	* filter-druid.c (option_name_changed): Fixed a memory leak (Free'd
	a filter description list).

	* filter-arg-types.c (arg_folder_edit_values): Free'd GList data in
	argin->values.

	* filter-driver.c (filter_driver_set_rules): Added code to free an
	xmlDoc and some other data.

	* filter-arg.h: Add prototypes for filter_arg_write_html() and 
	filter_arg_write_text();

	* filter-arg-types.c: Lets see if we can't get rid of some of these 
	warnings... (use some casts to make warnings go away)
	(arg_address_edit_value): Lets make sure that ad exists before looking
	at member data.

2000-06-16  Dan Winship  <danw@helixcode.com>

	* filter-driver.c (do_delete, filter_driver_run): Update for Camel
	flag handling changes.

2000-06-15  Dan Winship  <danw@helixcode.com>

	* filter-driver.c (open_folder, close_folder): Update for
	CamelFolder changes.

2000-06-09  Jacob Berkman  <jacob@helixcode.com>

	* filter-editor.c (add_or_edit): use stock pixmap buttons

	* filter-druid.c (build_druid): remove the border on the notebook,
	put the html widget in a scroll frame, and add some padding

2000-06-06  Dan Winship  <danw@helixcode.com>

	* filter-driver.c (open_folder): Update for folder
	existence/creation changes.

2000-06-02  Christopher James Lahey  <clahey@helixcode.com>

	* filter-driver.c: Free the exception and the priv struct.

2000-06-01  Christopher James Lahey  <clahey@helixcode.com>

	* filter-arg-types.c (arg_address_edit_value): Search for ad in
	arg->values instead of text since it's a list of
	filter_arg_adresses.  Also, free the old value in the list.

2000-05-30  Not Zed  <NotZed@HelixCode.com>

	* filtertypes.xml: And here too.

	* vfoldertypes.xml: Add body-contains and not-body-contains
	types.

2000-05-27  Not Zed  <NotZed@HelixCode.com>

	* vfoldertypes.xml: New file - lists rules appropriate for
	vfolders (no actions, etc).

	* Makefile.am (EXTRA_DIST): Add vfoldertypes.xml

	* filter-driver.c (filter_driver_expand_option): Made public from
	expand_filter_option.
	(filter_driver_rule_count): find out how many user rules are
	defined.
	(filter_driver_rule_get): Get a user rule by index.

2000-05-21  Ettore Perazzoli  <ettore@helixcode.com>

	* filter-druid.c: Don't pass an empty URL to `gtk_html_begin()'
	anymore.

	* filter-arg-types.c: Updated for the new GtkHTML API which uses
	`GtkHTMLStream *' instead of `GtkHTMLStreamHandle'.
	* filter-arg.c: Likewise.
	* filter-arg.h: Likewise.
	* filter-druid.c: Likewise.

	* filter-format.c: Likewise.
	* filter-format.h: Likewise.

2000-05-18  Dan Winship  <danw@helixcode.com>

	* filter-driver.c (filter_driver_run): update for
	camel_folder_get_uids change

2000-05-17  NotZed  <NotZed@HelixCode.com>

	* filter-druid.c: Fix some html formatting.

2000-05-16  NotZed  <NotZed@HelixCode.com>

	* filter-driver.c (filter_driver_run): Delete all processed
	messages.  This is probably going to slow it down a bit.
	(filter_driver_run): Close folders before destroying them *sigh*.
	(open_folder): Actually open the folder. Doh.

	* filtertypes.xml: Initial filter rules.

	* filter-xml.c (filter_write_optionset): Save the description
	also.
	(write_description): Routine to save description - only saves 1
	node of description.

	* filter-arg.c (filter_arg_edit_clicked): Dont free edata here,
	let the destroy do it(?)

	* filter-editor.c (main): Simple driver program for testing, so i
	can fix all this really broken code *sigh*

2000-05-15  NotZed  <NotZed@HelixCode.com>

	* filter-editor.c (filter_editor_set_rule_files): filename based
	interface.
	(filter_editor_save_rules): Interface to save the options to a
	filename.

	* filter-xml.[ch]: Bunch of cleanup.

	* filter-xml.c (filter_*_file): New interfaces to read/write files
	directly, rather than messing with xmldoc crap.

	* Makefile.am: Removed filter-driver test program, now just part
	of libfilter.

	* filter-driver.c: Made an object, with an api and everything, can
	apply a filter to a given mailbox.

2000-05-10  Christopher James Lahey  <clahey@helixcode.com>

	* filter-arg.h: Changed tree.h to gnome-xml/tree.h.

	* Makefile.am: Added filter-arg-types.h, filter-arg.h,
	filter-xml.h, filter-format.h, filter-druid.h, filter-editor.h.

2000-05-02  Matt Loper  <matt@helixcode.com>

	* Makefile.am: set G_LOG_DOMAIN.

2000-05-01  NotZed  <NotZed@HelixCode.com>

	* filter-driver.c (main): Fix for api.

2000-04-30  Dan Winship  <danw@helixcode.com>

	* filter-driver.c (start): Remove no-longer-necessary call to
	camel_provider_register_as_module.

2000-04-25  Ettore Perazzoli  <ettore@helixcode.com>

	* Makefile.am (INCLUDES): Use `$(GTKHTML_CFLAGS)'.

2000-04-20  NotZed  <NotZed@HelixCode.com>

	* filter-driver.c: Removed a bunch of crappy unrequired headers.

	* Makefile.am (filter_driver_LDADD): Added libibex back again.

2000-04-18  Dan Winship  <danw@helixcode.com>

	* filter-driver.c: remove unused camel-log.h include

2000-04-12  Matt Loper  <matt@helixcode.com>

	* filter-arg.c (filter_arg_edit_value): Return a value.

2000-03-27  NotZed  <NotZed@HelixCode.com>

	* filter-xml.c (tokenise_xmlfreeprop): Free a prop after
	tokenising it.
	(find_node_attr): Free the prop after using it.
	(load_desc): Ditto.   I use free() because xmlFree() is nowhere to
	be found.
	(filter_load_optionset): Ditto.

	* filter-arg-types.c (arg_address_values_add_xml): free() xml
	stuff, plugs a leak.
	(arg_folder_values_add_xml): Ditto.

2000-03-22  NotZed  <NotZed@HelixCode.com>

	* filter-driver.c (main): Changed to use async search api.

2000-03-04  NotZed  <NotZed@HelixCode.com>

	* filter-druid.c (html_write_options): Output 'and' bits between
	the rules.

	* filter-driver.c (main): Actually implement filtering, at least,
	from Inbox.  Copy messages to folder (in the same store only, so
	far), delete, and stop processing are implemented, and the logic
	to handle default processing.

	* filter-xml.c (load_optionvalue): Fix up a bug where we lost the
	name of the arg (ouch).
	* filter-xml.c: Wrapped printf's in debug macros.

2000-03-02  NotZed  <NotZed@HelixCode.com>

	* filter-druid.c (object_destroy): Disconnect the list signal, so
	we dont get spurious emits during destroy.
	(arg_changed): Callback to update filter arg asynchronously.
	(arg_link_clicked): Edit the value non-modally.

	* filter-arg.c (filter_arg_edit_values_1): Changed to use
	non-modal interface.

2000-03-01  Ettore Perazzoli  <ettore@helixcode.com>

	* Makefile.am: New file.

	* Makefile: Removed.  I wonder why we are using plain Makefiles
	instead of automake Makefiles at all.

2000-02-29  NotZed  <NotZed@HelixCode.com>

	* filter-driver.c (main): Remove gui code, this will be actual
	filtering code.

	* Makefile: Added filter-editor to the library.

	* filter-editor.c (main): Comment out, make it a proper library.

2000-02-28  NotZed  <NotZed@HelixCode.com>

	* filter-druid.c: Removed unused header.

	* Makefile: Removed references to filter-sexp.[ch].

	* filter-sexp.[ch]: Removed some unecessary includes.  Moved to
	e-util.  Renamed callers.

2000-02-24  NotZed  <NotZed@HelixCode.com>

	* filter-xml.c (filter_description_free): 
	(filter_load_ruleset_free): 
	(filter_load_optionset_free): Functions for memory management.

	* filter-arg.c (filter_arg_copy): Copy the values of one arg into
	another.

	* filter-editor.c: New widget, a dialogue which uses filter-druid
	to present the various editing views.
	(druid_dialogue_clicked): On finish, save the user's new filter
	definition where it came from.

	* filter-druid.c: Changed to just being a notebook with no tabs,
	rather than a full druid (no next/prev/etc buttons).
	(option_name_changed): Update the option's description as the user
	enters it in.

2000-02-22  NotZed  <NotZed@HelixCode.com>

	* filter-xml.c (filter_clone_optionrule):
	(filter_clone_optionrule_free): 
	(filter_optionrule_new_from_rule): New utility functions for
	working with the internal rule format.

	* filter-arg.[ch]: Added new callbacks for editing a single value,
	and a new editor which shows all items in a list, and allows you
	to edit them via the single-edit method.  This needs some cleanup
	for some unused/unusable virtual methods (edit_values,
	write_html?).

	* Makefile: Add the druid for build.

	* filter-druid.c: A 'druid' widget for editing a single filter
	rule.

2000-02-21  Matt Loper  <matt@helixcode.com>

	* .cvsignore: New file.

2000-02-18  NotZed  <NotZed@HelixCode.com>

	* blank/check.xpm: Added forgotten files.

	* Uh, more changes, lots, its still work in progress.

2000-02-14  NotZed  <notzed@helixcode.com>

	* Initial import.

