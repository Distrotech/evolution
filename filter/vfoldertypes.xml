<?xml version="1.0"?>
<filterdescription>
<partset>
 <part name="sender">
  <title>Sender</title>
   <input type="optionlist" name="sender-type">
    <option value="contains">
        <title>contains</title>
	<code>(match-all (header-contains "From" ${sender}))</code>
    </option>
    <option value="not contains">
        <title>does not contain</title>
        <code>(match-all (not (header-contains "From" ${sender})))</code>
    </option>
    <option value="is">
        <title>is</title>
	<code>(match-all (header-matches "From" ${sender}))</code>
    </option>
    <option value="is not">
        <title>is not</title>
        <code>(match-all (not (header-matches "From" ${sender})))</code>
    </option>
    <option value="starts with">
     <title>starts with</title>
     <code>
        (match-all (header-starts-with "From" ${sender}))
     </code>
    </option>
    <option value="not starts with">
     <title>does not start with</title>
     <code>
        (match-all (not (header-starts-with "From" ${sender})))
     </code>
    </option>
    <option value="ends with">
     <title>ends with</title>
     <code>
        (match-all (header-ends-with "From" ${sender}))
     </code>
    </option>
    <option value="not ends with">
     <title>does not end with</title>
     <code>
        (match-all (not (header-ends-with "From" ${sender})))
     </code>
    </option>
   </input>
   <input type="string" name="sender"/>
 </part>

 <part name="to">
   <title>Recipients</title>
   <input type="optionlist" name="recipient-type">
    <option value="contains">
     <title>contains</title>
     <code>
	(match-all (or (header-contains "To" ${recipient})
	               (header-contains "Cc" ${recipient})))
     </code>
    </option>
    <option value="not contains">
     <title>does not contain</title>
     <code>
	(match-all (not (or
                          (header-contains "To" ${recipient})
	                  (header-contains "Cc" ${recipient}))))
     </code>
    </option>
    <option value="is">
     <title>is</title>
     <code>
	(match-all (or (header-matches "To" ${recipient})
	    	       (header-matches "Cc" ${recipient})))
     </code>
    </option>
    <option value="is not">
     <title>is not</title>
     <code>
	(match-all (not (or
               (header-matches "To" ${recipient})
	       (header-matches "Cc" ${recipient}))))
     </code>
    </option>
    <option value="starts with">
     <title>starts with</title>
     <code>
        (match-all (or (header-starts-with "To" ${recipient})
	    	       (header-starts-with "Cc" ${recipient})))
     </code>
    </option>
    <option value="not starts with">
     <title>does not start with</title>
     <code>
        (match-all (not (or
               (header-starts-with "To" ${recipient})
	       (header-starts-with "Cc" ${recipient}))))
     </code>
    </option>
    <option value="ends with">
     <title>ends with</title>
     <code>
        (match-all (or (header-ends-with "To" ${recipient})
	    	       (header-ends-with "Cc" ${recipient})))
     </code>
    </option>
    <option value="not ends with">
     <title>does not end with</title>
     <code>
        (match-all (not (or
               (header-ends-with "To" ${recipient})
	       (header-ends-with "Cc" ${recipient}))))
     </code>
    </option>
   </input>
   <input type="address" name="recipient"/>
 </part>

 <part name="subject">
   <title>Subject</title>
   <input type="optionlist" name="subject-type">
    <option value="contains">
     <title>contains</title>
     <code>
	(match-all (header-contains "Subject" ${subject}))
     </code>
    </option>
    <option value="not contains">
     <title>does not contain</title>
     <code>
	(match-all (not (header-contains "Subject" ${subject})))
     </code>
    </option>
    <option value="is">
     <title>is</title>
     <code>
	(match-all (header-matches "Subject" ${subject}))
     </code>
    </option>
    <option value="is not">
     <title>is not</title>
     <code>
	(match-all (not (header-matches "Subject" ${subject}))
     </code>
    </option>
    <option value="starts with">
     <title>starts with</title>
     <code>
	(match-all (header-starts-with "Subject" ${subject}))
     </code>
    </option>
    <option value="not starts with">
     <title>does not start with</title>
     <code>
	(match-all (not (header-starts-with "Subject" ${subject}))
     </code>
    </option>
    <option value="ends with">
     <title>ends with</title>
     <code>
	(match-all (header-ends-with "Subject" ${subject}))
     </code>
    </option>
    <option value="not ends with">
     <title>does not end with</title>
     <code>
	(match-all (not (header-ends-with "Subject" ${subject}))
     </code>
    </option>
   </input>
   <input type="string" name="subject"/>
 </part>
 <part name="body">
   <title>Message Body</title>
   <input type="optionlist" name="body-type">
    <option value="contains">
     <title>contains</title>
     <code>
	(body-contains ${word})
     </code>
    </option>
    <option value="not contains">
     <title>does not contain</title>
     <code>
	(not (body-contains ${word}))
     </code>
    </option>
   </input>
   <input type="string" name="word"/>
 </part>
 <part name="sexp">
   <title>Expression</title>
   <input type="code" name="code"/>
  </part>

 <part name="sent-date">
  <title>Message was sent</title>
  <input type="optionlist" name="date-spec-type">
   <option value="before">
    <title>before</title>
    <code>
       (match-all (&lt; (get-sent-date) ${versus}))
    </code>
   </option>
   <option value="on-or-before">
    <title>on or before</title>
    <code>
       (match-all (not (&gt; (get-sent-date) ${versus})))
    </code>
   </option>
   <option value="after">
    <title>after</title>
    <code>
       (match-all (&gt; (get-sent-date) ${versus}))
    </code>
   </option>
   <option value="on-or-after">
    <title>on or after</title>
    <code>
       (match-all (not (&lt; (get-sent-date) ${versus})))
    </code>
   </option>
  </input>    
  <input type="datespec" name="versus">
  </input>
 </part>

 <part name="recv-date">
  <title>Message was received</title>
  <input type="optionlist" name="date-spec-type">
   <option value="before">
    <title>before</title>
    <code>
       (match-all (&lt; (get-received-date) ${versus}))
    </code>
   </option>
   <option value="on-or-before">
    <title>on or before</title>
    <code>
       (match-all (not (&gt; (get-received-date) ${versus})))
    </code>
   </option>
   <option value="after">
    <title>after</title>
    <code>
       (match-all (&gt; (get-received-date) ${versus}))
    </code>
   </option>
   <option value="on-or-after">
    <title>on or after</title>
    <code>
       (match-all (not (&lt; (get-received-date) ${versus})))
    </code>
   </option>
  </input> 
  <input type="datespec" name="versus">
  </input>
 </part>

 <part name="status">
  <title>Status</title>
  <input type="optionlist" name="match-type">
   <option value="is">
    <title>is</title>
    <code>
     (match-all (system-flag ${flag}))
    </code>
   </option>
   <option value="is not">
    <title>is not</title>
    <code>
     (match-all (not (system-flag ${flag})))
    </code>
   </option>
  </input>
  <input type="optionlist" name="flag">
   <option value="Answered">
    <title>Replied to</title>
   </option>
   <option value="Deleted">
    <title>Deleted</title>
   </option>
   <option value="Draft">
    <title>Draft</title>
   </option>
   <option value="Flagged">
    <title>Important</title>
   </option>
   <option value="Seen">
    <title>Read</title>
   </option>
  </input>
 </part>

 <part name="attachments">
  <title>Attachments</title>
  <input type="optionlist" name="match-type">
   <option value="exist">
    <title>Exist</title>
    <code>
     (match-all (system-flag "Attachments"))
    </code>
   </option>
   <option value="not exist">
    <title>Do Not Exist</title>
    <code>
     (match-all (not (system-flag "Attachments")))
    </code>
   </option>
  </input>
 </part>

 <part name="mlist">
  <title>Mailing list</title>
   <input type="optionlist" name="mlist-type">
    <option value="contains">
        <title>contains</title>
	<code>(match-all (header-contains "x-camel-mlist" ${mlist}))</code>
    </option>
    <option value="not contains">
        <title>does not contain</title>
        <code>(match-all (not (header-contains "x-camel-mlist" ${mlist})))</code>
    </option>
    <option value="is">
        <title>is</title>
	<code>(match-all (header-matches "x-camel-mlist" ${mlist}))</code>
    </option>
    <option value="is not">
        <title>is not</title>
        <code>(match-all (not (header-matches "x-camel-mlist" ${mlist})))</code>
    </option>
    <option value="starts with">
     <title>starts with</title>
     <code>
        (match-all (header-starts-with "x-camel-mlist" ${mlist}))
     </code>
    </option>
    <option value="not starts with">
     <title>does not start with</title>
     <code>
        (match-all (not (header-starts-with "x-camel-mlist" ${mlist})))
     </code>
    </option>
    <option value="ends with">
     <title>ends with</title>
     <code>
        (match-all (header-ends-with "x-camel-mlist" ${mlist}))
     </code>
    </option>
    <option value="not ends with">
     <title>does not end with</title>
     <code>
        (match-all (not (header-ends-with "x-camel-mlist" ${mlist})))
     </code>
    </option>
   </input>
   <input type="string" name="mlist"/>
 </part>

</partset>
</filterdescription>
