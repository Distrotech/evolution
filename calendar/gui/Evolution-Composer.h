/*
 * This file was generated by orbit-idl - DO NOT EDIT!
 */

#include <glib.h>
#define ORBIT_IDL_SERIAL 9
#include <orb/orbit.h>

#ifndef Evolution_Composer_H
#define Evolution_Composer_H 1
#ifdef __cplusplus
extern "C"
{
#endif				/* __cplusplus */

/** typedefs **/
#include <bonobo/Bonobo.h>
#if !defined(ORBIT_DECL_Evolution_Composer) && !defined(_Evolution_Composer_defined)
#define ORBIT_DECL_Evolution_Composer 1
#define _Evolution_Composer_defined 1
#define Evolution_Composer__free CORBA_Object__free
   typedef CORBA_Object Evolution_Composer;
   extern CORBA_unsigned_long Evolution_Composer__classid;
#if !defined(TC_IMPL_TC_Evolution_Composer_0)
#define TC_IMPL_TC_Evolution_Composer_0 'E'
#define TC_IMPL_TC_Evolution_Composer_1 'v'
#define TC_IMPL_TC_Evolution_Composer_2 'o'
#define TC_IMPL_TC_Evolution_Composer_3 'l'
#define TC_IMPL_TC_Evolution_Composer_4 'u'
#define TC_IMPL_TC_Evolution_Composer_5 't'
#define TC_IMPL_TC_Evolution_Composer_6 'i'
#define TC_IMPL_TC_Evolution_Composer_7 'o'
#define TC_IMPL_TC_Evolution_Composer_8 'n'
#define TC_IMPL_TC_Evolution_Composer_9 '_'
#define TC_IMPL_TC_Evolution_Composer_10 'C'
#define TC_IMPL_TC_Evolution_Composer_11 'o'
#define TC_IMPL_TC_Evolution_Composer_12 'm'
#define TC_IMPL_TC_Evolution_Composer_13 'p'
#define TC_IMPL_TC_Evolution_Composer_14 'o'
#define TC_IMPL_TC_Evolution_Composer_15 's'
#define TC_IMPL_TC_Evolution_Composer_16 'e'
#define TC_IMPL_TC_Evolution_Composer_17 'r'
   extern const struct CORBA_TypeCode_struct TC_Evolution_Composer_struct;
#define TC_Evolution_Composer ((CORBA_TypeCode)&TC_Evolution_Composer_struct)
#endif
#endif
#if !defined(_Evolution_Composer_Recipient_defined)
#define _Evolution_Composer_Recipient_defined 1
   typedef struct
   {
      CORBA_char *name;
      CORBA_char *address;
   }
   Evolution_Composer_Recipient;

#if !defined(TC_IMPL_TC_Evolution_Composer_Recipient_0)
#define TC_IMPL_TC_Evolution_Composer_Recipient_0 'E'
#define TC_IMPL_TC_Evolution_Composer_Recipient_1 'v'
#define TC_IMPL_TC_Evolution_Composer_Recipient_2 'o'
#define TC_IMPL_TC_Evolution_Composer_Recipient_3 'l'
#define TC_IMPL_TC_Evolution_Composer_Recipient_4 'u'
#define TC_IMPL_TC_Evolution_Composer_Recipient_5 't'
#define TC_IMPL_TC_Evolution_Composer_Recipient_6 'i'
#define TC_IMPL_TC_Evolution_Composer_Recipient_7 'o'
#define TC_IMPL_TC_Evolution_Composer_Recipient_8 'n'
#define TC_IMPL_TC_Evolution_Composer_Recipient_9 '_'
#define TC_IMPL_TC_Evolution_Composer_Recipient_10 'C'
#define TC_IMPL_TC_Evolution_Composer_Recipient_11 'o'
#define TC_IMPL_TC_Evolution_Composer_Recipient_12 'm'
#define TC_IMPL_TC_Evolution_Composer_Recipient_13 'p'
#define TC_IMPL_TC_Evolution_Composer_Recipient_14 'o'
#define TC_IMPL_TC_Evolution_Composer_Recipient_15 's'
#define TC_IMPL_TC_Evolution_Composer_Recipient_16 'e'
#define TC_IMPL_TC_Evolution_Composer_Recipient_17 'r'
   extern const struct CORBA_TypeCode_struct
      TC_Evolution_Composer_Recipient_struct;
#define TC_Evolution_Composer_Recipient ((CORBA_TypeCode)&TC_Evolution_Composer_Recipient_struct)
#endif
   extern Evolution_Composer_Recipient
      *Evolution_Composer_Recipient__alloc(void);
   extern gpointer Evolution_Composer_Recipient__free(gpointer mem,
						      gpointer dat,
						      CORBA_boolean free_strings);	/* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_Evolution_Composer_Recipient) && !defined(_CORBA_sequence_Evolution_Composer_Recipient_defined)
#define ORBIT_DECL_CORBA_sequence_Evolution_Composer_Recipient 1
#define _CORBA_sequence_Evolution_Composer_Recipient_defined 1
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_0 'E'
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_1 'v'
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_2 'o'
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_3 'l'
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_4 'u'
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_5 't'
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_6 'i'
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_7 'o'
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_8 'n'
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_9 '_'
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_10 'C'
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_11 'o'
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_12 'm'
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_13 'p'
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_14 'o'
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_15 's'
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_16 'e'
#define ORBIT_IMPL_CORBA_sequence_Evolution_Composer_Recipient_17 'r'
   typedef struct
   {
      CORBA_unsigned_long _maximum,
       _length;
      Evolution_Composer_Recipient *_buffer;
      CORBA_boolean _release;
   }
   CORBA_sequence_Evolution_Composer_Recipient;
#if !defined(TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_0)
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_0 'E'
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_1 'v'
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_2 'o'
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_3 'l'
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_4 'u'
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_5 't'
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_6 'i'
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_7 'o'
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_8 'n'
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_9 '_'
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_10 'C'
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_11 'o'
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_12 'm'
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_13 'p'
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_14 'o'
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_15 's'
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_16 'e'
#define TC_IMPL_TC_CORBA_sequence_Evolution_Composer_Recipient_17 'r'
   extern const struct CORBA_TypeCode_struct
      TC_CORBA_sequence_Evolution_Composer_Recipient_struct;
#define TC_CORBA_sequence_Evolution_Composer_Recipient ((CORBA_TypeCode)&TC_CORBA_sequence_Evolution_Composer_Recipient_struct)
#endif
   extern CORBA_sequence_Evolution_Composer_Recipient
      *CORBA_sequence_Evolution_Composer_Recipient__alloc(void);
   extern gpointer CORBA_sequence_Evolution_Composer_Recipient__free(gpointer
								     mem,
								     gpointer
								     dat,
								     CORBA_boolean free_strings);	/* ORBit internal use */
   Evolution_Composer_Recipient
      *CORBA_sequence_Evolution_Composer_Recipient_allocbuf
      (CORBA_unsigned_long len);
#endif
#if !defined(_Evolution_Composer_RecipientList_defined)
#define _Evolution_Composer_RecipientList_defined 1
   typedef CORBA_sequence_Evolution_Composer_Recipient
      Evolution_Composer_RecipientList;
#if !defined(TC_IMPL_TC_Evolution_Composer_RecipientList_0)
#define TC_IMPL_TC_Evolution_Composer_RecipientList_0 'E'
#define TC_IMPL_TC_Evolution_Composer_RecipientList_1 'v'
#define TC_IMPL_TC_Evolution_Composer_RecipientList_2 'o'
#define TC_IMPL_TC_Evolution_Composer_RecipientList_3 'l'
#define TC_IMPL_TC_Evolution_Composer_RecipientList_4 'u'
#define TC_IMPL_TC_Evolution_Composer_RecipientList_5 't'
#define TC_IMPL_TC_Evolution_Composer_RecipientList_6 'i'
#define TC_IMPL_TC_Evolution_Composer_RecipientList_7 'o'
#define TC_IMPL_TC_Evolution_Composer_RecipientList_8 'n'
#define TC_IMPL_TC_Evolution_Composer_RecipientList_9 '_'
#define TC_IMPL_TC_Evolution_Composer_RecipientList_10 'C'
#define TC_IMPL_TC_Evolution_Composer_RecipientList_11 'o'
#define TC_IMPL_TC_Evolution_Composer_RecipientList_12 'm'
#define TC_IMPL_TC_Evolution_Composer_RecipientList_13 'p'
#define TC_IMPL_TC_Evolution_Composer_RecipientList_14 'o'
#define TC_IMPL_TC_Evolution_Composer_RecipientList_15 's'
#define TC_IMPL_TC_Evolution_Composer_RecipientList_16 'e'
#define TC_IMPL_TC_Evolution_Composer_RecipientList_17 'r'
   extern const struct CORBA_TypeCode_struct
      TC_Evolution_Composer_RecipientList_struct;
#define TC_Evolution_Composer_RecipientList ((CORBA_TypeCode)&TC_Evolution_Composer_RecipientList_struct)
#endif
   extern Evolution_Composer_RecipientList
      *Evolution_Composer_RecipientList__alloc(void);
   extern gpointer Evolution_Composer_RecipientList__free(gpointer mem,
							  gpointer dat,
							  CORBA_boolean free_strings);	/* ORBit internal use */
#endif
#define ex_Evolution_Composer_CouldNotParse "IDL:Evolution/Composer/CouldNotParse:1.0"
   void _ORBIT_Evolution_Composer_CouldNotParse_demarshal(GIOPRecvBuffer *
							  _ORBIT_recv_buffer,
							  CORBA_Environment *
							  ev);
   void _ORBIT_Evolution_Composer_CouldNotParse_marshal(GIOPSendBuffer *
							_ORBIT_send_buffer,
							CORBA_Environment *
							ev);
#if !defined(_Evolution_Composer_CouldNotParse_defined)
#define _Evolution_Composer_CouldNotParse_defined 1
   typedef struct
   {
      int dummy;
   }
   Evolution_Composer_CouldNotParse;

#if !defined(TC_IMPL_TC_Evolution_Composer_CouldNotParse_0)
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_0 'E'
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_1 'v'
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_2 'o'
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_3 'l'
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_4 'u'
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_5 't'
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_6 'i'
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_7 'o'
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_8 'n'
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_9 '_'
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_10 'C'
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_11 'o'
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_12 'm'
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_13 'p'
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_14 'o'
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_15 's'
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_16 'e'
#define TC_IMPL_TC_Evolution_Composer_CouldNotParse_17 'r'
   extern const struct CORBA_TypeCode_struct
      TC_Evolution_Composer_CouldNotParse_struct;
#define TC_Evolution_Composer_CouldNotParse ((CORBA_TypeCode)&TC_Evolution_Composer_CouldNotParse_struct)
#endif
#define Evolution_Composer_CouldNotParse__alloc() NULL
   extern gpointer Evolution_Composer_CouldNotParse__free(gpointer mem,
							  gpointer dat,
							  CORBA_boolean free_strings);	/* ORBit internal use */
#endif

/** POA structures **/
   typedef struct
   {
      void *_private;
      void (*set_headers) (PortableServer_Servant _servant,
			   const Evolution_Composer_RecipientList * to,
			   const Evolution_Composer_RecipientList * cc,
			   const Evolution_Composer_RecipientList * bcc,
			   const CORBA_char * subject,
			   CORBA_Environment * ev);
      void (*set_body_text) (PortableServer_Servant _servant,
			     const CORBA_char * body, CORBA_Environment * ev);
      void (*attach_MIME) (PortableServer_Servant _servant,
			   const CORBA_char * data, CORBA_Environment * ev);
      void (*attach_data) (PortableServer_Servant _servant,
			   const CORBA_char * content_type,
			   const CORBA_char * filename,
			   const CORBA_char * description,
			   const CORBA_boolean show_inline,
			   const CORBA_char * data, CORBA_Environment * ev);
      void (*show) (PortableServer_Servant _servant, CORBA_Environment * ev);
   }
   POA_Evolution_Composer__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_Evolution_Composer__epv *Evolution_Composer_epv;
   }
   POA_Evolution_Composer__vepv;
   typedef struct
   {
      void *_private;
      POA_Evolution_Composer__vepv *vepv;
   }
   POA_Evolution_Composer;
   extern void POA_Evolution_Composer__init(PortableServer_Servant servant,
					    CORBA_Environment * ev);
   extern void POA_Evolution_Composer__fini(PortableServer_Servant servant,
					    CORBA_Environment * ev);

/** prototypes **/
#define Evolution_Composer_ref Bonobo_Unknown_ref
#define Evolution_Composer_unref Bonobo_Unknown_unref
#define Evolution_Composer_queryInterface Bonobo_Unknown_queryInterface
   void Evolution_Composer_set_headers(Evolution_Composer _obj,
				       const Evolution_Composer_RecipientList
				       * to,
				       const Evolution_Composer_RecipientList
				       * cc,
				       const Evolution_Composer_RecipientList
				       * bcc, const CORBA_char * subject,
				       CORBA_Environment * ev);
   void Evolution_Composer_set_body_text(Evolution_Composer _obj,
					 const CORBA_char * body,
					 CORBA_Environment * ev);
   void Evolution_Composer_attach_MIME(Evolution_Composer _obj,
				       const CORBA_char * data,
				       CORBA_Environment * ev);
   void Evolution_Composer_attach_data(Evolution_Composer _obj,
				       const CORBA_char * content_type,
				       const CORBA_char * filename,
				       const CORBA_char * description,
				       const CORBA_boolean show_inline,
				       const CORBA_char * data,
				       CORBA_Environment * ev);
   void Evolution_Composer_show(Evolution_Composer _obj,
				CORBA_Environment * ev);

   void _ORBIT_skel_Evolution_Composer_set_headers(POA_Evolution_Composer *
						   _ORBIT_servant,
						   GIOPRecvBuffer *
						   _ORBIT_recv_buffer,
						   CORBA_Environment * ev,
						   void (*_impl_set_headers)
						   (PortableServer_Servant
						    _servant,
						    const
						    Evolution_Composer_RecipientList
						    * to,
						    const
						    Evolution_Composer_RecipientList
						    * cc,
						    const
						    Evolution_Composer_RecipientList
						    * bcc,
						    const CORBA_char *
						    subject,
						    CORBA_Environment * ev));
   void _ORBIT_skel_Evolution_Composer_set_body_text(POA_Evolution_Composer *
						     _ORBIT_servant,
						     GIOPRecvBuffer *
						     _ORBIT_recv_buffer,
						     CORBA_Environment * ev,
						     void
						     (*_impl_set_body_text)
						     (PortableServer_Servant
						      _servant,
						      const CORBA_char * body,
						      CORBA_Environment *
						      ev));
   void _ORBIT_skel_Evolution_Composer_attach_MIME(POA_Evolution_Composer *
						   _ORBIT_servant,
						   GIOPRecvBuffer *
						   _ORBIT_recv_buffer,
						   CORBA_Environment * ev,
						   void (*_impl_attach_MIME)
						   (PortableServer_Servant
						    _servant,
						    const CORBA_char * data,
						    CORBA_Environment * ev));
   void _ORBIT_skel_Evolution_Composer_attach_data(POA_Evolution_Composer *
						   _ORBIT_servant,
						   GIOPRecvBuffer *
						   _ORBIT_recv_buffer,
						   CORBA_Environment * ev,
						   void (*_impl_attach_data)
						   (PortableServer_Servant
						    _servant,
						    const CORBA_char *
						    content_type,
						    const CORBA_char *
						    filename,
						    const CORBA_char *
						    description,
						    const CORBA_boolean
						    show_inline,
						    const CORBA_char * data,
						    CORBA_Environment * ev));
   void _ORBIT_skel_Evolution_Composer_show(POA_Evolution_Composer *
					    _ORBIT_servant,
					    GIOPRecvBuffer *
					    _ORBIT_recv_buffer,
					    CORBA_Environment * ev,
					    void (*_impl_show)
					    (PortableServer_Servant _servant,
					     CORBA_Environment * ev));
#ifdef __cplusplus
}
#endif				/* __cplusplus */

#endif
#undef ORBIT_IDL_SERIAL
