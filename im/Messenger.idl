#include <Bonobo.idl>

module GNOME {
module Evolution {
module Messenger {
	enum UserStatus {
		UserStatus_ONLINE,
		UserStatus_IDLE,
		UserStatus_AWAY,
		UserStatus_NOT_AVAILABLE,
		UserStatus_OCCUPIED,
		UserStatus_INVISIBLE,
		UserStatus_FREE_CHAT
	};
	
	typedef string Identity;

	interface Backend : Bonobo::Unknown {
		exception UnknownContact {};

		typedef sequence<string> SignonList;

		void signoff(in string signon);

		void signoffAll();

		void changeStatus(in string signon, in UserStatus status,
				  in string data);

		void sendMessage(in string signon, in string contact, 
				 in string message);

		void contactInfo(in string signon, in string contact);

		void addContact(in string signon, in string contact);

		void removeContact(in string signon, in string contact);

		void keepalive(in string signon);

	};

	interface Listener : Bonobo::Unknown {
		enum SignonError {
			SignonError_NONE,
			SignonError_INVALID_LOGIN,
			SignonError_NET_FAILURE
		};

		/* Async responses */
		void signonResult(in Identity id, in Backend backend,
				  in SignonError error);
		void contactInfoResult(in Identity id, in string info);
		
		/* Async incoming events */
		void receiveMessage(in Identity id, in string contact,
				    in boolean autoresponse,
				    in string message);

		void contactUpdate(in Identity id, in string contact,
				   in boolean online, in UserStatus status);
	};
		

	interface BackendDispatcher : Bonobo::Unknown {
		exception ServiceNotSupported {};

		void signon(in string service, in string signon,
			    in string password, in Listener listener)
			raises (ServiceNotSupported);
	};
};
};
};
