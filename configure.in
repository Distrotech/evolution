# Process this file with autoconf to produce a configure script.
AC_INIT(camel)
AM_CONFIG_HEADER(config.h)

EVOLUTION_MAJOR_VERSION=1
EVOLUTION_MINOR_VERSION=0
EVOLUTION_MICRO_VERSION=5
EVOLUTION_NANO_VERSION=0
VERSION=$EVOLUTION_MAJOR_VERSION.$EVOLUTION_MINOR_VERSION.$EVOLUTION_MICRO_VERSION
PACKAGE=evolution

AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AC_SUBST(VERSION)

AC_CANONICAL_HOST

AC_DEFINE_UNQUOTED(VERSION_COMMENT, "")
	
AC_DEFUN(EVO_CHECK_LIB, [
	dispname="$1"
	pkgname="$2"
	minvers="$3"
	maxvers="$4"

	AC_MSG_CHECKING(for $dispname)

	if gnome-config --libs $pkgname > /dev/null 2>&1; then
		pkgvers=`gnome-config --modversion $pkgname | sed -e 's/^[[^0-9]]*//'`
	else
		pkgvers=not
	fi
	AC_MSG_RESULT($pkgvers found)

	pkgvers=`echo $pkgvers | awk -F. '{ print $[]1 * 1000000 + $[]2 * 10000 + $[]3 * 100 + $[]4;}'`
	cmpminvers=`echo $minvers | awk -F. '{ print $[]1 * 1000000 + $[]2 * 10000 + $[]3 * 100 + $[]4;}'`
	cmpmaxvers=`echo $maxvers | awk -F. '{ print $[]1 * 1000000 + $[]2 * 10000 + $[]3 * 100 + $[]4;}'`
	ok=yes
	if test "$pkgvers" -lt $cmpminvers; then
		ok=no
	elif test -n "$maxvers"; then
		if test "$pkgvers" -gt $cmpmaxvers; then
			ok=no
		elif test "$maxvers" != "$minvers" -a "$cmpmaxvers" -eq "$pkgvers"; then
			ok=no
		fi
	fi
	if test $ok = no; then
		case $maxvers in
		"")
			dispvers="$minvers or higher"
			;;
		$minvers)
			dispvers="$minvers (exactly)"
			;;
		*)
			dispvers="$minvers or higher, but less than $maxvers,"
			;;
		esac

		AC_MSG_ERROR([
""
"You need $dispname $dispvers to build Evolution"
"If you think you already have this installed, consult the README."])
	fi
])

SCROLLKEEPER_REQUIRED=0.1.4
AC_SUBST(SCROLLKEEPER_REQUIRED)

dnl Check for scrollkeeper
AC_PATH_PROG(SCROLLKEEPER_CONFIG, scrollkeeper-config,no)
if test x$SCROLLKEEPER_CONFIG = xno; then
  AC_MSG_ERROR(Couldn't find scrollkeeper-config -- please install the scrollkeeper package)
fi
SCROLLKEEPER_LOCALSTATE_DIR=`scrollkeeper-config --pkglocalstatedir`
AC_SUBST(SCROLLKEEPER_LOCALSTATE_DIR)

dnl  Test whether jw is installed
AC_PATH_PROG(JW,jw,no)
if test x$JW = xno; then
  HAVE_JW="no"
else
  HAVE_JW="yes"
fi
AM_CONDITIONAL(HAVE_JW, test "x$HAVE_JW" = "xyes")
AC_SUBST(HAVE_JW)

dnl Initialize maintainer mode
AM_MAINTAINER_MODE

AC_ISC_POSIX
AC_PROG_CC
AC_PROG_CPP
AM_PROG_LEX
AC_PROG_YACC
case $YACC in
*yacc*)
	AC_MSG_ERROR(You need bison to build Evolution)
	;;
esac
AC_STDC_HEADERS
AC_ARG_PROGRAM
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET

dnl Initialize xml-i18n-tools
AM_PROG_XML_I18N_TOOLS

dnl Initialize libtool
AM_PROG_LIBTOOL

AM_ACLOCAL_INCLUDE(macros)
GNOME_INIT()
GNOME_COMPILE_WARNINGS
GNOME_X_CHECKS
EVO_CHECK_LIB(gnome-libs, gnome, 1.2.9)

ALL_LINGUAS="az bg ca da de el en_AU en_GB es fi fr ga gl hu it ja ko lt lv nl nn no pl pt pt_BR ro ru sk sl sv tr uk zh_CN zh_TW"
AM_GNOME_GETTEXT
localedir='$(prefix)/$(DATADIRNAME)/locale'
AC_SUBST(localedir)

dnl
dnl Purify support
dnl
AC_ARG_ENABLE(purify, 
[  --enable-purify=[no/yes]      Enable support for building executables with
                                Purify.],,enable_purify=no)
AC_PATH_PROG(PURIFY, purify, impure)
AC_ARG_WITH(purify-options, [  --with-purify-options=OPTIONS      Options passed to the purify command line (defaults to PURIFYOPTIONS variable).])
if test "x$with_purify_options" = "xno"; then
  with_purify_options="-always-use-cache-dir=yes -cache-dir=/gnome/lib/purify"
fi
if test "x$PURIFYOPTIONS" = "x"; then
  PURIFYOPTIONS=$with_purify_options
fi
AC_SUBST(PURIFY)
AM_CONDITIONAL(ENABLE_PURIFY, test "x$enable_purify" = "xyes" -a "x$PURIFY" != "ximpure")
PURIFY="$PURIFY $PURIFYOPTIONS"


AC_PATH_PROG(SENDMAIL, sendmail, /usr/sbin/sendmail, /usr/sbin:/usr/lib)
AC_DEFINE_UNQUOTED(SENDMAIL_PATH, "$SENDMAIL")

AC_MSG_CHECKING(system mail directory)
if test -d /var/mail -a '!' -h /var/mail ; then
	system_mail_dir=/var/mail
else
	system_mail_dir=/var/spool/mail
fi
AC_DEFINE_UNQUOTED(SYSTEM_MAIL_DIR, "$system_mail_dir")

case `ls -ld $system_mail_dir 2>&1 | awk '{print $1;}'` in
d??????rw?)
	CAMEL_LOCK_HELPER_USER=""
	CAMEL_LOCK_HELPER_GROUP=""
	system_mail_perm="world writable"
	;;

d???rw????)
	CAMEL_LOCK_HELPER_USER=""
	CAMEL_LOCK_HELPER_GROUP=`ls -ld $system_mail_dir 2>&1 | awk '{print $4;}'`
	system_mail_perm="writable by group $CAMEL_LOCK_HELPER_GROUP"
	;;

drw???????)
	CAMEL_LOCK_HELPER_USER=`ls -ld $system_mail_dir 2>&1 | awk '{print $3;}'`
	CAMEL_LOCK_HELPER_GROUP=""
	system_mail_perm="writable by user $CAMEL_LOCK_HELPER_USER"
	;;

*)
	CAMEL_LOCK_HELPER_USER=""
	CAMEL_LOCK_HELPER_GROUP=""
	system_mail_perm="???"
	;;
esac

AC_MSG_RESULT([$system_mail_dir, $system_mail_perm])
AC_SUBST(CAMEL_LOCK_HELPER_USER)
AC_SUBST(CAMEL_LOCK_HELPER_GROUP)

dnl * Time zone stuff
AC_CACHE_CHECK(for timezone variable, ac_cv_var_timezone,
	AC_TRY_COMPILE([
		#include <time.h>
	], [
		timezone = 1;
	], ac_cv_var_timezone=yes, ac_cv_var_timezone=no))
if test $ac_cv_var_timezone = yes; then
	AC_DEFINE(HAVE_TIMEZONE)
else
	AC_CACHE_CHECK(for tm_gmtoff in struct tm, ac_cv_struct_tm_gmtoff,
		AC_TRY_COMPILE([
			#include <time.h>
			], [
			struct tm tm;
			tm.tm_gmtoff = 1;
			], ac_cv_struct_tm_gmtoff=yes, ac_cv_struct_tm_gmtoff=no))
	if test $ac_cv_struct_tm_gmtoff = yes; then
		AC_DEFINE(HAVE_TM_GMTOFF)
	else
		AC_ERROR(unable to find a way to determine timezone)
	fi
fi

AC_CHECK_FUNCS(mkstemp mkdtemp isblank)

dnl **************************************************
dnl ctime_r prototype
dnl **************************************************

AC_CACHE_CHECK([if ctime_r wants three arguments], ac_cv_ctime_r_three_args,
[
	AC_TRY_COMPILE([
		#include <time.h>
	],[
		char *buf;
		time_t date;
		ctime_r( &date, buf, 100 );
	],[
		ac_cv_ctime_r_three_args=yes
	],[
		ac_cv_ctime_r_three_args=no
	])
])
	
if test x"$ac_cv_ctime_r_three_args" = xyes ; then
	AC_DEFINE(CTIME_R_THREE_ARGS)
fi

dnl **************************************************
dnl gethostbyname_r prototype
dnl **************************************************

AC_CHECK_FUNCS(gethostbyname_r,[
AC_CACHE_CHECK([if gethostbyname_r wants five arguments], ac_cv_gethostbyname_r_five_args,
[
	AC_TRY_COMPILE([
		#include "confdefs.h"
		#include <sys/types.h>
		#include <sys/socket.h>
		#include <netinet/in.h>
		#include <netdb.h>

		#define BUFSIZE (sizeof(struct hostent)+10)
	],[
		struct hostent hent;
		char buffer[BUFSIZE];
		int bufsize=BUFSIZE;
		int h_errno;

		(void)gethostbyname_r( "www.ximian.com", &hent, buffer, bufsize, &h_errno);
	],[
		ac_cv_gethostbyname_r_five_args=yes
	],[
		ac_cv_gethostbyname_r_five_args=no
	])
])])
	
if test x"$ac_cv_gethostbyname_r_five_args" = xyes ; then
	AC_DEFINE(GETHOSTBYNAME_R_FIVE_ARGS)
fi

dnl ***********
dnl * db3 stuff
dnl ***********

# To ensure that any copy of evolution of a given version can read
# the data files of any other copy, we require a precise db3 version.
# This can only change between Evolution versions (and then can only
# go up.)
evolution_db_version_major=3
evolution_db_version_minor=1
evolution_db_version_patch=17

evolution_db_version=${evolution_db_version_major}.${evolution_db_version_minor}.${evolution_db_version_patch}
AC_DEFINE_UNQUOTED(EVOLUTION_DB_VERSION_MAJOR,$evolution_db_version_major)
AC_DEFINE_UNQUOTED(EVOLUTION_DB_VERSION_MINOR,$evolution_db_version_minor)
AC_DEFINE_UNQUOTED(EVOLUTION_DB_VERSION_PATCH,$evolution_db_version_patch)


AC_ARG_WITH(db3,          [  --with-db3=PREFIX              Location of db3],
	[with_db3_includes="$withval/include"
	 with_db3_libs="$withval/lib"])
AC_ARG_WITH(db3-includes, [  --with-db3-includes=PATH       Location of db3 includes],
	with_db3_includes="$withval")
AC_ARG_WITH(db3-libs,     [  --with-db3-libs=PATH           Location of db3 libs],
	with_db3_libs="$withval")

if test -z "$with_db3_libs"; then
	with_db3_libs="/usr/lib"
fi

dnl The AC_CACHE_CHECK lets you avoid having to specify --with-db3
dnl again with later configures
AC_CACHE_CHECK([for db3 compiler flags], ac_cv_db3_cflags,
[
	if test -n "${with_db3_includes}"; then
		ac_cv_db3_cflags="-I$with_db3_includes"
	fi
])
DB3_CFLAGS=$ac_cv_db3_cflags
AC_SUBST(DB3_CFLAGS)

CPPFLAGS_save="$CPPFLAGS"
CPPFLAGS="$DB3_CFLAGS $CPPFLAGS"
AC_CHECK_HEADERS(db.h db3/db.h, break)

AC_CACHE_CHECK([db3 header version], ac_cv_db3_header_version,
[
	AC_TRY_COMPILE([
		#ifdef HAVE_DB3_DB_H
		#include <db3/db.h>
		#else
		#include <db.h>
		#endif
	],[
		#if DB_VERSION_MAJOR != $evolution_db_version_major || \
		    DB_VERSION_MINOR != $evolution_db_version_minor || \
		    DB_VERSION_PATCH != $evolution_db_version_patch
		#error
		#endif
	], :, AC_MSG_ERROR(Found db.h is not version $evolution_db_version))

	ac_cv_db3_header_version=$evolution_db_version
])

AC_CACHE_CHECK([for db3 library name], ac_cv_db3_ldadd,
[
	LIBS_save="$LIBS"
	ac_cv_db3_ldadd=""

	for name in db db3 db-3.1; do
		LIBS="$LIBS_save $with_db3_libs/lib${name}.a"
		AC_TRY_LINK([
			#ifdef HAVE_DB3_DB_H
			#include <db3/db.h>
			#else
			#include <db.h>
			#endif
		],[
			DB *db;
			db_create (&db, 0, 0);
		], [
			ac_cv_db3_ldadd="$with_db3_libs/lib${name}.a"
			break
		])
	done
	LIBS="$LIBS_save"

	if test -z "$ac_cv_db3_ldadd"; then
		AC_MSG_ERROR(Could not find db3 library)
	fi
])
DB3_LDADD=$ac_cv_db3_ldadd
AC_SUBST(DB3_LDADD)

AC_CACHE_CHECK([that db3 library version matches header version], ac_cv_db3_lib_version_match,
[
	LIBS="$DB3_LDADD $LIBS"
	AC_TRY_RUN([
		#ifdef HAVE_DB3_DB_H
		#include <db3/db.h>
		#else
		#include <db.h>
		#endif

		int
		main (void)
		{
			int major, minor, patch;

			db_version (&major, &minor, &patch);
			return !(major == DB_VERSION_MAJOR &&
				 minor == DB_VERSION_MINOR &&
				 patch == DB_VERSION_PATCH);
		}
	], ac_cv_db3_lib_version_match=yes, ac_cv_db3_lib_version_match=no,
	ac_cv_db3_lib_version_match=yes)
])
if test "$ac_cv_db3_lib_version_match" = no; then
	AC_MSG_ERROR(db3 headers and library do not match... multiple copies installed?)
fi

CPPFLAGS="$CPPFLAGS_save"
LIBS="$LIBS_save"


dnl **************************************************
dnl * ldap related stuff.
dnl **************************************************
AC_ARG_WITH(openldap,     [  --with-openldap=[no/yes/PREFIX]      Enable LDAP support in evolution])
AC_ARG_WITH(static-ldap,  [  --with-static-ldap=[no/yes]          Link LDAP support statically into evolution ])
AC_CACHE_CHECK([for OpenLDAP], ac_cv_with_openldap, ac_cv_with_openldap="${with_openldap:=no}")
case $ac_cv_with_openldap in
no|"")
	msg_ldap=no
	;;
yes)
	with_openldap=/usr
	msg_ldap=yes
	;;
*)
	with_openldap=$ac_cv_with_openldap
	LDAP_CFLAGS="-I$ac_cv_with_openldap/include"
	LDAP_LDFLAGS="-L$ac_cv_with_openldap/lib"
	msg_ldap=yes
	;;
esac

if test "$msg_ldap" = yes; then

	AC_DEFINE(HAVE_LDAP)

	if test -f $with_openldap/lib/libldap.la; then
		msg_ldap_linktype="(static)"
	else
		msg_ldap_linktype="(dynamic)"
	fi


	if test "${with_static_ldap+set}" = set; then
		case $with_static_ldap in
		no|"")
			msg_ldap_linktype="(dynamic)"
			;;
		*)
			msg_ldap_linktype="(static)"
			;;
		esac
	fi

	AC_CACHE_CHECK(if OpenLDAP is version 2.x, ac_cv_openldap_version2, [
		CPPFLAGS_save="$CPPFLAGS"
		CPPFLAGS="$CPPFLAGS $LDAP_CFLAGS"
		AC_EGREP_CPP(yes, [
			#include "ldap.h"
			#if LDAP_VENDOR_VERSION > 20000
			yes
			#endif
		], ac_cv_openldap_version2=yes, ac_cv_openldap_version2=no)
		CPPFLAGS="$CPPFLAGS_save"
	])
	if test "$ac_cv_openldap_version2" = no; then
		AC_MSG_ERROR(evolution requires OpenLDAP version >= 2)
	fi

	AC_CHECK_LIB(resolv, res_query, LDAP_LIBS="-lresolv")
	AC_CHECK_LIB(socket, bind, LDAP_LIBS="$LDAP_LIBS -lsocket")
	AC_CHECK_LIB(nsl, gethostbyaddr, LDAP_LIBS="$LDAP_LIBS -lnsl")
	AC_CHECK_LIB(lber, ber_get_tag, [
		if test "$msg_ldap_linktype" = "(static)"; then
			LDAP_LIBS="$with_openldap/lib/liblber.a $LDAP_LIBS"

			# libldap might depend on OpenSSL... We need to pull
			# in the dependency libs explicitly here since we're
			# not using libtool for the configure test.
			if test -f $with_openldap/lib/libldap.la; then
				LDAP_LIBS="`. $with_openldap/lib/libldap.la; echo $dependency_libs` $LDAP_LIBS"
			fi
		else
			LDAP_LIBS="-llber $LDAP_LIBS"
		fi
		AC_CHECK_LIB(ldap, ldap_open, [
				if test $msg_ldap_linktype = "(static)"; then
					LDAP_LIBS="$with_openldap/lib/libldap.a $LDAP_LIBS"
				else
					LDAP_LIBS="-lldap $LDAP_LIBS"
				fi],
			LDAP_LIBS="", $LDAP_LDFLAGS $LDAP_LIBS)
		LDAP_LIBS="$LDAP_LDFLAGS $LDAP_LIBS"
	], LDAP_LIBS="", $LDAP_LDFLAGS $LDAP_LIBS)

	if test -z "$LDAP_LIBS"; then
		AC_MSG_ERROR(could not find OpenLDAP libraries)
	elif test "$msg_ldap_linktype" = "(static)"; then
		case "$host" in
		   *solaris*)
		         if echo $LDAP_LIBS | grep -- "-lresolv" >/dev/null 2>&1; then
		           LDAP_LIBS=`echo $LDAP_LIBS | sed "s,-lresolv ,,g"`
			   LDAP_SHARED="-lresolv"
		         fi
		  ;;
		esac

		LDAP_LIBS="-Wl,-Bstatic $LDAP_LIBS -Wl,-Bdynamic $LDAP_SHARED"
	fi

	AC_SUBST(LDAP_CFLAGS)
	AC_SUBST(LDAP_LIBS)
fi
AM_CONDITIONAL(ENABLE_LDAP, test $msg_ldap = yes)

dnl **************************************************
dnl NNTP support.
dnl **************************************************
AC_ARG_ENABLE(nntp, 
[  --enable-nntp=[no/yes]      Attempt to compile incomplete, unsupported NNTP code],,enable_nntp=no)
if test "x$enable_nntp" = "xyes"; then
	AC_DEFINE(ENABLE_NNTP)
	msg_nntp=yes
else
	msg_nntp=no
fi
AM_CONDITIONAL(ENABLE_NNTP, test x$enable_nntp = xyes)

dnl **************************************************
dnl * Posix thread support
dnl **************************************************

dnl Hah! Threads are no longer an option
dnl AC_ARG_WITH(threads, [  --with-threads          Include thread support],[
dnl FIXME: support more thread types, pth at least

GLIB_CONFIG=${GLIB_CONFIG-glib-config}
GNOME_PTHREAD_CHECK

if test "x$PTHREAD_LIB" = "x" ; then
	AC_MSG_ERROR([POSIX threads are currently required for Evolution])
fi

dnl
dnl Notice that this is a hack, and we wont be able to use this forever, but
dnl at least for some time
dnl

THREADS_LIBS="$PTHREAD_LIB `$GLIB_CONFIG --libs gthread`"
THREADS_CFLAGS="`$GLIB_CONFIG --cflags gthread`"

AC_SUBST(THREADS_LIBS)
AC_SUBST(THREADS_CFLAGS)
AC_DEFINE(ENABLE_THREADS)

dnl **************************************************
dnl * File locking
dnl **************************************************

AC_ARG_ENABLE(dot-locking, 
[  --enable-dot-locking=[yes/no] Enable support for locking mail files with dot locking],,enable_dot_locking=yes)
if test "x$enable_dot_locking" = "xyes"; then
  AC_DEFINE(USE_DOT)
  msg_dot=yes
else
  msg_dot=no	
fi

AC_ARG_ENABLE(file-locking, 
[  --enable-file-locking=[fcntl/flock/no] Enable support for locking mail files with file locking],,enable_file_locking=fcntl)
if test "x$enable_file_locking" = "xfcntl"; then
  AC_DEFINE(USE_FCNTL)
  msg_file=fcntl
else
  if test "x$enable_file_locking" = "xflock"; then
    AC_DEFINE(USE_FLOCK)
    msg_file=flock
  else
    msg_file=no	
  fi
fi

dnl **************************************************
dnl * sendmail operation
dnl **************************************************

AC_MSG_CHECKING(for SunOS broken spool format)
if test "x$host_os" = "xsunos" ; then
   with_broken_spool="yes"
fi

AC_ARG_WITH(broken-spool, 
[  --with-broken-spool=[yes/no] Using SunOS/Solaris sendmail which has a broken spool format],,with_broken_spool=${with_broken_spool:=no})

if test "x$with_broken_spool" = "xyes"; then
  AC_DEFINE(HAVE_BROKEN_SPOOL)
fi

AC_MSG_RESULT($with_broken_spool)

dnl ***************
dnl GNOME Libraries
dnl ***************
EVO_CHECK_LIB(Bonobo, bonobox, 1.0.3)
EVO_CHECK_LIB(OAF, oaf, 0.6.2)
EVO_CHECK_LIB(libglade, libglade, 0.14)
EVO_CHECK_LIB(gdk-pixbuf with GNOME canvas support, gnomecanvaspixbuf, 0.9.0)
EVO_CHECK_LIB(GNOME-VFS, vfs, 1.0)
EVO_CHECK_LIB(libxml, xml, 1.8.10, 2.0)
EVO_CHECK_LIB(bonobo-conf, bonobo_conf, 0.11)

EVO_CHECK_LIB(GAL, gal, 0.19.2)
EVO_CHECK_LIB(GtkHTML, gtkhtml, 1.0.1)

dnl *************************
dnl CFLAGS and LIBS and stuff
dnl *************************
GLIB_CFLAGS="`$GLIB_CONFIG --cflags`"
GLIB_LIBS="`$GLIB_CONFIG --libs`"
AC_SUBST(GLIB_CFLAGS)
AC_SUBST(GLIB_LIBS)

GAL_CFLAGS="`gnome-config --cflags gal`"
GAL_LIBS="`gnome-config --libs gal`"
AC_SUBST(GAL_CFLAGS)
AC_SUBST(GAL_LIBS)

BONOBO_CONF_CFLAGS="`gnome-config --cflags bonobo_conf`"
BONOBO_CONF_LIBS="`gnome-config --libs bonobo_conf`"
AC_SUBST(BONOBO_CONF_CFLAGS)
AC_SUBST(BONOBO_CONF_LIBS)

EXTRA_GNOME_LIBS="`gnome-config --libs libglade gdk_pixbuf libart gnomecanvaspixbuf gnomeui gal` $THREADS_LIBS"
EXTRA_GNOME_CFLAGS="`gnome-config --cflags libglade gdk_pixbuf libart gnomecanvaspixbuf gnomeui gal` $THREADS_CFLAGS"

AC_SUBST(EXTRA_GNOME_LIBS)
AC_SUBST(EXTRA_GNOME_CFLAGS)

BONOBO_GNOME_LIBS="`gnome-config --libs oaf bonobox_print libglade gdk_pixbuf gnomecanvaspixbuf gnomeui` $OAF_LIBS"
BONOBO_GNOME_CFLAGS="`gnome-config --cflags oaf bonobox_print libglade gdk_pixbuf gnomecanvaspixbuf gnomeui` $OAF_CFLAGS"
AC_SUBST(BONOBO_GNOME_LIBS)
AC_SUBST(BONOBO_GNOME_CFLAGS)

BONOBO_HTML_GNOME_LIBS="`gnome-config --libs oaf bonobox_print libglade gdk_pixbuf gtkhtml gnomecanvaspixbuf gnomeui ` $THREAD_LIBS"
BONOBO_HTML_GNOME_CFLAGS="`gnome-config --cflags oaf bonobox_print libglade gdk_pixbuf gtkhtml gnomecanvaspixbuf gnomeui ` $THREAD_CFLAGS"
AC_SUBST(BONOBO_HTML_GNOME_LIBS)
AC_SUBST(BONOBO_HTML_GNOME_CFLAGS)

GNOME_PRINT_LIBS=`gnome-config --libs print`
GNOME_PRINT_CFLAGS=`gnome-config --cflags print`
AC_SUBST(GNOME_PRINT_LIBS)
AC_SUBST(GNOME_PRINT_CFLAGS)

BONOBO_CONF_CFLAGS="`gnome-config --cflags bonobo_conf`"
BONOBO_CONF_LIBS="`gnome-config --libs bonobo_conf`"
AC_SUBST(BONOBO_CONF_CFLAGS)
AC_SUBST(BONOBO_CONF_LIBS)

GTKHTML_CFLAGS="`gnome-config --cflags gtkhtml`"
GTKHTML_LIBS="`gnome-config --libs gtkhtml`"
GTKHTML_DATADIR=`gnome-config --moddatadir gtkhtml`
AC_SUBST(GTKHTML_CFLAGS)
AC_SUBST(GTKHTML_LIBS)
AC_SUBST(GTKHTML_DATADIR)

GNOME_VFS_LIBS="`gnome-config --libs vfs`"
GNOME_VFS_CFLAGS="`gnome-config --cflags vfs`"
AC_SUBST(GNOME_VFS_LIBS)
AC_SUBST(GNOME_VFS_CFLAGS)

BONOBO_VFS_GNOME_LIBS="`gnome-config --libs oaf bonobox libglade gdk_pixbuf gnomecanvaspixbuf vfs gnomeui `"
BONOBO_VFS_GNOME_CFLAGS="`gnome-config --cflags oaf bonobox libglade gdk_pixbuf gnomecanvaspixbuf vfs gnomeui `"
AC_SUBST(BONOBO_VFS_GNOME_LIBS)
AC_SUBST(BONOBO_VFS_GNOME_CFLAGS)

CAMEL_CFLAGS="`gnome-config --cflags gal xml` $THREADS_CFLAGS"
CAMEL_LIBS="`gnome-config --libs gal xml` $THREADS_LIBS"
AC_SUBST(CAMEL_CFLAGS)
AC_SUBST(CAMEL_LIBS)

camel_providerdir='$(libdir)/evolution/camel-providers/'$EVOLUTION_MAJOR_VERSION.$EVOLUTION_MINOR_VERSION
AC_SUBST(camel_providerdir)

MAILER_CFLAGS="`gnome-config --cflags gtkhtml libglade gdk_pixbuf gnomecanvaspixbuf gnomeui gal bonobo_conf bonobox bonobox_print vfs oaf` $THREADS_CFLAGS"
MAILER_LIBS="`gnome-config --libs gtkhtml libglade gdk_pixbuf gnomecanvaspixbuf gnomeui gal bonobo_conf bonobox bonobox_print vfs oaf` $THREADS_LIBS"
AC_SUBST(MAILER_CFLAGS)
AC_SUBST(MAILER_LIBS)

dnl ******************************
dnl Pilot checking
dnl ******************************
AC_ARG_ENABLE(pilot-conduits, 
[  --enable-pilot-conduits=[no/yes] Enable support for building pilot conduits.],,enable_pilot_conduits=no)
if test "x$enable_pilot_conduits" = "xyes"; then
	GNOME_PILOT_CHECK

	CFLAGS_save="$CFLAGS"
	CFLAGS="$CFLAGS $PISOCK_CFLAGS"
	LDFLAGS_save="$LDFLAGS"
	LDFLAGS="$LDFLAGS $PISOCK_LIBS"

	AC_CACHE_CHECK([if pilot-link handles UTF-8 conversions], ac_cv_pilot_link_utf8, AC_TRY_RUN([

#include <stdlib.h>
#include <string.h>
#include <pi-util.h>

int main (int argc, char **argv)
{
	const char *utf8 = "\x66\x66\x66\x66\x66\x66\x66\xC2\xA9";
	size_t utf8_real_len = strlen (utf8);
	char *pstring;	

	if (convert_ToPilotChar ("UTF-8", utf8, utf8_real_len, &pstring) == -1)
	        exit (1);

	exit (0);
}
], ac_cv_pilot_link_utf8=yes, ac_cv_pilot_link_utf8=no, ac_cv_pilot_link_utf8=no))

	CFLAGS="$CFLAGS_save"
	LDFLAGS="$LDFLAGS_save"

	if test "$ac_cv_pilot_link_utf8" = no; then
		AC_MSG_ERROR(evolution requires pilot-link to have working UTF-8 conversion routines)
	fi
fi
AM_CONDITIONAL(ENABLE_PILOT_CONDUITS, test "x$enable_pilot_conduits" = "xyes")
if test x$enable_pilot_conduits = xyes; then
   msg_pilot=yes
else
   msg_pilot=no
fi

dnl ********
dnl Kerberos
dnl ********
AC_ARG_WITH(krb5, [  --with-krb5=PREFIX      Location of Kerberos 5 libs/includes])
AC_ARG_WITH(krb4, [  --with-krb4=PREFIX      Location of Kerberos 4 libs/includes])
msg_krb5=no
if test ${with_krb5:=no} != no; then
	LDFLAGS_save="$LDFLAGS"

	mitlibs="-lkrb5 -lk5crypto -lcom_err"
	heimlibs="-lkrb5 -lcrypto -lasn1 -lcom_err -lroken"
	AC_CACHE_CHECK([for Kerberos 5], ac_cv_lib_kerberos5,
	[
		LDFLAGS="$LDFLAGS -L$with_krb5/lib $mitlibs"
		AC_TRY_LINK_FUNC(krb5_init_context, ac_cv_lib_kerberos5="$mitlibs",
		[
			LDFLAGS="$LDFLAGS_save -L$with_krb5/lib $heimlibs"
			AC_TRY_LINK_FUNC(krb5_init_context, ac_cv_lib_kerberos5="$heimlibs", ac_cv_lib_kerberos5=no)
		])
		LDFLAGS="$LDFLAGS_save"
	])
	if test "$ac_cv_lib_kerberos5" != no; then
		AC_DEFINE(HAVE_KRB5)
		msg_krb5=yes
		KRB5_CFLAGS="-I$with_krb5/include/krb5"
		KRB5_LDFLAGS="-L$with_krb5/lib $ac_cv_lib_kerberos5"
	fi
else
	AC_MSG_CHECKING(for Kerberos 5)
	AC_MSG_RESULT($with_krb5)
fi

msg_krb4=no
if test x${with_krb4:=no} != xno; then
	LDFLAGS_save="$LDFLAGS"
	AC_CACHE_CHECK(for Kerberos 4, ac_cv_lib_kerberos4,
	[
		ac_cv_lib_kerberos4=no

		case $ac_cv_lib_kerberos5 in
		*k5crypto*)
			# Look for MIT krb5 compat krb4
			LDFLAGS="$LDFLAGS -L$with_krb4/lib -lkrb4 -ldes425 $KRB5_LDFLAGS"
			AC_TRY_LINK_FUNC(krb_mk_req, ac_cv_lib_kerberos4="-lkrb4 -ldes425 $KRB5_LDFLAGS")
			;;
		esac

		if test "$ac_cv_lib_kerberos4" = no; then
			# Look for KTH krb4
			LDFLAGS="$LDFLAGS_save -L$with_krb4/lib -lkrb -lcrypto -lcom_err -lroken"
			AC_TRY_LINK_FUNC(krb_mk_req, ac_cv_lib_kerberos4="-lkrb -lcrypto -lcom_err -lroken")
		fi
		if test "$ac_cv_lib_kerberos4" = no; then
			# Look for old MIT krb4
			LDFLAGS="$LDFLAGS_save -L$with_krb4/lib -lkrb"
			AC_TRY_LINK_FUNC(krb_mk_req, ac_cv_lib_kerberos4=-lkrb,
			[
				LDFLAGS="$LDFLAGS -ldes"
				AC_TRY_LINK_FUNC(krb_mk_req, ac_cv_lib_kerberos4="-lkrb -ldes")
			])
		fi
	])
	LDFLAGS="$LDFLAGS_save"
	if test "$ac_cv_lib_kerberos4" != no; then
		AC_DEFINE(HAVE_KRB4)
		msg_krb4=yes
		if test -f "$with_krb4/include/krb.h" -o -f "$with_krb4/include/port-sockets.h"; then
			KRB4_CFLAGS="-I$with_krb4/include"
		else
			KRB4_CFLAGS="-I$with_krb4/include/kerberosIV"
		fi
		KRB4_LDFLAGS="-L$with_krb4/lib $ac_cv_lib_kerberos4"

		CFLAGS_save="$CFLAGS"
		CFLAGS="$CFLAGS $KRB4_CFLAGS"
		AC_TRY_COMPILE([#include "krb.h"
		int krb_sendauth;
		],[return 0],[AC_DEFINE(NEED_KRB_SENDAUTH_PROTO)],)
		CFLAGS="$CFLAGS_save"
	fi
else
	AC_MSG_CHECKING(for Kerberos 4)
	AC_MSG_RESULT(${with_krb4})
fi

AC_SUBST(KRB5_CFLAGS)
AC_SUBST(KRB5_LDFLAGS)
AC_SUBST(KRB4_CFLAGS)
AC_SUBST(KRB4_LDFLAGS)


dnl ==========================
dnl Pedantic PGP/MIME
dnl ==========================
AC_ARG_ENABLE(pedantic-pgp-mime, 
[  --enable-pedantic-pgp-mime=[no/yes] Enable pedantic PGP/MIME handling (not recommended)],,enable_pedantic_pgp_mime=no)
if test "x$enable_pedantic_pgp_mime" = "xyes"; then
	AC_DEFINE(ENABLE_PEDANTIC_PGPMIME)
fi


dnl ********************************************************************************
dnl security extension support (SSL and S/MIME)
dnl
dnl The following voodoo does detection of mozilla libraries (nspr and nss) 
dnl needed by Camel (SSL and S/MIME).
dnl
dnl The Evolution security extensions are only built if these libraries are found
dnl ********************************************************************************
msg_ssl=no
AC_ARG_WITH(nspr-includes, [  --with-nspr-includes=PREFIX     Location of Mozilla nspr4 includes.],
	with_nspr_includes="$withval", with_nspr_includes="/usr/include/nspr")
have_nspr_includes="no"
if test "x${with_nspr_includes}" != "xno"; then
	CPPFLAGS_save="$CPPFLAGS"
	
	AC_MSG_CHECKING(for Mozilla nspr4 includes in $with_nspr_includes)
	AC_MSG_RESULT("")
	
	CPPFLAGS="$CPPFLAGS -I$with_nspr_includes"
	AC_CHECK_HEADERS(nspr.h prio.h, [ moz_nspr_includes="yes" ])
	CPPFLAGS="$CPPFLAGS_save"
	
	if test "x{$moz_nspr_includes}" != "xno" -a "x{$moz_nspr_includes}" != "x" ; then
		have_nspr_includes="yes"
		NSPR_CFLAGS="-I$with_nspr_includes"
	fi
else
	AC_MSG_CHECKING(for Mozilla nspr4 includes)
	AC_MSG_RESULT(no)
fi

AC_ARG_WITH(nspr-libs, [  --with-nspr-libs=PREFIX     Location of Mozilla nspr4 libs.],
	with_nspr_libs="$withval")
have_nspr_libs="no"
if test "x${with_nspr_libs}" != "xno" -a "x${have_nspr_includes}" != "xno"; then
	CFLAGS_save="$CFLAGS"
	LDFLAGS_save="$LDFLAGS"
	
	nsprlibs="-lplc4 -lplds4 -lnspr4 $PTHREAD_LIB"
	AC_CACHE_CHECK([for Mozilla nspr libraries], moz_nspr_libs,
	[
		CFLAGS="$CFLAGS $NSPR_CFLAGS"
		
		if test "x${with_nspr_libs}" != "x"; then
			LDFLAGS="$LDFLAGS -L$with_nspr_libs $nsprlibs"
		else
			LDFLAGS="$LDFLAGS $nsprlibs"
		fi
		
		AC_TRY_LINK_FUNC(PR_Init, moz_nspr_libs="yes", moz_nspr_libs="no")
		CFLAGS="$CFLAGS_save"
		LDFLAGS="$LDFLAGS_save"
	])
	if test "x$moz_nspr_libs" != "xno"; then
		have_nspr_libs="yes"
		NSPR_LDFLAGS="-L$with_nspr_libs $nsprlibs"
	else
		NSPR_CLFAGS=""
	fi
else
	AC_MSG_CHECKING(for Mozilla nspr4 libraries)
	AC_MSG_RESULT(no)
fi

AC_ARG_WITH(nss-includes, [  --with-nss-includes=PREFIX     Location of Mozilla nss3 includes.],
	with_nss_includes="$withval", with_nss_includes="/usr/include/moznss")
if test "x${with_nss_includes}" != "xno" -a "x${have_nspr_libs}" != "xno"; then
	CPPFLAGS_save="$CPPFLAGS"
	
	AC_MSG_CHECKING(for Mozilla nss3 includes in $with_nss_includes)
	AC_MSG_RESULT("")

        if test "x${with_nspr_includes}" != "x"; then
	        CPPFLAGS="$CPPFLAGS -I$with_nspr_includes -I$with_nss_includes"
        else
	        CPPFLAGS="$CPPFLAGS -I$with_nss_includes"
        fi

	AC_CHECK_HEADERS(nss.h ssl.h smime.h,
		[ have_nss_includes="yes" ], 
		[ have_nss_includes="no" ])

	CPPFLAGS="$CPPFLAGS_save"

	if test "x${have_nss_includes}" = xyes ; then	
		have_nss_includes="yes"
		NSS_CFLAGS="-I$with_nss_includes"
	else
		NSPR_CFLAGS=""
		NSPR_LDFLAGS=""
	fi
else
	AC_MSG_CHECKING(for Mozilla nss3 includes)
	AC_MSG_RESULT(no)
fi

AC_ARG_WITH(nss-libs, [  --with-nss-libs=PREFIX     	Location of Mozilla nss3 libs.],
	with_nss_libs="$withval")
if test "x${with_nss_libs}" != "xno" -a "x${have_nss_includes}" != "xno"; then
	LDFLAGS_save="$LDFLAGS"
	
	nsprlibs="-lplc4 -lplds4 -lnspr4 $PTHREAD_LIB"
	nsslibs="-lssl3 -lsmime3 -lnss3"
	AC_CACHE_CHECK([for Mozilla nss libraries], moz_nss_libs,
	[
		LDFLAGS="$LDFLAGS -L$with_nspr_libs $nsprlibs -L$with_nss_libs $nsslibs"
		AC_TRY_LINK_FUNC(NSS_Init, moz_nss_libs="yes", moz_nss_libs="no")
		LDFLAGS="$LDFLAGS_save"
	])
	if test "$moz_nss_libs" != no; then
		AC_DEFINE(HAVE_NSS)
		AC_DEFINE(HAVE_SSL)
		msg_ssl="yes (Mozilla NSS)"
		NSS_LDFLAGS="-L$with_nss_libs $nsslibs"
	else
		NSS_CFLAGS=""
		NSPR_CFLAGS=""
		NSPR_LDFLAGS=""
	fi
else
	AC_MSG_CHECKING(for Mozilla nss libraries)
	AC_MSG_RESULT(no)
fi

AC_SUBST(NSPR_CFLAGS)
AC_SUBST(NSPR_LDFLAGS)
AC_SUBST(NSS_CFLAGS)
AC_SUBST(NSS_LDFLAGS)

##################################################
# Check for gtk-doc.
##################################################

AC_ARG_WITH(html-dir, [  --with-html-dir=PATH path to installed docs ])

if test "x$with_html_dir" = "x" ; then
  HTML_DIR='${datadir}/gnome/html'
else
  HTML_DIR=$with_html_dir
fi

AC_SUBST(HTML_DIR)

AC_CHECK_PROG(GTKDOC, gtkdoc-mkdb, true, false)

gtk_doc_min_version=0.6
if $GTKDOC ; then 
    gtk_doc_version=`gtkdoc-mkdb --version`
    AC_MSG_CHECKING([gtk-doc version ($gtk_doc_version) >= $gtk_doc_min_version])
    if perl <<EOF ; then
      exit (("$gtk_doc_version" =~ /^[[0-9]]+\.[[0-9]]+$/) &&
            ("$gtk_doc_version" >= "$gtk_doc_min_version") ? 0 : 1);
EOF
      AC_MSG_RESULT(yes)
   else
      AC_MSG_RESULT(no)
      GTKDOC=false
   fi
fi

dnl Let people disable the gtk-doc stuff.
AC_ARG_ENABLE(gtk-doc, [  --enable-gtk-doc  Use gtk-doc to build documentation [default=auto]], enable_gtk_doc="$enableval", enable_gtk_doc=auto)

if test x$enable_gtk_doc = xauto ; then
  if test x$GTKDOC = xtrue ; then
    enable_gtk_doc=yes
  else
    enable_gtk_doc=no 
  fi
fi

AM_CONDITIONAL(ENABLE_GTK_DOC, test x$enable_gtk_doc = xyes)

dnl ******************
dnl Sub-version number
dnl ******************
AC_ARG_WITH(sub-version, [  --with-sub-version=VERSION Specify a sub-version string])
AC_DEFINE_UNQUOTED(SUB_VERSION, "$with_sub_version")

dnl ********************
dnl KDE applnk directory
dnl ********************
AC_ARG_WITH(kde-applnk-path, [  --with-kde-applnk-path=PATH    Location of KDE applnk files],
            [with_kde_applnk_path="$withval"])
AC_MSG_CHECKING(for the KDE applnk directory)
if test -z "$with_kde_applnk_path"; then
	with_kde_applnk_path="$prefix/share/applnk"
fi
if test -d "$with_kde_applnk_path" ; then
	AC_MSG_RESULT("$with_kde_applnk_path" found)
	AC_DEFINE(HAVE_KDE_APPLNK)
	KDE_APPLNK_DIR="$with_kde_applnk_path"
else
	AC_MSG_RESULT(not found)
	KDE_APPLNK_DIR=""
fi
AM_CONDITIONAL(HAVE_KDE_APPLNK, test x"$KDE_APPLNK_DIR" != x)
AC_SUBST(KDE_APPLNK_DIR)

dnl ******************
dnl CDE dtappintegrate
dnl ******************

AC_ARG_WITH(cde-path, [  --with-cde-path=PATH   Location of CDE installation],
	    [with_cde_path="$withval"])
if test -z "$with_cde_path"; then
	with_cde_path="/usr/dt"
fi

AC_MSG_CHECKING(for dtappintegrate)
if test -x "$with_cde_path/bin/dtappintegrate" ; then
	DTAPPINTEGRATE="$with_cde_path/bin/dtappintegrate"
else
	DTAPPINTEGRATE="no"
fi
AC_MSG_RESULT([$DTAPPINTEGRATE])

AC_SUBST(DTAPPINTEGRATE)
AM_CONDITIONAL(HAVE_DTAPPINTEGRATE, test "x$DTAPPINTEGRATE" != "xno")

dnl ****************************************************
dnl GNOME_PREFIX is is needed by shell/evolution-nognome
dnl ****************************************************

GNOME_PREFIX="`gnome-config --prefix`"
AC_SUBST(GNOME_PREFIX)

dnl ******************************
dnl Makefiles
dnl ******************************

AC_CONFIG_SUBDIRS(libical)

EVOLUTION_DIR=`(cd $srcdir; pwd)`
AC_SUBST(EVOLUTION_DIR)

AC_OUTPUT([
Makefile
addressbook/Makefile
addressbook/backend/Makefile
addressbook/backend/ebook/Makefile
addressbook/backend/idl/Makefile
addressbook/backend/pas/Makefile
addressbook/conduit/Makefile
addressbook/gui/Makefile
addressbook/gui/component/Makefile
addressbook/gui/component/select-names/Makefile
addressbook/gui/contact-editor/Makefile
addressbook/gui/contact-list-editor/Makefile
addressbook/gui/merging/Makefile
addressbook/gui/search/Makefile
addressbook/gui/widgets/Makefile
addressbook/printing/Makefile
art/Makefile
calendar/Makefile
calendar/cal-client/Makefile
calendar/cal-util/Makefile
calendar/conduits/Makefile
calendar/conduits/calendar/Makefile
calendar/conduits/todo/Makefile
calendar/gui/Makefile
calendar/gui/alarm-notify/Makefile
calendar/gui/dialogs/Makefile
calendar/idl/Makefile
calendar/importers/Makefile
calendar/pcs/Makefile
camel/Makefile
camel/providers/Makefile
camel/providers/imap/Makefile
camel/providers/local/Makefile
camel/providers/nntp/Makefile
camel/providers/pop3/Makefile
camel/providers/sendmail/Makefile
camel/providers/smtp/Makefile
camel/tests/Makefile
camel/tests/folder/Makefile
camel/tests/lib/Makefile
camel/tests/message/Makefile
camel/tests/mime-filter/Makefile
camel/tests/misc/Makefile
camel/tests/smime/Makefile
camel/tests/stream/Makefile
composer/Makefile
data/Makefile
data/cde_app_root/Makefile
data/cde_app_root/dt/Makefile
data/cde_app_root/dt/appconfig/Makefile
data/cde_app_root/dt/appconfig/appmanager/Makefile
data/cde_app_root/dt/appconfig/appmanager/C/Makefile
data/cde_app_root/dt/appconfig/appmanager/C/Ximian/Makefile
data/cde_app_root/dt/appconfig/icons/Makefile
data/cde_app_root/dt/appconfig/icons/C/Makefile
data/cde_app_root/dt/appconfig/types/Makefile
data/cde_app_root/dt/appconfig/types/C/Makefile
data/cde_app_root/dt/appconfig/types/C/Ximian.dt
default_user/Makefile
default_user/local/Makefile
default_user/local/Calendar/Makefile
default_user/local/Contacts/Makefile
default_user/local/Drafts/Makefile
default_user/local/Inbox/Makefile
default_user/local/Outbox/Makefile
default_user/local/Sent/Makefile
default_user/local/Tasks/Makefile
default_user/local/Trash/Makefile
doc/Makefile
doc/devel/Makefile
doc/devel/calendar/Makefile
doc/devel/calendar/cal-client/Makefile
doc/devel/calendar/cal-util/Makefile
e-util/Makefile
e-util/ename/Makefile
filter/Makefile
help/Makefile
help/C/Makefile
help/no/Makefile
importers/Makefile
intl/Makefile
libibex/Makefile
libversit/Makefile
libwombat/Makefile
macros/Makefile
mail/Makefile
mail/importers/Makefile
my-evolution/Makefile
omf-install/Makefile
po/Makefile.in
shell/Makefile
shell/evolution-nognome
shell/glade/Makefile
shell/importer/Makefile
tools/Makefile
ui/Makefile
views/Makefile
views/addressbook/Makefile
views/calendar/Makefile
views/mail/Makefile
views/tasks/Makefile
widgets/Makefile
widgets/e-timezone-dialog/Makefile
widgets/menus/Makefile
widgets/misc/Makefile
wombat/Makefile
])

if test "x$with_sub_version" != "x"; then
echo "
	Evolution ($with_sub_version) has been configured as follows: "
else
echo "
	Evolution has been configured as follows: "
fi

echo "
	Mail Directory:   $system_mail_dir, $system_mail_perm
	LDAP support:     $msg_ldap $msg_ldap_linktype"
if test "$msg_nntp" = "yes"; then
echo "\
	NNTP support:     $msg_nntp"
fi
echo "\
	Pilot conduits:   $msg_pilot
	Kerberos 4/5:     $msg_krb4/$msg_krb5
	SSL support:      $msg_ssl
	Dot Locking:	  $msg_dot
	File Locking:	  $msg_file
	Gtk-doc:	  $enable_gtk_doc"

if test x$enable_gtk_doc = xyes; then
echo "
	Programming documentation files will be built automatically.
"
else
echo "
	Programming documentation files will not be built.
	You may want to install the gtk-doc package
	so that you will get the Evolution Developer's Guide.
"
fi
