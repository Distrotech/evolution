/* -*- Mode: IDL; tab-width: 8; indent-tabs-mode: t; c-basic-offset: 8 -*- */
/*
 * Interface for the Evolution shell.
 *
 * Authors:
 *   Ettore Perazzoli <ettore@helixcode.com>
 *
 * Copyright (C) 2000 Helix Code, Inc.
 */

#include <Bonobo.idl>

module Evolution {
	interface ShellComponent;

	interface FolderSelectionListener;

	interface Shell : Bonobo::Unknown {
		exception NotFound {};
		exception Busy {};

		/**
		 * get_component_for_type:
		 * @type: name of a valid folder type
		 *
		 * Get the shell component associated with a specific folder type.
		 *
		 * Return value: the Evolution::ShellComponent interface for the component that
		 * handles @type.
		 */
		ShellComponent get_component_for_type (in string type)
			raises (NotFound);

		typedef sequence<string> FolderTypeList;

		/**
		 * user_select_folder:
		 * @listener: a listener interface to report the answer of the user.
		 * @title: title for the folder selector dialog
		 * @default_folder: physical or `evolution:' URI for the folder that must be
		 * selected by default, when the dialog is popped up
		 * @possible_types: list of the names of the types of folders that are allowed
		 *
		 * Pop up a folder selection dialog from which the user can select a folder.
		 * Initially, the @default_folder is selected.  The user can also create a new
		 * folder by using the "New..." button.  The dialog only lets the user choose
		 * a folder whose type is listed in @possible_types.
		 */
		void user_select_folder (in FolderSelectionListener listener,
					 in string title,
					 in string default_folder,
					 in FolderTypeList possible_types)
			raises (Busy);
	};

	interface FolderSelectionListener {
		void selected (in string uri, in string physical_uri);
		void cancel ();
	};
};
