<MACRO>
<NAME>EXECUTIVE_SUMMARY_CLIENT_TYPE</NAME>
#define EXECUTIVE_SUMMARY_CLIENT_TYPE (executive_summary_client_get_type ())
</MACRO>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_CLIENT</NAME>
#define EXECUTIVE_SUMMARY_CLIENT(obj) (GTK_CHECK_CAST ((obj), EXECUTIVE_SUMMARY_CLIENT_TYPE, ExecutiveSummaryClient))
</MACRO>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_CLIENT_CLASS</NAME>
#define EXECUTIVE_SUMMARY_CLIENT_CLASS(klass) (GTK_CHECK_CLASS_CAST ((klass), EXECUTIVE_SUMMARY_CLIENT_TYPE, ExecutiveSummaryClientClass))
</MACRO>
<MACRO>
<NAME>IS_EXECUTIVE_SUMMARY_CLIENT</NAME>
#define IS_EXECUTIVE_SUMMARY_CLIENT(obj) (GTK_CHECK_TYPE ((obj), EXECUTIVE_SUMMARY_CLIENT_TYPE))
</MACRO>
<MACRO>
<NAME>IS_EXECUTIVE_SUMMARY_CLIENT_CLASS</NAME>
#define IS_EXECUTIVE_SUMMARY_CLIENT_CLASS(klass) (GTK_CHECK_CLASS_TYPE ((obj), EXECUTIVE_SUMMARY_CLIENT_TYPE))
</MACRO>
<STRUCT>
<NAME>ExecutiveSummaryClientPrivate</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryClient</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryClientClass</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryClient</NAME>
struct ExecutiveSummaryClient {
	BonoboObjectClient parent;
	
	ExecutiveSummaryClientPrivate *private;
};
</STRUCT>
<FUNCTION>
<NAME>executive_summary_client_get_type</NAME>
<RETURNS>GtkType  </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_client_construct</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryClient *client,CORBA_Object object
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_client_set_title</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryClient *client,int id,const char *title
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_client_set_icon</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryClient *client,int id,const char *icon
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_client_flash</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryClient *client,int id
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_client_update</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryClient *client,int id,const char *html
</FUNCTION>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_COMPONENT_CLIENT_TYPE</NAME>
#define EXECUTIVE_SUMMARY_COMPONENT_CLIENT_TYPE (executive_summary_component_client_get_type ())
</MACRO>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_COMPONENT_CLIENT</NAME>
#define EXECUTIVE_SUMMARY_COMPONENT_CLIENT(obj) (GTK_CHECK_CAST ((obj), EXECUTIVE_SUMMARY_COMPONENT_CLIENT_TYPE, ExecutiveSummaryComponentClient))
</MACRO>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_COMPONENT_CLIENT_CLASS</NAME>
#define EXECUTIVE_SUMMARY_COMPONENT_CLIENT_CLASS(klass) (GTK_CHECK_CLASS_CAST ((klass), EXECUTIVE_SUMMARY_COMPONENT_CLIENT_TYPE, ExecutiveSummaryComponentClientClass))
</MACRO>
<MACRO>
<NAME>IS_EXECUTIVE_SUMMARY_COMPONENT_CLIENT</NAME>
#define IS_EXECUTIVE_SUMMARY_COMPONENT_CLIENT(obj) (GTK_CHECK_TYPE ((obj), EXECUTIVE_SUMMARY_COMPONENT_CLIENT_TYPE))
</MACRO>
<MACRO>
<NAME>IS_EXECUTIVE_SUMMARY_COMPONENT_CLIENT_CLASS</NAME>
#define IS_EXECUTIVE_SUMMARY_COMPONENT_CLIENT_CLASS(klass) (GTK_CHECK_CLASS_TYPE ((obj), EXECUTIVE_SUMMARY_COMPONENT_CLIENT_TYPE))
</MACRO>
<STRUCT>
<NAME>ExecutiveSummaryComponentClientPrivate</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryComponentClient</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryComponentClientClass</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryComponentClient</NAME>
struct ExecutiveSummaryComponentClient {
  BonoboObjectClient parent;

  ExecutiveSummaryComponentClientPrivate *private;
};
</STRUCT>
<FUNCTION>
<NAME>executive_summary_component_client_get_type</NAME>
<RETURNS>GtkType  </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_client_new</NAME>
<RETURNS>ExecutiveSummaryComponentClient  *</RETURNS>
const char *id
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_client_set_owner</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryComponentClient *client,ExecutiveSummary *summary
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_client_unset_owner</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryComponentClient *client
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_client_supports</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryComponentClient *client,gboolean *bonobo,gboolean *html
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_client_configure</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryComponentClient *client,ExecutiveSummaryComponentView *view
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_client_destroy_view</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryComponentClient *client,ExecutiveSummaryComponentView *view
</FUNCTION>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLIENT_TYPE</NAME>
#define EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLIENT_TYPE (executive_summary_component_factory_client_get_type ())
</MACRO>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLIENT</NAME>
#define EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLIENT(obj) (GTK_CHECK_CAST ((obj), EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLIENT_TYPE, ExecutiveSummaryComponentFactoryClient))
</MACRO>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLIENT_CLASS</NAME>
#define EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLIENT_CLASS(klass) (GTK_CHECK_CLASS_CAST ((klass), EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLIENT_TYPE, ExecutiveSummaryComponentFactoryClientClass))
</MACRO>
<MACRO>
<NAME>IS_EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLIENT</NAME>
#define IS_EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLIENT(obj) (GTK_CHECK_TYPE ((obj), EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLIENT_TYPE))
</MACRO>
<MACRO>
<NAME>IS_EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLIENT_CLASS</NAME>
#define IS_EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLIENT_CLASS(klass) (GTK_CHECK_CLASS_TYPE ((obj), EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLIENT_TYPE))
</MACRO>
<STRUCT>
<NAME>ExecutiveSummaryComponentFactoryClientPrivate</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryComponentFactoryClient</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryComponentFactoryClientClass</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryComponentFactoryClient</NAME>
struct ExecutiveSummaryComponentFactoryClient {
  BonoboObjectClient parent;

  ExecutiveSummaryComponentFactoryClientPrivate *private;
};
</STRUCT>
<FUNCTION>
<NAME>executive_summary_component_factory_client_get_type</NAME>
<RETURNS>GtkType  </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_factory_client_construct</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryComponentFactoryClient *client,CORBA_Object corba_object
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_factory_client_new</NAME>
<RETURNS>ExecutiveSummaryComponentFactoryClient  *</RETURNS>
const char *id
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_factory_client_create_view</NAME>
<RETURNS>CORBA_Object  </RETURNS>
ExecutiveSummaryComponentFactoryClient *client
</FUNCTION>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_COMPONENT_VIEW_TYPE</NAME>
#define EXECUTIVE_SUMMARY_COMPONENT_VIEW_TYPE (executive_summary_component_view_get_type ())
</MACRO>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_COMPONENT_VIEW</NAME>
#define EXECUTIVE_SUMMARY_COMPONENT_VIEW(obj) (GTK_CHECK_CAST ((obj), EXECUTIVE_SUMMARY_COMPONENT_VIEW_TYPE, ExecutiveSummaryComponentView))
</MACRO>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_COMPONENT_VIEW_CLASS</NAME>
#define EXECUTIVE_SUMMARY_COMPONENT_VIEW_CLASS(klass) (GTK_CHECK_CLASS_CAST ((klass), EXECUTIVE_SUMMARY_COMPONENT_VIEW_TYPE, ExecutiveSummaryComponentClass))
</MACRO>
<MACRO>
<NAME>IS_EXECUTIVE_SUMMARY_COMPONENT_VIEW</NAME>
#define IS_EXECUTIVE_SUMMARY_COMPONENT_VIEW(obj) (GTK_CHECK_TYPE ((obj), EXECUTIVE_SUMMARY_COMPONENT_VIEW_TYPE))
</MACRO>
<MACRO>
<NAME>IS_EXECUTIVE_SUMMARY_COMPONENT_VIEW_CLASS</NAME>
#define IS_EXECUTIVE_SUMMARY_COMPONENT_VIEW_CLASS(klass) (GTK_CHECK_CLASS_TYPE ((obj), EXECUTIVE_SUMMARY_COMPONENT_VIEW_CLASS_TYPE))
</MACRO>
<STRUCT>
<NAME>ExecutiveSummaryComponentViewPrivate</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryComponentView</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryComponentViewClass</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryComponentView</NAME>
struct ExecutiveSummaryComponentView {
	GtkObject object;
	
	ExecutiveSummaryComponentViewPrivate *private;
};
</STRUCT>
<FUNCTION>
<NAME>executive_summary_component_view_get_type</NAME>
<RETURNS>GtkType  </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_view_construct</NAME>
<RETURNS>void</RETURNS>
ExecutiveSummaryComponentView *view,ExecutiveSummaryComponent *component,BonoboControl *control,const char *html,const char *title,const char *icon
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_view_new</NAME>
<RETURNS>ExecutiveSummaryComponentView  *</RETURNS>
ExecutiveSummaryComponent *component,BonoboControl *control,const char *html,const char *title,const char *icon
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_view_set_title</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryComponentView *view,const char *title
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_view_get_title</NAME>
<RETURNS>const char  *</RETURNS>
ExecutiveSummaryComponentView *view
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_view_set_icon</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryComponentView *view,const char *icon
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_view_get_icon</NAME>
<RETURNS>const char  *</RETURNS>
ExecutiveSummaryComponentView *view
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_view_flash</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryComponentView *view
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_view_set_html</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryComponentView *view,const char *html
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_view_get_html</NAME>
<RETURNS>const char  *</RETURNS>
ExecutiveSummaryComponentView *view
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_view_get_control</NAME>
<RETURNS>BonoboObject  *</RETURNS>
ExecutiveSummaryComponentView *view
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_view_get_id</NAME>
<RETURNS>int  </RETURNS>
ExecutiveSummaryComponentView *view
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_view_set_id</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryComponentView *view,int id
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_view_configure</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryComponentView *view
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_view_set_objref</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryComponentView *view,Bonobo_Control objref
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_view_get_widget</NAME>
<RETURNS>GtkWidget  *</RETURNS>
ExecutiveSummaryComponentView *view
</FUNCTION>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_COMPONENT_TYPE</NAME>
#define EXECUTIVE_SUMMARY_COMPONENT_TYPE (executive_summary_component_get_type ())
</MACRO>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_COMPONENT</NAME>
#define EXECUTIVE_SUMMARY_COMPONENT(obj) (GTK_CHECK_CAST ((obj), EXECUTIVE_SUMMARY_COMPONENT_TYPE, ExecutiveSummaryComponent))
</MACRO>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_COMPONENT_CLASS</NAME>
#define EXECUTIVE_SUMMARY_COMPONENT_CLASS(klass) (GTK_CHECK_CLASS_CAST ((klass), EXECUTIVE_SUMMARY_COMPONENT_TYPE, ExecutiveSummaryComponentClass))
</MACRO>
<MACRO>
<NAME>IS_EXECUTIVE_SUMMARY_COMPONENT</NAME>
#define IS_EXECUTIVE_SUMMARY_COMPONENT(obj) (GTK_CHECK_TYPE ((obj), EXECUTIVE_SUMMARY_COMPONENT_TYPE))
</MACRO>
<MACRO>
<NAME>IS_EXECUTIVE_SUMMARY_COMPONENT_CLASS</NAME>
#define IS_EXECUTIVE_SUMMARY_COMPONENT_CLASS(klass) (GTK_CHECK_CLASS_TYPE ((obj), EXECUTIVE_SUMMARY_COMPONENT_TYPE))
</MACRO>
<STRUCT>
<NAME>ExecutiveSummaryComponentPrivate</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryComponent</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryComponentClass</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryComponent</NAME>
struct ExecutiveSummaryComponent {
  BonoboObject parent;

  ExecutiveSummaryComponentPrivate *private;
};
</STRUCT>
<FUNCTION>
<NAME>executive_summary_component_get_type</NAME>
<RETURNS>GtkType  </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_new</NAME>
<RETURNS>BonoboObject  *</RETURNS>
void
</FUNCTION>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_COMPONENT_FACTORY_TYPE</NAME>
#define EXECUTIVE_SUMMARY_COMPONENT_FACTORY_TYPE (executive_summary_component_factory_get_type ())
</MACRO>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_COMPONENT_FACTORY</NAME>
#define EXECUTIVE_SUMMARY_COMPONENT_FACTORY(obj) (GTK_CHECK_CAST ((obj), EXECUTIVE_SUMMARY_COMPONENT_FACTORY_TYPE, ExecutiveSummaryComponentFactory))
</MACRO>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLASS</NAME>
#define EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLASS(klass) (GTK_CHECK_CLASS_CAST ((klass), EXECUTIVE_SUMMARY_COMPONENT_FACTORY_TYPE, ExecutiveSummaryComponentFactoryClass))
</MACRO>
<MACRO>
<NAME>IS_EXECUTIVE_SUMMARY_COMPONENT_FACTORY</NAME>
#define IS_EXECUTIVE_SUMMARY_COMPONENT_FACTORY(obj) (GTK_CHECK_TYPE ((obj), EXECUTIVE_SUMMARY_COMPONENT_FACTORY_TYPE))
</MACRO>
<MACRO>
<NAME>IS_EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLASS</NAME>
#define IS_EXECUTIVE_SUMMARY_COMPONENT_FACTORY_CLASS(klass) (GTK_CHECK_CLASS_TYPE ((obj), EXECUTIVE_SUMMARY_COMPONENT_FACTORY_TYPE))
</MACRO>
<STRUCT>
<NAME>ExecutiveSummaryComponentFactoryPrivate</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryComponentFactory</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryComponentFactoryClass</NAME>
</STRUCT>
<USER_FUNCTION>
<NAME>EvolutionServicesCreateViewFn</NAME>
<RETURNS>BonoboObject *</RETURNS>
ExecutiveSummaryComponentFactory *factory,
							 void *closure
</USER_FUNCTION>
<STRUCT>
<NAME>ExecutiveSummaryComponentFactory</NAME>
struct ExecutiveSummaryComponentFactory {
	BonoboObject parent;

	ExecutiveSummaryComponentFactoryPrivate *private;
};
</STRUCT>
<FUNCTION>
<NAME>executive_summary_component_factory_get_type</NAME>
<RETURNS>GtkType  </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_component_factory_new</NAME>
<RETURNS>BonoboObject  *</RETURNS>
EvolutionServicesCreateViewFn create_view,void *closure
</FUNCTION>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_HTML_VIEW_HTML_CHANGED</NAME>
#define EXECUTIVE_SUMMARY_HTML_VIEW_HTML_CHANGED "GNOME:Evolution:Summary:HTMLView:html_changed"
</MACRO>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_HTML_VIEW_TYPE</NAME>
#define EXECUTIVE_SUMMARY_HTML_VIEW_TYPE (executive_summary_html_view_get_type ())
</MACRO>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_HTML_VIEW</NAME>
#define EXECUTIVE_SUMMARY_HTML_VIEW(obj) (GTK_CHECK_CAST ((obj), EXECUTIVE_SUMMARY_HTML_VIEW_TYPE, ExecutiveSummaryHtmlView))
</MACRO>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_HTML_VIEW_CLASS</NAME>
#define EXECUTIVE_SUMMARY_HTML_VIEW_CLASS(klass) (GTK_CHECK_CLASS_CAST ((klass), EXECUTIVE_SUMMARY_HTML_VIEW_TYPE, ExecutiveSummaryHtmlViewClass))
</MACRO>
<MACRO>
<NAME>IS_EXECUTIVE_SUMMARY_HTML_VIEW</NAME>
#define IS_EXECUTIVE_SUMMARY_HTML_VIEW(obj) (GTK_CHECK_TYPE ((obj), EXECUTIVE_SUMMARY_HTML_VIEW_TYPE))
</MACRO>
<MACRO>
<NAME>IS_EXECUTIVE_SUMMARY_HTML_VIEW_CLASS</NAME>
#define IS_EXECUTIVE_SUMMARY_HTML_VIEW_CLASS(klass) (GTK_CHECK_CLASS_TYPE ((obj), EXECUTIVE_SUMMARY_HTML_VIEW_TYPE))
</MACRO>
<STRUCT>
<NAME>ExecutiveSummaryHtmlViewPrivate</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryHtmlView</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryHtmlViewClass</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryHtmlView</NAME>
struct ExecutiveSummaryHtmlView {
	BonoboObject parent;
	
	ExecutiveSummaryHtmlViewPrivate *private;
};
</STRUCT>
<FUNCTION>
<NAME>executive_summary_html_view_get_type</NAME>
<RETURNS>GtkType  </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_html_view_new_full</NAME>
<RETURNS>BonoboObject  *</RETURNS>
BonoboEventSource *event_source
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_html_view_new</NAME>
<RETURNS>BonoboObject  *</RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_html_view_set_html</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummaryHtmlView *view,const char *html
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_html_view_get_html</NAME>
<RETURNS>const char  *</RETURNS>
ExecutiveSummaryHtmlView *view
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_html_view_get_event_source</NAME>
<RETURNS>BonoboEventSource  *</RETURNS>
ExecutiveSummaryHtmlView *view
</FUNCTION>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_TYPE</NAME>
#define EXECUTIVE_SUMMARY_TYPE (executive_summary_get_type ())
</MACRO>
<MACRO>
<NAME>EXECUTIVE_SUMMARY</NAME>
#define EXECUTIVE_SUMMARY(obj) (GTK_CHECK_CAST ((obj), EXECUTIVE_SUMMARY_TYPE, ExecutiveSummary))
</MACRO>
<MACRO>
<NAME>EXECUTIVE_SUMMARY_CLASS</NAME>
#define EXECUTIVE_SUMMARY_CLASS(klass) (GTK_CHECK_CLASS_CAST ((klass), EXECUTIVE_SUMMARY_TYPE, ExecutiveSummaryClass))
</MACRO>
<MACRO>
<NAME>IS_EXECUTIVE_SUMMARY</NAME>
#define IS_EXECUTIVE_SUMMARY(obj) (GTK_CHECK_TYPE ((obj), EXECUTIVE_SUMMARY_TYPE))
</MACRO>
<MACRO>
<NAME>IS_EXECUTIVE_SUMMARY_CLASS</NAME>
#define IS_EXECUTIVE_SUMMARY_CLASS(klass) (GTK_CHECK_CLASS_TYPE ((obj), EXECUTIVE_SUMMARY_TYPE))
</MACRO>
<STRUCT>
<NAME>ExecutiveSummaryPrivate</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummary</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummaryClass</NAME>
</STRUCT>
<STRUCT>
<NAME>ExecutiveSummary</NAME>
struct ExecutiveSummary {
	BonoboObject parent;
	
	ExecutiveSummaryPrivate *private;
};
</STRUCT>
<FUNCTION>
<NAME>executive_summary_get_type</NAME>
<RETURNS>GtkType  </RETURNS>
void
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_construct</NAME>
<RETURNS>void  </RETURNS>
ExecutiveSummary *es,GNOME_Evolution_Summary_ViewFrame corba_object
</FUNCTION>
<FUNCTION>
<NAME>executive_summary_new</NAME>
<RETURNS>BonoboObject  *</RETURNS>
void
</FUNCTION>
